@model ResultadoModel
@if (Model != null)
{
    string clasePrincipal = "listadoRecursos";
    string claseResource = "resource-list listView";

    if (Model.MapView)
    {
        clasePrincipal = "fichaMapa";
        claseResource = "resource-list mapView";
    }
    
    <div class="@clasePrincipal">
        <div>
            @if (Model.NumeroResultadosTotal != -1)
            {
                <div id="numResultadosRemover">
                    <strong>@Model.NumeroResultadosTotal</strong>
                </div>
            }
            <div class="@claseResource">
                @if (Model.ListaResultados != null && Model.ListaResultados.Count > 0)
                {
                    foreach (ObjetoBuscadorModel resultado in Model.ListaResultados)
                    {
                        if (resultado is CommunityModel)
                        {
                            @Html.PartialView("_ResultadoComunidad", (CommunityModel)resultado)
                        }
                        if (resultado is BlogModel)
                        {
                            @Html.PartialView("_ResultadoBlog", (BlogModel)resultado)
                        }
                        else if (resultado is ResourceModel)
                        {
                            if (Model.TipoBusqueda == ResultadoModel.TiposBusquedaMVC.Contribuciones)
                            { 
                                @Html.PartialView("_ResultadoRecursoContribuciones", (ResourceModel)resultado)
                            }
                            else if (Model.TipoBusqueda == ResultadoModel.TiposBusquedaMVC.EditarRecursosPerfil)
                            { 
                                @Html.PartialView("_ResultadoRecursoMisRecursos", (ResourceModel)resultado)
                            }
                            else
                            {
                                @Html.PartialView("_ResultadoRecurso", (ResourceModel)resultado)
                            }
                        }
                        else if (resultado is ProfileModel)
                        {
                            @Html.PartialView("_ResultadoPerfil", (ProfileModel)resultado)
                        }
                        else if (resultado is GroupCardModel)
                        {
                            @Html.PartialView("_ResultadoGrupo", (GroupCardModel)resultado)
                        }
                        else if (resultado is MessageModel)
                        {
                            @Html.PartialView("_ResultadoMensaje", (MessageModel)resultado)
                        }
                        else if (resultado is CommentSearchModel)
                        {
                            if (Model.TipoBusqueda == ResultadoModel.TiposBusquedaMVC.Contribuciones)
                            { 
                                @Html.PartialView("_ResultadoComentarioContribuciones", (CommentSearchModel)resultado)}
                            else
                            {
                                @Html.PartialView("_ResultadoComentario", (CommentSearchModel)resultado)
                            }
                        }
                        else if (resultado is InvitationModel)
                        {
                            @Html.PartialView("_ResultadoInvitacion", (InvitationModel)resultado)
                        }
                        else if (resultado is ContactModel)
                        {
                            @Html.PartialView("_ResultadoContacto", (ContactModel)resultado)
                        }
                        else if (resultado is PaginaCMSModel)
                        {
                            @Html.PartialView("_ResultadoPaginaCMS", (PaginaCMSModel)resultado)
                        }
                    }
                }
                else
                {
                    <p>@Model.TextoSinResultados</p>
                }
            </div>

            @{
            //Paginador
            int numTotal = Model.NumeroResultadosTotal;
            int numResultadosPagina = Model.NumeroResultadosPagina;
            int PaginaActual = Model.NumeroPaginaActual;
            string urlNavegador = Model.UrlBusqueda;


            if (urlNavegador.Contains("?"))
            {
                string[] filtros = urlNavegador.Substring(urlNavegador.IndexOf("?") + 1).Split('&');
                urlNavegador = urlNavegador.Substring(0, urlNavegador.IndexOf("?") + 1);

                foreach (string filtro in filtros)
                {
                    if (!filtro.Contains("pagina="))
                    {
                        urlNavegador += filtro + "&";
                    }
                }
                urlNavegador = urlNavegador.Substring(0, urlNavegador.Length - 1);
            }

            if (urlNavegador.Contains("?"))
            {
                urlNavegador += "&";
            }
            else
            {
                urlNavegador += "?";
            }


            int NUM_PAG_INICIO = 3;
            int NUM_PAG_PROX_CENTRO = 2;
            int NUM_PAG_FIN = 3;

            int numPaginas = (int)Math.Ceiling((double)numTotal / (double)numResultadosPagina);


            if (numPaginas > 1)
            {
                <div id="navegadorRemover">
                    <div id="NavegadorPaginasCorreo" class="paginadorResultados">
                        <div class="pag" id="NavegadorPaginasCorreo_Pag">
                            @if (PaginaActual == 1)
                            {
                                <span class="deshabilitado primeraPagina">@Html.GetText("COMMON", "PAGANTERIOR")</span>
                            }
                            else
                            {
                                string url = urlNavegador + "pagina=1";
                                <a href="@url" name="pagina|@Html.Raw((PaginaActual - 1).ToString())" class="indiceNavegacion filtro primeraPagina">@Html.GetText("COMMON", "PAGANTERIOR")</a>
                            }

                            @{
                            //INICIO
                            for (int i = 1; i <= NUM_PAG_INICIO; i++)
                            {
                                if (i > numPaginas) //Hemos excedio el número máximo de páginas, así que dejamos de pintar.
                                {
                                    break;
                                }

                                if (i == PaginaActual)
                                {
                                <span class="actual indiceNavegacion">@i </span>
                                }
                                else
                                {
                                    string url = urlNavegador + "pagina=" + i;
                                <a href="@url" name="pagina|@i" class="indiceNavegacion filtro">@i </a>
                                }
                            }

                            if (numPaginas > NUM_PAG_INICIO) //Continuamos si ha más páginas que las que ya hemos pintado
                            {
                                int inicioRango = PaginaActual - NUM_PAG_PROX_CENTRO;
                                int finRango = PaginaActual + NUM_PAG_PROX_CENTRO;

                                if (PaginaActual < (NUM_PAG_INICIO + NUM_PAG_PROX_CENTRO + 1))
                                {
                                    inicioRango = NUM_PAG_INICIO + 1;
                                    if (PaginaActual <= NUM_PAG_INICIO) //En el rango de las primeras
                                    {
                                        finRango = PaginaActual + NUM_PAG_INICIO + NUM_PAG_PROX_CENTRO - 1;
                                    }
                                    else
                                    {
                                        finRango = NUM_PAG_INICIO + (2 * NUM_PAG_PROX_CENTRO) + 1; //Ultimo número de la serie.
                                    }
                                }
                                else if (PaginaActual > (numPaginas - NUM_PAG_FIN - NUM_PAG_PROX_CENTRO))
                                {
                                    finRango = numPaginas - NUM_PAG_FIN;
                                    if (PaginaActual > numPaginas - NUM_PAG_FIN) //En el rango de las últimas
                                    {
                                        inicioRango = PaginaActual - NUM_PAG_FIN - NUM_PAG_PROX_CENTRO + 1;//finRango - (pNumPaginas - PaginaActual + 1);
                                    }
                                    else
                                    {
                                        inicioRango = numPaginas - (NUM_PAG_FIN + (2 * NUM_PAG_PROX_CENTRO)); //Ultimo número de la serie empezando atrás.
                                    }

                                    //Avanzamos el inicio de la zona final para que no agrege páginas ya pintadas
                                    while (inicioRango <= NUM_PAG_INICIO)
                                    {
                                        inicioRango++;
                                    }
                                }

                                if (inicioRango > (NUM_PAG_INICIO + 1))
                                {
                                <span class="separador">...</span>
                                }


                                for (int i = inicioRango; i <= finRango; i++)
                                {
                                    if (i > numPaginas) //Hemos excedio el número máximo de páginas, así que dejamos de pintar.
                                    {
                                        break;
                                    }

                                    if (i == PaginaActual)
                                    {
                                <span class="actual indiceNavegacion">@i </span>                            
                                    }
                                    else
                                    {
                                        string url = urlNavegador + "pagina=" + i;
                                <a href="@url" name="pagina|@i" class="indiceNavegacion filtro">@i </a>
                                    }
                                }

                                if (finRango < numPaginas)
                                {
                                    //Continuamos si ha más páginas que las que ya hemos pintado
                                    inicioRango = numPaginas - NUM_PAG_FIN + 1;

                                    if ((inicioRango - 1) > finRango)
                                    {
                                <span class="separador">...</span>
                                    }

                                    //Avanzamos el inicio de la zona final para que no agrege páginas ya pintadas
                                    while (inicioRango <= finRango)
                                    {
                                        inicioRango++;
                                    }

                                    finRango = numPaginas;

                                    for (int i = inicioRango; i <= finRango; i++)
                                    {
                                        if (i > numPaginas) //Hemos excedio el número máximo de páginas, así que dejamos de pintar.
                                        {
                                            break;
                                        }

                                        if (i == PaginaActual)
                                        {
                                <span class="actual indiceNavegacion">@i </span>
                                        }
                                        else
                                        {
                                            string url = urlNavegador + "pagina=" + i;
                                <a href="@url" name="pagina|@i" class="indiceNavegacion filtro">@i </a>
                                        }
                                    }
                                }
                            }
                            if (PaginaActual == numPaginas)
                            {
                                <span class="deshabilitado ultimaPagina">@Html.GetText("COMMON", "PAGSIGUIENTE")</span>
                            }
                            else
                            {
                                string url = urlNavegador + "pagina=" + ++PaginaActual;
                                <a href="@url" name="pagina|@Html.Raw((PaginaActual).ToString())" class="indiceNavegacion filtro ultimaPagina">@Html.GetText("COMMON", "PAGSIGUIENTE")</a>
                            }
                            }
                        </div>
                    </div>
                </div>
                }
            }
        </div>
    </div>
}
