@using Es.Riam.Gnoss.Web.MVC.Models
@using Es.Riam.Gnoss.Web.MVC.Controles.Helper
@model FacetModel
@if (Model != null && (Model.FacetItemList.Count > 0 || Model.AutocompleteBehaviour.Equals(AutocompleteBehaviours.OnlyTextBox) || Model.ShowWithoutItems))
{
    string claveFacetaSinObjetoConocimiento = Model.FacetKey;
    if (claveFacetaSinObjetoConocimiento.Contains(";"))
    {
        claveFacetaSinObjetoConocimiento = claveFacetaSinObjetoConocimiento.Substring(claveFacetaSinObjetoConocimiento.IndexOf(";") + 1);
    }

    if (Model.ThesaurusID != Guid.Empty)
    {
        string tesauroID = "";
        string contenidoID = "contenido_" + Model.Key;
        if (!string.IsNullOrEmpty(Model.Filter))
        {
            contenidoID += "_" + Model.Filter;
            tesauroID = "--" + Model.Filter;
        }


<div id="@contenidoID">
    <div class="box" id="@(Model.Key + tesauroID)">
        <span class="faceta-title">@Model.Name</span>
        @Html.PartialView("_CajaBusqueda", Model)
        <div class="section">
            @if (Model.AutocompleteBehaviour == AutocompleteBehaviours.Default)
            {
<ul class="listadoFacetas">
    @foreach (FacetItemModel item in Model.FacetItemList)
    {
@Html.PartialView("_ItemFaceta", item)}
</ul>                    }

            @if (Model.SeeMore)
            {
<p class="moreResults">
    <a class="verMasFaceta" href="#" rel="@claveFacetaSinObjetoConocimiento|@Model.Key">@Html.GetText("COMBUSQUEDAAVANZADA", "VERMAS")</a>
</p>                    }
        </div>
    </div>
</div> }
                else
                {
                    string noCollapse = "";
                    string ulClass = "listadoFacetas";
                    if (Model.Key == "rdf_type")
                    {
                        noCollapse = "noCollapse";
                    }
                    else if (Model.SearchBoxType.Equals(SearchBoxType.RankCalendar) || Model.SearchBoxType.Equals(SearchBoxType.Calendar))
                    {
                        ulClass = "oculto nevershow";
                    }
                    else
                    {
                        ulClass = "listadoFacetas";
                    }

                    string contenidoOut = "out_" + Model.Key;
                    string contenidoIn = "in_" + Model.Key;

                    if (Model.FacetGrouped)
                    {

@functions
            { public string obtenerNombreSemFaceta(FacetItemModel itemFaceta)
            {
                string nombreSem = itemFaceta.Name.Replace("rdf:type=", "");
                if (nombreSem.Contains(";"))
                {
                    nombreSem = nombreSem.Substring(nombreSem.IndexOf(";") + 1);
                }
                return nombreSem;
            } } string auxAgrupado = "";
                        FacetItemModel itemSeleccionado = Model.FacetItemList.Find(item => item.Selected == true);
                        if (itemSeleccionado != null)
                        {
                            auxAgrupado = "in_" + obtenerNombreSemFaceta(itemSeleccionado);
                        }

<div id="@contenidoOut" class="listadoAgrupado" @(auxAgrupado != "" ? "aux=" + auxAgrupado : "")>

    @if (Model.GroupedGroups != null && Model.GroupedGroups.Count > 0)
    {
<ul class="oculto">
    @foreach (string grupo in Model.GroupedGroups.Keys)
    {
        string classGroup = "";
        foreach (string tipo in Model.GroupedGroups[grupo])
        {
            classGroup += " in_" + tipo;
        }
<li><a class="@classGroup">@grupo</a></li>}
</ul>}

    @foreach (FacetItemModel item in Model.FacetItemList)
    {
<div id="in_@obtenerNombreSemFaceta(item)">
    <a rel="nofollow" href="@item.Filter" class="faceta grupo" name="@item.Name" title="@item.Tittle">@item.Tittle (@item.Number)</a>
</div>}
</div> }
        else
        {

            bool limit10 = false;
            int num = 0;
            var idLimit = "out_roh_hasKnowledgeArea---roh_categoryNode";
            var idLimit2 = "out_bibo_authorList---rdf_member---roh_hasKnowledgeArea---roh_categoryNode";
            string parametrosAdicionales = Context.Request.Query["pParametros_adiccionales"];
            if ((contenidoOut == idLimit || contenidoOut == idLimit2) && (parametrosAdicionales==null ||!parametrosAdicionales.Contains("NumElementosFaceta=10000")))
                        {
                limit10 = true;
            }

<div id="@contenidoOut">
    <div id="@contenidoIn">
        <div class="box @noCollapse" id="@Model.Key">
            <span class="faceta-title">@Model.Name</span>

            @if (Model.AutocompleteBehaviour == AutocompleteBehaviours.Default)
            {
<ul class="@ulClass">
    @foreach (FacetItemModel item in Model.FacetItemList)
    {
        num++;
        if (num > 10 && limit10)
        {
            break;
        }
@Html.PartialView("_ItemFaceta", item)                            }
</ul>}
            @if (Model.SeeMore || (limit10 && num >= 10))
            {
<p class="moreResults">
    <a class="verMasFaceta" href="#" rel="@claveFacetaSinObjetoConocimiento|@Model.Key">@Html.GetText("COMBUSQUEDAAVANZADA", "VERMAS")</a>
</p>}
        </div>
    </div>
</div>}
                }
            }