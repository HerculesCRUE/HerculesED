@*[security|||shared/layout/_layout.cshtml|||hercules]*@
@using Es.Riam.Gnoss.Web.MVC.Models
@using Es.Riam.Gnoss.Web.MVC.Controles.Helper
@using Es.Riam.Gnoss.Web.MVC.Models.ViewModels
@using Es.Riam.Gnoss.Web.MVC.Models.Administracion
@using Es.Riam.Gnoss.AD.ServiciosGenerales
@using Es.Riam.Gnoss.Web.MVC.Controllers
@using Es.Riam.Gnoss.Web.MVC.Controllers.Administracion
@using Es.Riam.Gnoss.Web.Controles
@using Newtonsoft.Json
@{ CommunityModel Comunidad = Html.GetComunidad();
    UserIdentityModel IdentidadActual = Html.GetIdentidadActual();
    string avisoCookies = Html.GetCookiesWarning();
}

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML+RDFa 1.0//EN" "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="@Html.GetUtilIdiomas().LanguageCode" xmlns:og="http://ogp.me/ns#">
<head>


    @if (Comunidad != null && Comunidad.ProjectExtraHTMLList != null)
    {
        @Html.PartialView("../Shared/ProyectoElementoHTML", Comunidad.ProjectExtraHTMLList.Where(a => a.Ubication == UbicacionHtmlProyecto.BeginHead).ToList());
    }

    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

    @Html.PartialView("../Shared/Head/_Metas")

    <title>@Html.GetTituloPagina()</title>

    <link id="IMGfavicon" rel="shortcut icon" type="image/ico" href="@Html.GetFavicon()" />

    @if (!string.IsNullOrEmpty(Html.GetUrlCanonical()))
    {
        <link rel="canonical" href="@Html.GetUrlCanonical()" />
    }
    @if (Html.GetCabecera() != null && Html.GetCabecera().MultiLingualLinks != null)
    {
        if (Html.GetCabecera().MultiLingualLinks.Keys.Contains(Html.GetUtilIdiomas().LanguageCode))
        {
            <link rel="alternate" hreflang="@Html.GetUtilIdiomas().LanguageCode" href="@Html.GetCabecera().MultiLingualLinks[Html.GetUtilIdiomas().LanguageCode].Value" />
        }
        foreach (string language in Html.GetCabecera().MultiLingualLinks.Keys)
        {
            if (!language.Equals(Html.GetUtilIdiomas().LanguageCode))
            {
                if (Html.GetCabecera().MultiLingualLinks[language].Key)
                {
                    <link rel="alternate" hreflang="@language" href="@Html.GetCabecera().MultiLingualLinks[language].Value" />
                }
            }
        }
    } 
    @*
    @if (!string.IsNullOrEmpty(Html.GetURLRSS()))
    {
        <link rel="alternate" type="application/rss+xml" href="@Html.GetURLRSS()" />
    }
    *@
    @if (!string.IsNullOrEmpty(Html.GetURLRDF()))
    {
        <link rel="alternate" type="application/rdf+xml" href="@Html.GetURLRDF()" />
    }

    @if (Html.GetListaMetas() != null)
    {
        foreach (KeyValuePair<string, string> contentMeta in Html.GetListaMetas())
        {
            <meta name="@contentMeta.Key" content="@contentMeta.Value" />
        }
    }

    @if (Html.GetListaMetasComplejas() != null)
    {
        foreach (Dictionary<string, string> atributosMeta in Html.GetListaMetasComplejas())
        {
            System.Text.StringBuilder meta = new System.Text.StringBuilder("<meta");

            foreach (string clave in atributosMeta.Keys)
            {
                meta.Append(" ");
                meta.Append(clave);
                meta.Append("=");
                meta.Append("\"");
                meta.Append(atributosMeta[clave]);
                meta.Append("\"");
            }

            meta.Append(" />\r\n");

            @Html.Raw(meta)
        }
    }

    @Html.PartialView("../Shared/Head/_HojasDeEstilo")

    @Html.PartialView("../Shared/Head/_FicherosJavascript")

    @if (Html.GetBusquedasXml() != null)
    {
        foreach (string busqeda in Html.GetBusquedasXml())
        {
            <link rel="search" type="application/opensearchdescription+xml" href="@busqeda" />
        }
    }

    @if (Comunidad != null && Comunidad.ProjectExtraHTMLList != null)
    {
        @Html.PartialView("../Shared/ProyectoElementoHTML", Comunidad.ProjectExtraHTMLList.Where(a => a.Ubication == UbicacionHtmlProyecto.EndHead).ToList());
    }

</head>

    <body class="@Html.GetBodyClass() @(IdentidadActual == null || IdentidadActual.IsGuestUser ? " invitado" : "") @Html.GetBodyClassPestanya()">

        @if (Comunidad != null && Comunidad.ProjectExtraHTMLList != null)
        {
            @Html.PartialView("../Shared/ProyectoElementoHTML", Comunidad.ProjectExtraHTMLList.Where(a => a.Ubication == UbicacionHtmlProyecto.BeginBody).ToList());
        }

        <form method="post" target="_blank" action="" name="formularioHidden" id="formularioHidden">
            <fieldset style="display: none">
                <legend class="nota">formularioHidden</legend>
                @if (Html.GetListaInputHidden() != null)
                {
                    foreach (KeyValuePair<string, string> inputHidden in Html.GetListaInputHidden())
                    {
                        <input type="hidden" id="@inputHidden.Key" class="@inputHidden.Key" value="@inputHidden.Value" />
                    }
                }
                <input type="submit" style="display: none;" id="enviarHidden" value="enviar" title="enviar" />
            </fieldset>
        </form>

        <form method="post" target="_blank" action="" name="formularioRDF" id="formularioRDF">
            <fieldset style="display: none">
                <legend class="nota">formularioRDF</legend>
                <input type="text" style="display: none;" title="query" name="query" id="query" />
                <input type="text" style="display: none;" title="pagina" name="pagina" id="pagina" />
                <input type="submit" style="display: none;" id="rdfHack" value="enviar" title="enviar" />
            </fieldset>
        </form>

        <div style="width: 100px; height: 100px; position: absolute; display: none; left: 0px; top: 0px; z-index: 2000" class="popup">
            <img style="border-width: 0px;" alt="Cargando..." src="@Html.GetBaseUrlStatic()/img/espera.gif" />
            <p><strong>Cargando...</strong></p>
        </div>
        <div id="mascaraBlanca">
            <div class="wrap popup">
                <div class="preloader-wrapper active">
                    <div class="spinner-layer spinner-blue-only">
                        <div class="circle-clipper left">
                            <div class="circle"></div>
                        </div><div class="gap-patch">
                            <div class="circle"></div>
                        </div><div class="circle-clipper right">
                            <div class="circle"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @Html.PartialView("../Shared/_Cabecera")

        <main role="main">
            <div class="container">
                @if (!string.IsNullOrEmpty(avisoCookies))
                {
                    <div id="phAvisoCookie">
                        <div class="info columms cookies" id="info">
                            <p class="title-panel-info"><span>Panel </span>@Html.GetText("COMMON", "INFORMACION")</p>
                            <div class="col-4">
                                <div class="box" id="divAvisoCookie">@Html.Raw(avisoCookies)</div>
                            </div>
                        </div>
                    </div>
                }
                @if (Comunidad != null && string.IsNullOrEmpty(Context.Request.Query["new-community-wizard"]) && (IdentidadActual.IsExpelled || Comunidad.ProjectState == CommunityModel.StateProject.Close || Comunidad.ProjectState == CommunityModel.StateProject.CloseTemporaly || Comunidad.ProjectState == CommunityModel.StateProject.Definition))
                {
                    <div class="aviso columms" id="info">
                        <h3><span>Panel </span>Aviso</h3>
                        <div class="col-4">
                            <div class="box">
                                @if (IdentidadActual.IsExpelled)
                                {
                                    @*Usuario expulsado*@
                                    <p>@Html.Raw(Html.GetText("COMINICIOLOGIN", "ADVERTENCIAEXPULSADO1"))</p>
                                    <p>@Html.GetText("COMMON", "MUCHASGRACIAS")</p>
                                }
                                else if (Comunidad.ProjectState == CommunityModel.StateProject.Close)
                                {
                                    <p>@Html.GetText("COMADMIN", "EXPLICACIONCERRADA", Html.GetNombreProyectoEcosistema())</p>
                                }
                                else if (Comunidad.ProjectState == CommunityModel.StateProject.CloseTemporaly)
                                {
                                    <p>@Html.GetText("COMADMIN", "EXPLICACIONCERRADATMP")</p>
                                }
                                else if (Comunidad.ProjectState == CommunityModel.StateProject.Definition)
                                {
                                    if (IdentidadActual.IsProyectAdmin)
                                    {
                                        string urlAdmin = @Html.GetGeneradorURLs().ObtenerURLAdministracionComunidad(Html.GetUtilIdiomas(), Html.GetBaseUrlIdioma(), Comunidad.ShortName, "ADMINISTRARCOMUNIDADGENERAL");
                                        //Sacamos el mensaje al administrador:
                                        switch (Comunidad.AccessType)
                                        {
                                            case CommunityModel.TypeAccessProject.Public:
                                            @Html.Raw(Html.GetText("COMINICIOLOGIN", "NOACCESODEFINICIONADMINPUBLICA", urlAdmin)) break;
                                            case CommunityModel.TypeAccessProject.Private:
                                            @Html.Raw(Html.GetText("COMINICIOLOGIN", "NOACCESODEFINICIONADMINPRIVADA", urlAdmin)) break;
                                            case CommunityModel.TypeAccessProject.Reserved:
                                            @Html.Raw(Html.GetText("COMINICIOLOGIN", "NOACCESODEFINICIONADMINRESERVADA", urlAdmin)) break;
                                            case CommunityModel.TypeAccessProject.Restricted:
                                            @Html.Raw(Html.GetText("COMINICIOLOGIN", "NOACCESODEFINICIONADMINRESTRINGIDA", urlAdmin)) break;
                                        }
                                    }
                                    else
                                    {
                                        <p>@Html.GetText("COMINICIOLOGIN", "COMUNIDADDEFINICION")</p>
                                        <p>@Html.GetText("COMINICIOLOGIN", "NOACCESODEFINICION")</p> foreach (ProfileModel admin in Comunidad.Administrators)
                                        {
                                            <p>@Html.ObtenerNombrePerfil(admin)</p>
                                        }
                                    }
                                }
                            </div>
                        </div>
                    </div>
                }
                <div class="row">
                    @RenderBody()
                </div>
            </div>
        </main>

        @Html.PartialView("../Shared/_Pie")

        <aside id="menuLateral" class="menuLateral" role="navigation">
            <div class="header">
                <div class="wrap-header">
                    <div class="menu-logo-wrapper">
                        <div class="menu-toggle">
                            <a href="javascript: void(0);" class="cerrar texto-blanco">
                                <span class="material-icons">apps</span>
                            </a>
                        </div>
                        <div class="logo-wrapper">
                            <a href="./listado.php" class="texto-blanco">
                                Hércules
                            </a>
                        </div>
                    </div>
                    <span class="material-icons cerrar">close</span>
                </div>
            </div>

            <div class="body">
                <ul class="nav pmd-sidebar-nav">
                    <li>
                        <ul>
                            @foreach (CommunityModel.TabModel pPestanya in Comunidad.Tabs)
                            {
                                <li>
                                    <a href="@pPestanya.Url">@pPestanya.Name</a>
                                </li>
                            }
                        </ul>
                    </li>
                </ul>
            </div>
        </aside>




        <script type="text/javascript">
            $(document).ready(function () {
                EjecutarScriptsIniciales2();
            });
            const currentLang = "@Html.GetUtilIdiomas().LanguageCode.ToLower()"
            const servicioExternoBaseUrl = "@Html.GetBaseUrlContent()/"
            const localUrlBaseLayout = "https://localhost:44321/"
        </script>
        @RenderSection("javascript", required: false)




        @if (Comunidad != null)
        {
            try
            {
                DateTime? envioCookie = Context.Session.Get<DateTime?>("EnvioCookie");

            //Actualizo la cookie del usuario para que no caduque
            if (Context.Request.Method.Equals("GET") && !envioCookie.HasValue && !Html.GetIdentidadActual().IsGuestUser)
            {
                Context.Session.Set("EnvioCookie", DateTime.Now);

                string urlServicioLogin = Html.GetUrlServicioLogin();
                string query = string.Format("?usuarioID={0}&dominio={1}/", IdentidadActual.KeyUser, Html.GetBaseUrl());

                if (Context.Request.Scheme.Equals("http"))
                {
                    //Elimino la sesión del resto de dominios en los que había entrado el usuario
                    //para que cuando entre en ellos soliciten la cookie al servicio de login

                    if (urlServicioLogin.StartsWith("https://"))
                    {
                        //Hago una petición con http porque si no no te desconecta de los dominios que no tienen https.
                        urlServicioLogin = urlServicioLogin.Replace("https://", "http://");
                    }

                    string nuevoEnvio = "";
                    if (Context.Session.Get<object>("CrearCookieEnServicioLogin") != null)
                        {
                            nuevoEnvio = "&nuevoEnvio=true";
                        }

                        <iframe style="WIDTH:1px;HEIGHT:1px; display:none;" frameBorder="0" src="@string.Format("{0}/eliminarcookie.aspx{1}{2}", urlServicioLogin, query, nuevoEnvio)"></iframe> ////Registro el evento y lanzo la accion del proyecto
                    //ProyectoCL proyectoCL = new ProyectoCL();
                    //Dictionary<TipoProyectoEventoAccion, string> listaEventos = proyectoCL.ObtenerEventosAccionProyectoPorProyectoID(ProyectoSeleccionado.Clave, ((GnossWebPage)Page).EsBot);
                    //proyectoCL.Dispose();
                    //if (listaEventos != null && listaEventos.Count > 0)
                    //{
                    //    //comprobación existencia evento login
                    //    if (listaEventos.ContainsKey(TipoProyectoEventoAccion.Login) && (!((GnossWebPage)Page).OmitirProyectoEventoAccionLogin))
                    //    {
                    //        StringBuilder sbEventos = new StringBuilder();
                    //        sbEventos.AppendLine(listaEventos[TipoProyectoEventoAccion.Login]);
                    //        this.Page.ClientScript.RegisterStartupScript(this.GetType(), "EventoLogin", sbEventos.ToString(), true);
                    //    }
                    //}
                }
                if (Context.Session.Get<object>("CrearCookieEnServicioLogin") != null && Context.Session.Get<object>("Usuario") != null)
                    {
                    //Envío la cookie del usuario
                    Es.Riam.Gnoss.Util.Seguridad.GnossIdentity usuario = Context.Session.Get<Es.Riam.Gnoss.Util.Seguridad.GnossIdentity>("Usuario");

                        query = "usuarioID=" + usuario.UsuarioID + "&loginUsuario=" + usuario.Login + "&idioma=" + usuario.Idioma + "&personaID=" + usuario.PersonaID + "&nombreCorto=" + usuario.Login;
                        query += "&token=" + Html.GetTokenLoginUsuario();

                        <iframe style="WIDTH:1px;HEIGHT:1px; display:none;" frameBorder="0" src="@string.Format("{0}/crearCookie.aspx?{1}", urlServicioLogin, query)"></iframe> Context.Session.Remove("CrearCookieEnServicioLogin");
                    }
                }
            }
            catch (Exception ex)
            {
            }
            if (Comunidad.ProjectExtraHTMLList != null)
            {
                @Html.PartialView("../Shared/ProyectoElementoHTML", Comunidad.ProjectExtraHTMLList.Where(a => a.Ubication == UbicacionHtmlProyecto.EndBody).ToList());
            }
        }

        <div id="modal-resultados" class="modal modal-top fade modal-resultados modal-resultados-paginado" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <p class="modal-title">@Html.Translate("CATEGORIAS")</p>
                        <span class="material-icons cerrar" data-dismiss="modal" aria-label="Close">close</span>
                    </div>
                    <div class="modal-body">
                        <div class="buscador-coleccion">
                            <form>
                                <div>
                                    <span class="buscar">
                                        <input type="text" value="" class="texto">
                                        <span class="material-icons lupa">search</span>
                                    </span>
                                </div>
                            </form>
                            <script>
                                $(document).ready(function () {
                                    $(".buscador-coleccion .buscar input").on("focus", function () {
                                        $(this).val("");
                                    });
                                });
                            </script>
                        </div>
                        <div class="indice-lista no-letra facetas-wrap">
                            <div class="action-buttons-resultados">
                                <ul class="no-list-style">
                                    <li class="js-anterior-facetas-modal">
                                        <span class="material-icons">navigate_before</span>
                                        <span class="texto">Anteriores</span>
                                    </li>
                                    <li class="js-siguiente-facetas-modal">
                                        <span class="texto">Siguientes</span>
                                        <span class="material-icons">navigate_next</span>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="modal-tesauro" class="modal modal-top fade modal-con-buscador" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content modal-content-height">
                    <div class="modal-header">
                        <p class="modal-title"></p>
                        <span class="material-icons cerrar" data-dismiss="modal" aria-label="Close">close</span>
                    </div>
                    <div class="modal-body">
                        <div class="entityaux">
                            <div class="buscador-coleccion">
                                <div>
                                    <span class="buscar">
                                        <input type="text" value="" class="texto">
                                        <span class="material-icons lupa">search</span>
                                    </span>
                                </div>
                                <script>
                                    $(document).ready(function () {
                                        $(".buscador-coleccion .buscar input").on("focus", function () {
                                            $(this).val("");
                                        });
                                    });
                                </script>
                            </div>

                            <div class="action-buttons-resultados">
                                <ul class="no-list-style">
                                    <li class="js-plegar-facetas-modal">
                                        <span class="texto">@Html.Translate("PLEGAR")</span>
                                        <span class="material-icons">expand_less</span>
                                    </li>
                                    <li class="js-desplegar-facetas-modal">
                                        <span class="texto">@Html.Translate("DESPLEGAR")</span>
                                        <span class="material-icons">expand_more</span>
                                    </li>
                                </ul>
                            </div>

                            <ul class="listadoTesauro">

                            </ul>
                        </div>                  
                    </div>
                </div>
            </div>
        </div>

        <div id="modal-anadir-item-cv" class="modal modal-top fade modal-alertas" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <p class="modal-title"><span class="material-icons">post_add</span>Añadir</p>
                        <span class="material-icons cerrar" data-dismiss="modal" aria-label="Close">close</span>
                    </div>
                    <div class="modal-body">
                        <form class="formulario-edicion formulario-alertas">
                            <p>El item se incorporará a tu CV</p>
                            <div class="form-group">
                                <label class="control-label">¿Deseas también hacerlo público y/o enviarlo a producción científica?</label>
                            </div>
                            <div class="custom-control custom-checkbox mb-4">
                                <input type="checkbox" id="solicitar-validacion" name="solicitar-validacion" class="custom-control-input at-input">
                                <label class="custom-control-label texto-gris-claro" for="solicitar-validacion">Solicitar validación de la Universidad</label>
                            </div>
                            <div class="form-group mb-4">
                                <div class="image-uploader js-image-uploader">
                                    <div class="image-uploader__preview">
                                        <img class="image-uploader__img" alt="Imagen Usuario" src="">
                                    </div>
                                    <div class="image-uploader__drop-area">
                                        <div class="image-uploader__icon">
                                            <span class="material-icons">backup</span>
                                        </div>
                                        <div class="image-uploader__info">
                                            <p><strong>Arrastra y suelta en la zona punteada los documentos acreditativos</strong></p>
                                            <p>Imágenes en formato .PNG o .JPG</p>
                                            <p>Peso máximo de las imágenes 250 kb</p>
                                        </div>
                                    </div>
                                    <div class="image-uploader__error">
                                        <p class="ko"></p>
                                    </div>
                                </div>
                                <input type="file" class="image-uploader__input" accept="image/*">
                            </div>
                            <div class="custom-control custom-checkbox mb-4">
                                <input type="checkbox" id="hacer-publico" name="hacer-publico" class="custom-control-input">
                                <label class="custom-control-label texto-gris-claro" for="hacer-publico">Hacerlo público</label>
                            </div>
                        </form>
                        <div class="form-actions">
                            <a class="btn btn-primary uppercase">Añadir</a>
                            <a class="btn btn-link uppercase" data-dismiss="modal">Cancelar</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="modal-enviar-produccion-cientifica" class="modal modal-top fade" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <p class="modal-title"><span class="material-icons">beenhere</span>Enviar a producción científica</p>
                        <span class="material-icons cerrar" data-dismiss="modal" aria-label="Close">close</span>
                    </div>
                    <div class="modal-body">
                        <div class="formulario-edicion">
                            <div class="form-group">
                                <label class="control-label">Publicación</label>
                                <p class="title d-flex align-items-center">
                                    <span class="material-icons pr-2">article</span>
                                    <span class="texto font-weight-bold">
                                        Social Network Analysis in E-Learning Environments: A Preliminary Systematic Review.
                                    </span>
                                </p>
                            </div>
                            <div class="form-group">
                                <label class="control-label">Asigna publicación</label>
                                <div class="custom-control themed little primary custom-radio">
                                    <input type="radio" id="input-a-proyecto" name="asigna-publicacion" class="custom-control-input" checked>
                                    <label class="custom-control-label" for="input-a-proyecto">A un proyecto</label>
                                    <div class="form-group">
                                        <div class="custom-control themed little primary custom-radio">
                                            <input type="radio" id="input-proyecto-1" name="asigna-proyecto" class="custom-control-input" checked>
                                            <label class="custom-control-label" for="input-proyecto-1">Semantic Evaluation at Large Scale</label>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="custom-control themed little primary custom-radio">
                                            <input type="radio" id="input-proyecto-2" name="asigna-proyecto" class="custom-control-input">
                                            <label class="custom-control-label" for="input-proyecto-2">Indexación semántica de recursos de datos biomédicos franceses - movilidad</label>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="custom-control themed little primary custom-radio">
                                            <input type="radio" id="input-proyecto-3" name="asigna-proyecto" class="custom-control-input">
                                            <label class="custom-control-label" for="input-proyecto-3">MapInCSC (Mapping the Interaction between Semantic Representation and Control Systems: The Controlled Semantic Cognition)</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="custom-control themed little primary custom-radio">
                                    <input type="radio" id="input-a-grupo-investigacion" name="asigna-publicacion" class="custom-control-input">
                                    <label class="custom-control-label" for="input-a-grupo-investigacion">A un grupo de investigación</label>
                                </div>
                            </div>
                            <div class="form-actions">
                                <a href="" class="btn btn-primary uppercase">Enviar</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="pmd-sidebar-overlay" data-rel="menuLateralUsuario"></div>
        <aside id="menuLateralMetabuscador" class="menuLateral metabuscador">
            <div class="body custom-css-scroll">
                <div class="resultados" id="resultadosMetabuscador" data-url="Search/DoMetaSearch">
                    <ul>
                        <li class="bloque documents" data-urlcomunidad="@Comunidad.Tabs.Where(item => item.Key == new Guid("6073a387-5e95-47b3-a4d1-09a95bb7c6e5")).Select(e => e.Url).First()">
                            <p class="title">@Html.Translate("PUBLICACIONES")</p>
                            <ul>
                            </ul>
                        </li>
                        <li class="bloque persons" data-urlcomunidad="@Comunidad.Tabs.Where(item => item.Key == new Guid("f0ba215c-1629-456a-a7ac-69b63f4e986f")).Select(e => e.Url).First()">
                            <p class="title">@Html.Translate("INVESTIGADORES")</p>
                            <ul>
                            </ul>
                        </li>
                        <li class="bloque groups" data-urlcomunidad="@Comunidad.Tabs.Where(item => item.Key == new Guid("167b0af9-2299-4dd4-a889-8c36d6d2e43b")).Select(e => e.Url).First()">
                            <p class="title">@Html.Translate("GRUPOS")</p>
                            <ul>
                            </ul>
                        </li>
                        <li class="bloque projects" data-urlcomunidad="@Comunidad.Tabs.Where(item => item.Key == new Guid("51182dfb-d5b2-4d13-8595-a3949028837b")).Select(e => e.Url).First()">
                            <p class="title">@Html.Translate("PROYECTOS")</p>
                            <ul>
                            </ul>
                        </li>
                        <li class="bloque researchObjects" data-urlcomunidad="@Comunidad.Tabs.Where(item => item.Key == new Guid("fbf49f72-46a4-46f4-ba4f-00088599f717")).Select(e => e.Url).First()">
                            <p class="title">@Html.Translate("RESEARCHOBJECTS")</p>
                            <ul>
                            </ul>
                        </li>
                    </ul>
                </div>
                <div class="sugerencias" id="sugerenciasMetabuscador">
                    <p class="title">Últimas búsquedas</p>
                    <ul class="nav pmd-sidebar-nav"></ul>
                </div>
                <div class="cargadores">
                    <div class="progress-loader" id="loader-recursos-wrap">
                        <p class="progress-loader-label">Buscando recursos</p>
                    </div>
                </div>
                <div class="sinresultadosMetabuscador d-none" id="sinResultadosMetabuscador"> </div>
            </div>
        </aside>

        @if (!IdentidadActual.IsGuestUser)
        {
            <div id="modal-crear-cluster" data-backdrop="static" class="modal modal-top modal-wide fade edicionRecurso  edicionCluster" tabindex="-1" role="dialog" data-eliminartext="@Html.Translate("ELIMINAR")" data-areastematicastext="@Html.Translate("AREAS_TEMATICAS")" data-descriptoresespecificostext="@Html.Translate("DESCRIPTORES_ESPECIFICOS")" data-comUrl="@Comunidad.Url" data-comKey="@Comunidad.Key.ToString()" data-cshortName="@Comunidad.ShortName" data-imguser="@Html.GetBaseUrlContent()/imagenes/proyectos/personalizacion/@Comunidad.Key.ToString()/theme/resources/iconos/person-gris.png">

                <div class="modal-dialog" role="document" >
                    <div class="modal-content">
                        <div class="modal-header">
                            <p class="modal-title"><span class="material-icons">edit</span>Editar</p>
                            <span class="material-icons cerrar" data-dismiss="modal" aria-label="Close">close</span>
                        </div>
                        <div class="modal-body">
                            <div class="formulario-edicion background-blanco">
                                <div class="d-flex flex-wrap mb-2">
                                    <div class="step-progress-wrap mb-5">
                                        <ul class="step-progress">
                                            <li class="step-progress__circle active" id="step1">
                                                <a href="javascript:stepsCls.goStep(1)">
                                                    <span class="step-progress__text current">@Html.Translate("DEFINIR_CLUSTER")</span>
                                                </a>
                                            </li>
                                            <li class="step-progress__bar"></li>
                                            <li class="step-progress__circle" id="step2">
                                                <a href="javascript:stepsCls.goStep(2)">
                                                    <span class="step-progress__text">@Html.Translate("DEFINIR_PERFILES_AREAS_INVESTIGACION")</span>
                                                </a>
                                            </li>
                                            <li class="step-progress__bar"></li>
                                            <li class="step-progress__circle" id="step3">
                                                <a href="javascript:stepsCls.goStep(3)">
                                                    <span class="step-progress__text">@Html.Translate("RECOMENDACIONES_SELECCION_INVESTIGADORES")</span>
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="steps-content-wrap">
                                    <div class="p-3 mb-2 bg-danger text-white" id="error-modal-cluster" style="display:none">@Html.Translate("REVISE_ERRORES_CAMPOS_RELLENADOS")</div>
                                    <div class="p-3 mb-2 bg-danger text-white" id="error-modal-server-cluster" style="display:none">@Html.Translate("ERROR_SERVER")</div>

                                    <!-- START STEP 1 -->
                                    <div id="modal-crear-cluster-step1" class="fade show section-steps">
                                        <form class="formulario-edicion background-blanco" type="post" id="cluster-step1-form">
                                            <fieldset>
                                                <legend>Definir cluster</legend>
                                                <div class="form-group mb-5 edit-titulo">
                                                    <label class="control-label d-block">@Html.Translate("NOMBRE_TITULO_CLUSTER") *</label>
                                                    <input placeholder="@Html.Translate("INTRODUCE_NOMBRE_TITULO")" type="text" name="nombrecluster" id="nombreclusterinput" class="form-control not-outline">
                                                </div>
                                                <div class="form-group mb-5 edit-descripcion">
                                                    <label class="control-label d-block">@Html.Translate("DESCRIPCION")</label>
                                                    <textarea id="txtDescripcion" placeholder="Introduce una descripción" name="txtdescripcion" class="cke form-control recursos" cols="20" rows="2"></textarea>
                                                </div>
                                                <!-- Areas temáticas -->
                                                <div class="panel-body mb-5 edit-etiquetas pl-0">
                                                    <div class="form-group">
                                                        <label class="control-label d-block">@Html.Translate("TEMAS_INVESTIGACION") *</label>
                                                        <div class="autocompletar autocompletar-tags form-group" id="cluster-modal-sec1-tax-wrapper">
                                                            <span class="tag-list mb-4">
                                                            </span>
                                                        </div>
                                                        <a class="btn btn-outline-primary" href="javascript: void(0)">
                                                            <span class="material-icons" data-rel="cluster-modal-sec1-tax-wrapper" onclick="stepsCls.setAreasTematicas(this)">add</span>
                                                        </a>
                                                    </div>
                                                </div>
                                                <!-- -->
                                            </fieldset>
                                            <fieldset class="d-none">
                                                <div class="form-group mb-4 edit-areas-tematicas">
                                                    <label class="control-label d-block mb-3">@Html.Translate("CLASIFICACION_AREAS_TEMATICAS")</label>
                                                    <div class="custom-control themed little custom-radio">
                                                        <input type="radio" id="clasificacion-area-hercules" name="clasificacion-area" class="custom-control-input at-input" checked="">
                                                        <label class="custom-control-label" for="clasificacion-area-hercules">Hércules</label>
                                                    </div>
                                                    <div class="custom-control themed little custom-radio">
                                                        <input type="radio" id="clasificacion-area-horizon-europa" name="clasificacion-area" class="custom-control-input at-input">
                                                        <label class="custom-control-label" for="clasificacion-area-horizon-europa">Horizon Europa</label>
                                                    </div>
                                                    <div class="custom-control themed little custom-radio">
                                                        <input type="radio" id="clasificacion-area-ods" name="clasificacion-area" class="custom-control-input">
                                                        <label class="custom-control-label" for="clasificacion-area-ods">ODS</label>
                                                    </div>
                                                    <div class="custom-control themed little custom-radio">
                                                        <input type="radio" id="clasificacion-area-plan-espana" name="clasificacion-area" class="custom-control-input">
                                                        <label class="custom-control-label" for="clasificacion-area-plan-espana">Plan España Digital 2025</label>
                                                    </div>
                                                </div>
                                            </fieldset>
                                            <div class="botonera">
                                                <a class="btn btn-primary uppercase" href="javascript:stepsCls.goStep(2)" follow="nofollow">
                                                    @Html.Translate("SIGUIENTE")
                                                    <span class="material-icons">keyboard_arrow_right</span>
                                                </a>
                                            </div>
                                        </form>
                                    </div>
                                    <!-- END STEP 1 -->

                                    <!-- START STEP 2 -->
                                    <div id="modal-crear-cluster-step2" class="fade section-steps">
                                        <form class="formulario-edicion background-blanco">
                                            <fieldset>
                                                <legend>@Html.Translate("DEFINIR_PERFILES_AREAS_INVESTIGACION")</legend>
                                                <p>@Html.Translate("QUIERES_BUSCAR_INVESTIGADORES_EXPERIENCIA___")</p>
                                                <p>@Html.Translate("ORGANIZA_AREAS_PERFIL_TEMATICOS___")</p>
                                                <p class="section-title">@Html.Translate("PERFILES")</p>
                                                <div class="panel-group pmd-accordion" id="accordion_cluster" role="tablist" aria-multiselectable="true">
                                                    <div class="panel">
                                                        
                                                    </div>
                                                </div>
                                                <div class="form-group mt-4 mb-4 anadir-perfil">
                                                    <a class="btn btn-outline-primary" data-toggle="modal" data-target="#modal-anadir-perfil-cluster">@Html.Translate("ANADIR_OTRO_PERFIL") *</a>
                                                </div>
                                            </fieldset>
                                            <div class="botonera">
                                                <a href="javascript:stepsCls.goStep(1)" class="btn btn-outline-primary uppercase">
                                                    <span class="material-icons">keyboard_arrow_left</span>
                                                    Anterior
                                                </a>
                                                <a href="javascript:stepsCls.goStep(3)" class="btn btn-primary uppercase">
                                                    @Html.Translate("GUARDAR_SIGUIENTE")
                                                    <span class="material-icons">keyboard_arrow_right</span>
                                                </a>
                                            </div>
                                        </form>
                                    </div>
                                    <!-- END STEP 2 -->

                                    <!-- START STEP 3 -->
                                    <div id="modal-crear-cluster-step3" class="fade section-steps">
                                        <ul class="nav nav-tabs" id="myTab" role="tablist">
                                            <li class="nav-item">
                                                <a class="nav-link active" id="sugeridos-cluster-tab" data-toggle="tab" href="#sugeridos-cluster" role="tab" aria-controls="sugeridos-cluster" aria-selected="true">Sugeridos</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" id="seleccionados-cluster-tab" data-toggle="tab" href="#seleccionados-cluster" role="tab" aria-controls="seleccionados-cluster" aria-selected="false">Seleccionados</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" id="grafo-seleccionados-cluster-tab" data-toggle="tab" href="#grafo-seleccionados-cluster" role="tab" aria-controls="grafo-seleccionados-cluster" aria-selected="false">Grafo de seleccionados</a>
                                            </li>
                                        </ul>
                                        <div class="tab-content">
                                            <div class="tab-pane fade active show" id="sugeridos-cluster" role="tabpanel" aria-labelledby="sugeridos-cluster-tab">
                                                <div class="row">
                                                    <div class="col col-12 col-section-title font-weight-bold">
                                                        <div class="wrapCol">
                                                            <p>@Html.Translate("COLABORADORES")</p>
                                                            <div class="acciones-grafo">
                                                                <div class="relaciones dropdown dropdown-select">
                                                                    <a href="#" class="dropdown-toggle btn btn-outline-grey" role="button" id="dropdownRelaciones" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                        @Html.Translate("RELACIONES"):
                                                                        <span class="texto">@Html.Translate("TODAS")</span>
                                                                    </a>
                                                                    <div class="dropdown-menu basic-dropdown dropdown-menu-right" aria-labelledby="dropdownRelaciones">
                                                                        <ul class="no-list-style">
                                                                            <li>
                                                                                <a href="javascript: void(0);" rel="nofollow" class="item-dropdown activeView">
                                                                                    <span class="textoAlternativo">@Html.Translate("RELACIONES"):</span>
                                                                                    <span class="texto">@Html.Translate("TODAS")</span>
                                                                                </a>
                                                                            </li>
                                                                            <li>
                                                                                <a href="javascript: void(0);" rel="nofollow" class="item-dropdown">
                                                                                    <span class="textoAlternativo">@Html.Translate("RELACIONES"):</span>
                                                                                    <span class="texto">@Html.Translate("PROYECTOS")</span>
                                                                                </a>
                                                                            </li>
                                                                            <li>
                                                                                <a href="javascript: void(0);" rel="nofollow" class="item-dropdown">
                                                                                    <span class="textoAlternativo">@Html.Translate("RELACIONES"):</span>
                                                                                    <span class="texto">@Html.Translate("DOCUMENTOS")</span>
                                                                                </a>
                                                                            </li>
                                                                        </ul>
                                                                    </div>
                                                                </div>
                                                                <div class="relaciones-miembros dropdown dropdown-select">
                                                                    <a href="#" class="dropdown-toggle btn btn-outline-grey" role="button" id="dropdownRelacionesMiembros" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                        @Html.Translate("RELACIONES_ENTRE_MIEMBROS"):
                                                                        <span class="texto">Sí</span>
                                                                    </a>
                                                                    <div class="dropdown-menu basic-dropdown dropdown-menu-right" aria-labelledby="dropdownRelacionesMiembros">
                                                                        <ul class="no-list-style">
                                                                            <li>
                                                                                <a href="javascript: void(0);" rel="nofollow" class="item-dropdown activeView">
                                                                                    <span class="textoAlternativo">@Html.Translate("RELACIONES_ENTRE_MIEMBROS"):</span>
                                                                                    <span class="texto">@Html.Translate("SI")</span>
                                                                                </a>
                                                                            </li>
                                                                            <li>
                                                                                <a href="javascript: void(0);" rel="nofollow" class="item-dropdown">
                                                                                    <span class="textoAlternativo">@Html.Translate("RELACIONES_ENTRE_MIEMBROS"):</span>
                                                                                    <span class="texto">@Html.Translate("NO")</span>
                                                                                </a>
                                                                            </li>
                                                                        </ul>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col col-12 col-grafo-title font-weight-bold">
                                                        <div class="grafico-wrap">
                                                            <div></div>
                                                            <div class="graph-controls">
                                                                <ul class="no-list-style d-flex align-items-center">
                                                                    <li class="control remove-control" id="removeNodesCollaboratorsCluster">
                                                                        <span class="material-icons">remove</span>
                                                                    </li>
                                                                    <li class="control text-control">
                                                                        <span id="numNodosCollaboratorsCluster">10</span> @Html.Translate("NODOS")
                                                                    </li>
                                                                    <li class="control add-control" id="addNodesCollaboratorsCluster">
                                                                        <span class="material-icons">add</span>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                            <input type="hidden" id="numColaboradoresCluster" value="10" />
                                                            <div class="wrapCol" id="colaboratorsgraphCluster" style="width: 100%; height: 400px;"></div>
                                                        </div>
                                                    </div>
                                                    <!-- <div class="col col-12 header-listado">
                                                        <div class="h1-container">
                                                            <h1>Publicaciones <span class="numResultados">90</span></h1>
                                                        </div>
                                                        <div class="acciones-listado">
                                                            <div class="wrap">
                                                                <div class="descargar dropdown">
                                                                    <a class="dropdown-toggle" data-toggle="dropdown">
                                                                        <span class="material-icons">download</span>
                                                                        <span class="texto">Descargar</span>
                                                                    </a>
                                                                    <div class="dropdown-menu basic-dropdown dropdown-menu-right">
                                                                        <a href="javascript: void(0)" class="item-dropdown">PDF</a>
                                                                        <a href="javascript: void(0)" class="item-dropdown">Hoja de cálculo</a>
                                                                        <a href="javascript: void(0)" class="item-dropdown">Documento word</a>
                                                                        <a href="javascript: void(0)" class="item-dropdown">Imagen JPG</a>
                                                                    </div>
                                                                </div>
                                                                <div class="ordenar dropdown dropdown-select">
                                                                    <a class="dropdown-toggle" data-toggle="dropdown">
                                                                        <span class="material-icons">swap_vert</span>
                                                                        <span class="texto">Ordenar</span>
                                                                    </a>
                                                                    <div class="dropdown-menu basic-dropdown dropdown-menu-right">
                                                                        <a href="javascript: void(0)" class="item-dropdown">
                                                                            <span class="material-icons">swap_vert</span>
                                                                            <span class="texto">Fecha más reciente</span>
                                                                        </a>
                                                                        <a href="javascript: void(0)" class="item-dropdown">
                                                                            <span class="material-icons">swap_vert</span>
                                                                            <span class="texto">Fecha más antigua</span>
                                                                        </a>
                                                                        <a href="javascript: void(0)" class="item-dropdown">
                                                                            <span class="material-icons">swap_vert</span>
                                                                            <span class="texto">Relevancia</span>
                                                                        </a>
                                                                    </div>
                                                                </div>
                                                                <div class="visualizacion dropdown dropdown-select">
                                                                    <a class="dropdown-toggle" data-toggle="dropdown">
                                                                        <span class="material-icons">view_agenda</span>
                                                                        <span class="texto">Visualizar</span>
                                                                    </a>
                                                                    <div class="dropdown-menu basic-dropdown .dropdown-icons dropdown-menu-right">
                                                                        <a class="item-dropdown aCompacView" data-class-resource-list="compacView">
                                                                            <span class="material-icons">reorder</span>
                                                                            <span class="texto">Compacto</span>
                                                                        </a>
                                                                        <a class="item-dropdown aListView activeView" data-class-resource-list="listView">
                                                                            <span class="material-icons">view_agenda</span>
                                                                            <span class="texto">Lista</span>
                                                                        </a>
                                                                        <a class="item-dropdown aMosaicView" data-class-resource-list="mosaicView">
                                                                            <span class="material-icons">view_comfy</span>
                                                                            <span class="texto">Mosaico</span>
                                                                        </a>
                                                                        <a class="item-dropdown aGraphView" data-class-resource-list="mapView">
                                                                            <span class="material-icons">leaderboard</span>
                                                                            <span class="texto">Gráfica</span>
                                                                        </a>
                                                                        <a class="item-dropdown aMapView" data-class-resource-list="graphView">
                                                                            <span class="material-icons">location_on</span>
                                                                            <span class="texto">Mapa</span>
                                                                        </a>
                                                                        <a class="item-dropdown aGrafoView" data-class-resource-list="grafoView">
                                                                            <span class="material-icons">share</span>
                                                                            <span class="texto">Grafo</span>
                                                                        </a>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div> -->
                                                    <div class="col col-12">
                                                        <div class="wrapCol mt-4">
                                                            @* <div class="col-buscador">
                                                                <form method="post" id="formCajaBusquedaCluster" action="javascript:void(0)">
                                                                    <fieldset style="display: block">
                                                                        <legend class="nota">facetas</legend>
                                                                        <div class="finderUtils" id="divCajaBusqueda">
                                                                            <div class="group finderSection">
                                                                                <label for="finderSection" class="">Encontrar</label>
                                                                                <input type="text" id="finderSection" class="not-outline finderSectionText autocompletar ac_input" autocomplete="off" placeholder="Buscar en sección">
                                                                                <input title="Encontrar" type="button" class="findAction" id="inputLupa">
                                                                            </div>
                                                                        </div>
                                                                    </fieldset>
                                                                </form>
                                                            </div> *@
                                                            <div class="row" id="clusterListUsers">
                                                                
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="tab-pane fade" id="seleccionados-cluster" role="tabpanel" aria-labelledby="seleccionados-cluster-tab">
                                                <div class="row">
                                                    <div class="col col-12 col-section-title font-weight-bold">
                                                        <div class="wrapCol">
                                                            <p>@Html.Translate("LISTADO_INVETIGADORES_SELECCIONADOS") Listado de investigadores seleccionados</p>
                                                        </div>
                                                    </div>
                                                    <div class="col col-12 col-perfiles" id="perfiles-stp3-result-cluster">
                                                        <p class="section-title">@Html.Translate("PERFILES") </p>
                                                        
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="tab-pane fade" id="grafo-seleccionados-cluster" role="tabpanel" aria-labelledby="grafo-seleccionados-cluster-tab">
                                                <div class="row">
                                                    <div class="col col-12 col-section-title font-weight-bold">
                                                        <div class="wrapCol">
                                                            <p>@Html.Translate("GRAFRO_RELACIONES_OTROS_INVESTIGADORES")</p>
                                                        </div>
                                                    </div>
                                                    <div class="col col-12 col-grafo">
                                                        <div class="wrapCol">
                                                            aqui iria el grafos
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="botonera">
                                            <a href="javascript:stepsCls.goStep(2)" class="btn btn-outline-primary uppercase">
                                                <span class="material-icons">keyboard_arrow_left</span>
                                                Anterior
                                            </a>
                                            <a href="javascript:stepsCls.goStep(3)" class="btn btn-primary uppercase">
                                                @Html.Translate("GUARDAR_TERMINAR")
                                                <span class="material-icons">keyboard_arrow_right</span>
                                            </a>
                                        </div>
                                    </div>
                                    <!-- END STEP 3 -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div id="modal-seleccionar-area-tematica" data-backdrop="static" class="modal modal-top fade modal-edicion" tabindex="-1" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <p class="modal-title"><span class="material-icons">folder_open</span>@Html.Translate("SELECCIONAR_AREAS_TEMATICAS")</p>
                            <span class="material-icons cerrar" data-dismiss="modal" aria-label="Close">close</span>
                        </div>
                        <div class="modal-body">
                            <div class="formulario-edicion">
                                <div class="form-group">
                                    <label class="control-label">@Html.Translate("AREAS_TEMATICAS")</label>
                                </div>
                                <div id="panDesplegableSelCat">
                                    <ul class="nav nav-tabs d-none" id="myTab" role="tablist">
                                        <li class="nav-item">
                                            <a class="nav-link active" id="ver-arbol-tab" data-toggle="tab" href="#ver-arbol" role="tab" aria-controls="ver-arbol" aria-selected="true">@Html.Translate("ARBOL")</a>
                                        </li>
                                        @*<li class="nav-item">
                                            <a class="nav-link" id="ver-lista-tab" data-toggle="tab" href="#ver-lista" role="tab" aria-controls="ver-lista" aria-selected="false">@Html.Translate("LISTA")</a>
                                        </li>*@
                                    </ul>
                                    <div class="tab-content pt-0">

                                        <div class="tab-pane fade show active" id="ver-arbol" role="tabpanel" aria-labelledby="ver-arbol-tab">
                                            <div class="divTesArbol divCategorias clearfix">
                                                <div class="buscador-categorias">
                                                    <div class="form-group">
                                                        <input class="filtroRapido form-control not-outline" placeholder="@Html.Translate("BUSCAR_AREA_TEMATICA")" type="text" onkeydown="javascript:if(event.which || event.keyCode){if ((event.which == 13) || (event.keyCode == 13)) {return false;}}" onkeyup="javascript:MVCFiltrarListaSelCatArbol(this, 'panDesplegableSelCat');">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        @*<div class="tab-pane fade" id="ver-lista" role="tabpanel" aria-labelledby="ver-lista-tab">
                                            <div class="divTesLista divCategorias clearfix">
                                                <div class="buscador-categorias">
                                                    <div class="form-group">
                                                        <input class="filtroRapido form-control not-outline" placeholder="@Html.Translate("BUSCA_CATEGORIA")" type="text" onkeydown="javascript:if(event.which || event.keyCode){if ((event.which == 13) || (event.keyCode == 13)) {return false;}}" onkeyup="javascript:stepsCls.MVCFiltrarListaSelCat(this)">
                                                    </div>
                                                </div>
                                            </div>
                                            <input type="hidden" id="txtHackCatTesSel" class="hackCatTesSel" value="c5f38eb9-3d3c-4dd5-8fb7-0c771cb4a044,e9292906-a378-477f-b01e-c6c005be201e,">
                                        </div>*@
                                    </div>
                                </div>
                                <div class="form-actions">
                                    <a href="javascript:void(0)" class="btn btn-primary pmd-ripple-effect btnsave">@Html.Translate("GUARDAR")</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div id="modal-anadir-topicos-cluster" data-backdrop="static" class="modal modal-top fade" tabindex="-1" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <p class="modal-title"><span class="material-icons">label</span>@Html.Translate("ANADIR_DESCRIPTORES_ESPECIFICOS")</p>
                            <span class="material-icons cerrar" data-dismiss="modal" aria-label="Close">close</span>
                        </div>
                        <div class="modal-body">
                            <div class="formulario-edicion">
                                <div class="custom-form-row">
                                    <div class="form-group full-group">
                                        <label class="control-label d-block">@Html.Translate("DESCRIPTOR_ESPECIFICO")</label>
                                        <input placeholder="Introduce o selecciona un tópico" type="text" name="" id="tagsSearchModalCluster" class="form-control not-outline">
                                        <div class="ac_results" style="position: absolute;width: 100%;display: none;">
                                            <ul>
                                                @* <li class="ac_even">data</li> *@
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                                <div class="list-wrap tags">
                                    <ul>
                                        @* <li class="background-amarillo">
                                            <a href="javascript: void(0);">
                                                <span class="texto">Compute science</span>
                                            </a>
                                            <span class="material-icons cerrar">close</span>
                                        </li> *@
                                    </ul>
                                </div>
                                <div class="form-actions">
                                    <a href="javascript: void(0);" class="btn btn-primary uppercase btnclosemodal" data-dismiss="modal">@Html.Translate("GUARDAR")</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div id="modal-anadir-perfil-cluster" class="modal modal-top fade modal-edicion" tabindex="-1" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <p class="modal-title"><span class="material-icons">person</span>@Html.Translate("ANADIR_OTRO_PERFIL")</p>
                            <span class="material-icons cerrar" data-dismiss="modal" aria-label="Close">close</span>
                        </div>
                        <div class="modal-body">
                            <div class="formulario-edicion">
                                <div class="custom-form-row">
                                    <div class="form-group full-group">
                                        <label class="control-label d-block">@Html.Translate("ANADIR_PERFIL")</label>
                                        <input placeholder="Introduce o selecciona un perfil" type="text" name="perfilname" id="input-anadir-perfil" class="form-control not-outline">
                                        <div class="ac_results" style="position: absolute;width: 100%;display: none;">
                                            <ul>
                                                <li class="ac_even">data</li>
                                                <li class="ac_odd">Linked data</li>
                                                <li class="ac_even">World data</li>
                                                <li class="ac_odd">Metadata</li>
                                                <li class="ac_even">Linked data</li>
                                                <li class="ac_odd">Learning object data</li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-actions">
                                    <a href="javascript: stepsCls.addPerfilSearch()" class="btn btn-primary uppercase">Guardar</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>



            <script type="text/javascript">

                const uriLoadTaxonomies = "Cluster/GetThesaurus"
                const uriSaveCluster = "Cluster/SetSection1"
                const uriSearchTags = "Cluster/searchTags"

                var layDepuracion = false


                var urlLT = new URL(servicioExternoBaseUrl + 'servicioexterno/' + uriLoadTaxonomies)
                var urlSC1 = new URL(servicioExternoBaseUrl + 'servicioexterno/' + uriSaveCluster)
                var urlSTAGS = new URL(servicioExternoBaseUrl + 'servicioexterno/' + uriSearchTags)


                class StepsCluster {
                    /**
                     * Constructor de la clase StepsCluster
                     */
                    constructor() {
                        var _self = this
                        this.step = 1
                        this.body = $('body')

                        // Secciones principales
                        this.modalCrearCluster = this.body.find('#modal-crear-cluster')
                        this.stepProgressWrap = this.modalCrearCluster.find(".step-progress-wrap")
                        this.stepsCircle = this.stepProgressWrap.find(".step-progress__circle")
                        this.stepsBar = this.stepProgressWrap.find(".step-progress__bar")
                        this.stepsText = this.stepProgressWrap.find(".step-progress__text")
                        this.modalCrearClusterStep1 = this.modalCrearCluster.find("#modal-crear-cluster-step1")
                        this.modalCrearClusterStep2 = this.modalCrearCluster.find("#modal-crear-cluster-step2")
                        this.modalCrearClusterStep3 = this.modalCrearCluster.find("#modal-crear-cluster-step3")
                        this.clusterAccordionPerfil = this.modalCrearCluster.find("#accordion_cluster")
                        this.errorDiv = this.modalCrearCluster.find("#error-modal-cluster")
                        this.errorDivServer = this.modalCrearCluster.find("#error-modal-server-cluster")
                        this.perfilesStep3 = this.modalCrearClusterStep3.find("#perfiles-stp3-result-cluster")

                        this.stepContentWrap = this.modalCrearCluster.find(".steps-content-wrap")
                        this.stepsContent = this.stepContentWrap.find(".section-steps")

                        // Añadir perfil
                        this.modalPerfil = this.body.find("#modal-anadir-perfil-cluster")
                        this.inputPerfil = this.modalPerfil.find("#input-anadir-perfil")

                        // Areas temáticas Modal
                        this.modalAreasTematicas = this.body.find('#modal-seleccionar-area-tematica')
                        this.divTesArbol = this.modalAreasTematicas.find('.divTesArbol')
                        this.divTesLista = this.modalAreasTematicas.find('.divTesLista')
                        this.divTesListaCaths = undefined
                        this.btnSaveAT = this.modalAreasTematicas.find('.btnsave')

                        // Información para el guardado 
                        this.userId = document.getElementById('inpt_usuarioID').value
                        this.clusterId = undefined
                        this.communityShortName = this.modalCrearCluster.data('cshortName')
                        this.communityUrl = this.modalCrearCluster.data('comUrl')
                        this.communityKey = this.modalCrearCluster.data('comKey')

                        // Tags
                        this.topicsM = undefined

                        // Textos obtenido de los 'data-'
                        this.eliminarText = this.modalCrearCluster.data("eliminartext")
                        this.areasTematicasText = this.modalCrearCluster.data("areastematicastext")
                        this.descriptoresEspecificosText = this.modalCrearCluster.data("descriptoresespecificostext")

                        // Comprueba si estamos en depuración
                        if (window.location.hostname == 'depuracion.net' || window.location.hostname.includes("localhost")) {
                            urlLT = new URL(localUrlBaseLayout + uriLoadTaxonomies)
                            urlSC1 = new URL(localUrlBaseLayout + uriSaveCluster)
                            layDepuracion = true
                        }

                        // Incia las funcionalidades iniciales de modal si este se abre
                        this.modalCrearCluster.on('shown.bs.modal', function () {
                            _self.init()
                        });

                    }

                    /**
                     * Método que inicia el funcionamiento funcionalidades necesarias para el creador de clusters
                     */
                    init() {
                        var _self = this
                        // Fill taxonomies data
                        this.getDataTaxonomies().then((data) => {
                            _self.fillDataTaxonomies(data);
                        })

                        this.topicsM = new ModalSearchTags()
                    }
                    
                    /**
                     * Método que inicia las comprobaciones para pasar a la siguiente sección
                     * param pos: Posición a la que se quiere pasar
                     */
                    async goStep(pos) {
                        if (pos > 0 && this.step > pos) {

                            this.errorDiv.hide()
                            this.errorDivServer.hide()
                            this.setStep(pos)

                        } else if(pos > 0) {

                            let continueStep = true
                            switch (this.step) {
                                case 1:
                                continueStep = this.checkContinue1()
                                break;
                                case 2:
                                continueStep = this.checkContinue2()
                                if (continueStep) {
                                    try {
                                        continueStep = await this.saveInit()
                                    } catch(err) {
                                        // this.errorDiv.show()
                                        this.errorDivServer.show()
                                        window.location.hash = '#' + this.errorDivServer.attr('id')
                                        continueStep = false;
                                    }
                                }
                                break;
                            }

                            if (continueStep && this.step > (pos - 2)) {
                                this.errorDiv.hide()
                                this.errorDivServer.hide()
                                this.setStep(pos)
                            } else {
                                this.errorDiv.show()
                                window.location.hash = '#' + this.errorDiv.attr('id')
                            }
                        }
                    }

                    /**
                     * Método que borra un perfil
                     */
                    deletePerfil(head1, head2) {
                        $('#' + head1).remove()
                        $('#' + head2).remove()
                        // $(item).parent().parent().remove()
                    }

                    /**
                     * Método que comprueba que los campos obligatorios de la sección 1 han sido rellenados
                     * También guarda el estado de la sección 1
                     * return bool: Devuelve true or false dependiendo de si ha pasado la validación
                     */
                    checkContinue1() {
                        var _self = this

                        // Get first screen data
                        let name = document.getElementById('nombreclusterinput').value
                        let description = document.getElementById('txtDescripcion').value
                        let terms = []
                        let inputsTermsItms = this.modalCrearClusterStep1.find('#cluster-modal-sec1-tax-wrapper').find('input')
                        inputsTermsItms.each((i, e) => {terms.push(e.value)})

                        this.data = {
                            entityID: _self.clusterId,
                            name,
                            description,
                            terms
                        }

                        return (name.length > 0 && terms.length > 0)
                    }

                    /**
                     * Método que comprueba que al menos hay un perfil con areas temáticas para la sección 2
                     * También guarda el estado de la sección 2
                     * return bool: Devuelve true or false dependiendo de si ha pasado la validación
                     */
                    checkContinue2() {
                        var _self = this

                        // Get the second screen
                        let profiles = this.modalCrearClusterStep2.find('.panel-collapse')
                        let profilesObjets = []

                        profiles.each((i, e) => {
                            let termsSec = $(e).find('.terms-items')
                            let inputsTermsProf = termsSec.find('input')
                            let profTerms = []
                            inputsTermsProf.each((i, e) => {profTerms.push(e.value)})


                            let topicsSec = $(e).find('.tags-items')
                            let inputsTopicsProf = topicsSec.find('input')
                            let profTags = []
                            inputsTopicsProf.each((i, e) => {profTags.push(e.value)})

                            profilesObjets.push({
                                "name": $(e).data('name'),
                                "terms": profTerms,
                                "tags": profTags,
                            })
                        })

                        // Set the post data
                        this.data = {
                            ...this.data,
                            profiles: profilesObjets
                        }

                        return (this.data.profiles.length > 0 && this.data.profiles[0].name != undefined && this.data.profiles[0].name.length > 0 && this.data.profiles[0].terms.length > 0)
                    }

                    /**
                     * Método que genera la petición get para obtener las taxonomías
                     */
                    getDataTaxonomies() {
                        
                        // https://localhost:44321/Cluster/GetThesaurus?listadoCluster=%5B%22researcharea%22%5D
                        let listThesaurus = ["researcharea"];
                        urlLT.searchParams.set('listThesaurus', JSON.stringify(listThesaurus));
                        // urlLT.searchParams.set('lang', currentLang);

                        return new Promise((resolve, reject) => {
                            $.get(urlLT.toString(), function (data) {
                                resolve(data)
                            });
                        })
                    }

                    /**
                     * Inicia la generación del html para las diferentes taxonomías
                     * param data, Objeto con los items
                     */
                    fillDataTaxonomies(data) {
                        // Set tree
                        let resultHtml = this.fillTaxonomiesTree(data['researcharea'])
                        this.divTesArbol.append(resultHtml)

                        // Set list
                        /* resultHtml = this.fillTaxonomiesList(data['researcharea'])
                        this.divTesLista.append(resultHtml)
                        this.divTesListaCaths = this.divTesLista.find(".categoria-wrap") */

                        // Open & close event trigger
                        let desplegables = this.modalAreasTematicas.find('.boton-desplegar')
                    
                        if (desplegables.length > 0) {
                            desplegables.off('click').on('click', function () {
                                $(this).toggleClass('mostrar-hijos');
                            });
                        }

                        // Add events when the items are clicked
                        this.itemsClicked();
                    }

                    /**
                     * Add events when the Taxonomies items are clicked
                     */
                    itemsClicked() {

                        var _self = this

                        // Click into the tree
                        this.divTesArbol.off('click').on("click", "input.at-input", function() {
                            let dataVal = this.checked
                            let dataId = $(this).attr('id')
                            let dataParentId = $(this).data('parentid')
                            dataParentId = (dataParentId.length > 0) ? dataParentId.split('/').pop() : dataParentId

                            if (dataParentId.length > 0) {
                                if (!dataVal) {
                                    let brothers = $(this).parent().parent().parent().parent().find('input.at-input:checked')
                                    if (brothers.length == 0) {
                                        _self.selectParent(dataParentId, false)
                                    } else {
                                        _self.selectParent(dataParentId)
                                    }
                                } else {
                                    _self.selectParent(dataParentId)
                                }
                            }

                            
                        })

                        // Click into the list
                        /* this.divTesLista.off('click').on("click","input.at-input", function() {
                            let dataVal = this.checked
                            let dataId = $(this).attr('id').substring("list__".length)

                            if (dataVal) {
                                document.getElementById(dataId).checked = true
                            } else  {
                                document.getElementById(dataId).checked = false
                            }
                        }) */
                    }

                    /**
                     * Select the parent in the list and add a class to active the item
                     * param pId, the parent id
                     * param addclass, check if should dishabled the item
                     */
                    selectParent(pId, addclass = true) {

                        let itemP = document.getElementById(pId)
                        let $itemP = $(itemP)
                        // Check if add or remove class select
                        if (addclass) {
                            $itemP.addClass('selected')
                        } else {
                            // Search for childs and remove selected class if not has childs enhabled
                            let childs = $itemP.parent().parent().parent().find('input.at-input:checked')
                            if (childs.length == 0) {
                                $itemP.removeClass('selected')
                            } else {
                                // Stop the recursive function if it's childs checked
                                return null
                            }
                        }
                        // Call to the parent to change the 'selected' class
                        let dataParentId = $itemP.data('parentid')
                        dataParentId = (dataParentId.length > 0) ? dataParentId.split('/').pop() : dataParentId

                        if (dataParentId.length > 0) {this.selectParent(dataParentId, addclass)}
                    }

                    /**
                     * Crea el html con las taxonomías
                     * param data, array con los items
                     * param idParent, id del nodo padre, para generar los hijos
                     * return string con el texto generado
                     */
                    fillTaxonomiesTree(data, idParent = "") {

                        var _self = this;

                        let resultHtml = "";
                        data.filter(e => e.parentId == idParent).forEach(e => {
                            let id = e.id.split('/').pop()
                            
                            let children = _self.fillTaxonomiesTree(data, e.id);

                            let disabled = (children != "" && children != undefined) ? 'disabled="disabled"' : ""
                            
                            resultHtml += '<div class="categoria-wrap">\
                                    <div class="categoria ' + id + '">\
                                        <div class="custom-control custom-checkbox themed little primary">\
                                            <input type="checkbox" class="custom-control-input at-input" id="' + id + '" data-id="' + e.id + '" data-name="' + e.name + '" data-parentid="' + e.parentId + '" ' + disabled +'>\
                                            <label class="custom-control-label" for="' + id + '">' + e.name + '</label>\
                                        </div>\
                                    </div>'


                            if (children != "" && children != undefined) {
                                resultHtml += '<!--  pintar esto solo cuando tenga hijos -->\
                                    <div class="boton-desplegar">\
                                        <span class="material-icons">keyboard_arrow_down</span>\
                                    </div> \
                                    <!--  -->'

                                resultHtml += '<div class="panHijos">' + children + '</div>'
                            }

                            resultHtml += '</div>'
                        });

                        return resultHtml
                    }

                    /**
                     * Crea el html con las taxonomías en arbol
                     * param data, array con los items
                     * return string con el texto generado
                     */
                    fillTaxonomiesList(data) {

                        var _self = this;

                        let resultHtml = "";
                        data.forEach(e => {
                            let id = e.id.split('/').pop()
                            resultHtml += '<div class="categoria-wrap" data-text="' + e.name + '">\
                                    <div class="categoria list__' + id + '">\
                                        <div class="custom-control custom-checkbox themed little primary">\
                                            <input type="checkbox" class="custom-control-input at-input" id="list__' + id + '" data-id="' + e.id + '" data-parentid="' + e.parentId + '" data-name="' + e.name + '">\
                                            <label class="custom-control-label" for="list__' + id + '">' + e.name + '</label>\
                                        </div>\
                                    </div>\
                                </div>'
                        });

                        return resultHtml
                    }

                    /**
                     * Filtra los items de la lista de categorías
                     * param input con el texto a filtrar
                     */
                    MVCFiltrarListaSelCat(item) {

                        // Get the text
                        let searchTxt = $(item).val()

                        // Set the RegExp
                        let matcher = new RegExp(searchTxt, "i");

                        // Search the text into the items
                        let notFounds = this.divTesListaCaths.each((i, e) => {
                            if ($(e).data("text") != null && $(e).data("text") != undefined && $(e).data("text").search(matcher) != -1) {
                                $(e).removeClass('d-none');
                            } else if($(e).data("text") != null && $(e).data("text") != undefined) {
                                $(e).addClass('d-none');
                            }
                        })

                    }

                    /**
                     * Método que guarda los 2 pasos iniciales
                     */
                    saveInit() {

                        var _self = this

                        // Set the url parameters
                        urlSC1.searchParams.set('pIdGnossUser', this.userId)
                        // urlSC1.searchParams.set('pIdGnossComSName', this.communityShortName)
                        return new Promise((resolve) => {

                            this.postCall(urlSC1, this.data).then((data) => {
                                _self.clusterId = data
                                console.log("_self.clusterId", _self.clusterId)
                                // _self.goStep(3)
                                _self.startStep3()
                                resolve(true)
                            }).catch(err => {
                                resolve(false)
                            }) 
                        })

                    }

                    /** 
                     * Método que realiza la llamada POST
                     * param url, objeto URL que contiene la url de la petición POST
                     * param theParams, parámetros para la petición POST
                     */
                    postCall(url, theParams) {
                        let _self = this
                        return new Promise((resolve) => {
                            $.post(url.toString(), theParams, function(data) {
                                resolve(data)
                            }).fail(function(err) {
                                resolve(err);
                            })
                        })
                    }

                    /**
                     * Carga todas las áreas temáticas seleccionadas para ese perfil / sección 
                     * param item, sección donde se encuentra la información para cargar las areas temáticas
                     */
                    setAreasTematicas(item) {
                        let _self = this

                        let relItem = $('#' + $(item).data("rel"))

                        if (relItem.length > 0) {

                            let dataJson = relItem.data('jsondata')

                            // Reestablecer las categorías
                            this.divTesArbol.find('input.at-input').each((i, e) => {
                                e.checked = false
                                e.classList.remove('selected')
                            })

                            // Establece las categorías de la sección
                            if (typeof dataJson == "object") {

                                dataJson.forEach(e => {
                                    let item = document.getElementById(e)
                                    item.checked = true

                                    // Comprueba si tiene padre para establecerlo con habilitado.
                                    let parentId = item.getAttribute('data-parentid')
                                    if (parentId.length > 0) {
                                        parentId = (parentId.length > 0) ? parentId.split('/').pop() : parentId

                                        _self.selectParent(parentId)
                                    }
                                })
                            }


                            // Muestra el modal de las áreas temáticas
                            this.modalAreasTematicas.modal('show')

                            this.saveAreasTematicas(relItem)
                        }
                    }

                    /**
                     * Método que inicia el modal de los tópicos 
                     */
                    loadModalTopics(el) {

                        let parent = $(el).parent()

                        // Establecer los tags de la sección
                        this.setTAGS(el)
                        // Inicia el funcionamiento de los tags
                        this.topicsM.init()

                        this.topicsM.closeBtnClick().then((data) => {
                            // parent.data('jsondata', data)
                            let relItem = $('#' + $(el).data("rel"))
                            console.log("///// closeBtnClick CLICKADO /////")
                            console.log('$(el).data("rel")', $(el).data("rel"))
                            console.log("data", data)
                            this.saveTAGS(relItem, data)
                        })
                    }

                    /**
                     * Método que genera el evento para añadir los tags selecciondas en el popup
                     * param relItem, elemento relacionado para indicar dónde deben de guardarse las areas temátcias seleccionadas
                     */
                    saveTAGS(relItem, data) {

                        console.log("relItem", relItem)
                        console.log("data", data)
                        console.log("relItem.data()", relItem.data())

                        let htmlResWrapper = $('<div class="tag-list mb-4 d-inline"></div>')

                        let htmlRes = ''
                        let arrayItems = [] // Array para guardar los items que se van a usar
                        data.forEach(e => {
                            htmlRes += `<div class="tag" title="` + e + `" data-id="` + e + `">
                                <div class="tag-wrap">
                                    <span class="tag-text">` + e + `</span>
                                    <span class="tag-remove material-icons">close</span>
                                </div>
                                <input type="hidden" value="` + e + `">
                            </div>`
                        })

                        htmlResWrapper.append(htmlRes)

                        relItem.html(htmlResWrapper)

                        // Se añade un json para saber qué categorías se han seleccionado
                        relItem.data('jsondata', data)

                        this.deleteTAGS(relItem)
                    }



                    /**
                     * Método que elimina las etiquetas del arbol y del listado
                     * param relItem, contenedor donde se encuentran las áreas temáticas seleccionadas
                     */
                    deleteTAGS(relItem) {

                        // Selecciona la áreas temáticas seleccionadas dentro de selector
                        let tagsItems = relItem.find('.tag-wrap');
                        tagsItems.on('click', '.tag-remove', function() {
                            // Selecciona el item padre para eliminar
                            let itemToDel = $(this).parent().parent()
                            let inputShortId = itemToDel.data('id')

                            // Remove the current item from array
                            let jsonItems = relItem.data('jsondata')
                            let myIndex = jsonItems.indexOf(inputShortId)
                            if (myIndex !== -1) {
                                jsonItems.splice(myIndex, 1)
                            }


                            // Delete item
                            itemToDel.remove()

                        })
                    }


                    /**
                     * Carga todas las áreas temáticas seleccionadas para ese perfil / sección 
                     * param item, sección donde se encuentra la información para cargar las areas temáticas
                     */
                    setTAGS(item) {
                        let _self = this

                        let relItem = $('#' + $(item).data("rel"))

                        if (relItem.length > 0) {

                            let dataJson = relItem.data('jsondata')

                            // Reestablecer las categorías
                            _self.topicsM.removeTags()

                            // Establece las categorías de la sección
                            if (typeof dataJson == "object") {

                                dataJson.forEach(e => {
                                    _self.topicsM.addTag(e)
                                })
                            }
                        }
                    }


                    /**
                     * Método que genera el evento para añadir las áreas temáticas selecciondas en el popup
                     * param relItem, elemento relacionado para indicar dónde deben de guardarse las areas temátcias seleccionadas
                     */
                    saveAreasTematicas(relItem) {

                        // Evento para cuando se seleccione guardar las áreas temáticas
                        this.btnSaveAT.off('click').on('click', (e) => {
                            e.preventDefault()

                            // Oculta el modal de las áreas temáticas
                            this.modalAreasTematicas.modal('hide')

                            // Selecciona y establece el contenedor de las areas temáticas
                            // let relItem = $('#' + $(item).data("rel"))

                            let htmlResWrapper = $('<div class="tag-list mb-4 d-inline"></div>')

                            let htmlRes = ''
                            let arrayItems = [] // Array para guardar los items que se van a usar
                            this.divTesArbol.find('input.at-input').each((i, e) => {
                                if (e.checked) {
                                    htmlRes += '<div class="tag" title="' + $(e).data('name') + '" data-id="' + $(e).data('id') + '">\
                                        <div class="tag-wrap">\
                                            <span class="tag-text">' + $(e).data('name') + '</span>\
                                            <span class="tag-remove material-icons">close</span>\
                                        </div>\
                                        <input type="hidden" value="' + $(e).data('id') + '">\
                                    </div>'
                                    arrayItems.push(e.id)
                                }
                            })

                            htmlResWrapper.append(htmlRes)

                            relItem.html(htmlResWrapper)

                            // Se añade un json para saber qué categorías se han seleccionado
                            relItem.data('jsondata', arrayItems)

                            this.deleteAreasTematicas(relItem)

                        })
                    }


                    /**
                     * Método que elimina las áreas temáticas del arbol y del listado
                     * param relItem, contenedor donde se encuentran las áreas temáticas seleccionadas
                     */
                    deleteAreasTematicas(relItem) {

                        // Selecciona la áreas temáticas seleccionadas dentro de selector
                        let tagsItems = relItem.find('.tag-wrap');
                        tagsItems.on('click', '.tag-remove', function() {
                            // Selecciona el item padre para eliminar
                            let itemToDel = $(this).parent().parent()
                            let inputShortId = itemToDel.data('id')

                            if (inputShortId.length > 0) {
                                inputShortId = inputShortId.split('/').pop()
                            }

                            // Set the inputs into the areas temáticas in false
                            try {
                                document.getElementById(inputShortId).checked = false
                                // document.getElementById('list__' + inputShortId).checked = false
                            }catch (error) { }

                            // Remove the current item from array
                            let jsonItems = relItem.data('jsondata')
                            let myIndex = jsonItems.indexOf(inputShortId)
                            if (myIndex !== -1) {
                                jsonItems.splice(myIndex, 1)
                            }


                            // Delete item
                            itemToDel.remove()

                        })
                    }

                    /**
                     * Método que añade un perfil nuevo en el segundo paso
                     */
                    addPerfilSearch() {

                        // Get the name
                        let name = this.inputPerfil.val()
                        this.modalPerfil.modal('hide')
                        this.inputPerfil.val("") // Set the name empty

                        // Get the image user url
                        let imgUser = this.modalCrearCluster.data('imguser')

                        // Set The item id
                        let nameId = name.replace(/[^a-z0-9_]+/gi, '-').replace(/^-|-$/g, '').toLowerCase()
                        let rand = Math.random() * (100000 - 10000) + 10000
                        nameId = nameId + rand.toFixed()

                        // Get the panel item
                        let panel = this.clusterAccordionPerfil.find('.panel')

                        // 
                        let item = `<div class="panel-heading" role="tab" id="`+ nameId +`-tab">
                                <p class="panel-title">
                                    <a class="perfil" data-toggle="collapse" data-parent="#accordion_cluster" href="#`+ nameId +`" aria-expanded="true" aria-controls="`+ nameId +`" data-expandable="false">
                                        <span class="material-icons">keyboard_arrow_down</span>
                                        <img src="`+ imgUser +`" alt="person">
                                        <span class="texto">`+ name +`</span>
                                    </a>
                                </p>
                                <a href="javascript:void(0)" onclick="stepsCls.deletePerfil('`+ nameId +`-tab', '`+ nameId +`')" class="btn btn-outline-grey eliminar">
                                    ` + this.eliminarText + `
                                    <span class="material-icons-outlined">delete</span>
                                </a>
                            </div>
                            <div id="`+ nameId +`" data-name="`+ name +`" class="panel-collapse collapse show" role="tabpanel" aria-labelledby="`+ nameId +`-tab">
                                <div class="panel-body">

                                    <!-- Areas temáticas -->
                                    <div class="form-group mb-5 edit-etiquetas terms-items">
                                        <label class="control-label d-block">`+ this.areasTematicasText +`</label>
                                        <div class="autocompletar autocompletar-tags form-group" id="modal-seleccionar-area-tematica-`+ nameId +`">
                                            <div class="tag-list mb-4 d-inline"></div> 
                                        </div>
                                        <a class="btn btn-outline-primary" href="javascript: void(0)">
                                            <span class="material-icons" onclick="stepsCls.setAreasTematicas(this)" data-rel="modal-seleccionar-area-tematica-`+ nameId +`">add</span>
                                        </a>
                                    </div>
                                    <!-- -->

                                    <!-- Tópicos -->
                                    <div class="form-group mb-5 edit-etiquetas tags-items">
                                        <label class="control-label d-block">` + this.descriptoresEspecificosText + `</label>
                                        <div class="autocompletar autocompletar-tags form-group" id="modal-seleccionar-tags-`+ nameId +`">
                                            <div class="tag-list mb-4 d-inline"></div> 
                                        </div>
                                        <a class="btn btn-outline-primary" href="javascript: void(0)">
                                            <span class="material-icons" data-rel="modal-seleccionar-tags-`+ nameId +`" onclick="stepsCls.loadModalTopics(this)">add</span>
                                        </a>
                                    </div>
                                    <!-- -->

                                </div>
                            </div>`

                        panel.append(item)
                    }


                    /**
                     * Establece el "estado" del "step-progress"
                     * param tstep, posición a establecer
                     */
                    setStep(tstep) {
                        this.step = tstep

                        // Steps Checks
                        this.stepsCircle.each((index, step) => {
                            $(step).removeClass("done active")
                        })

                        // Bar step
                        this.stepsBar.each((index, step) => {
                            $(step).removeClass("active")
                        })

                        // Title step
                        this.stepsText.each((index, step) => {
                            $(step).removeClass("current")
                        })

                        // Content
                        this.stepsContent.each((index, step) => {
                            $(step).removeClass("show")
                        })

                        // Add class before
                        for (var i = 0; i < (this.step - 1); i++) {
                            $(this.stepsCircle[i]).addClass("done active")
                            $(this.stepsBar[i]).addClass("active")

                        }
                        // Add class current
                        $(this.stepsCircle[this.step - 1]).addClass("active")
                        $(this.stepsContent[this.step - 1]).addClass("show")
                        $(this.stepsText[this.step - 1]).addClass("current")

                    }

                    startStep3() { 
                        comportamientoPopupCluster.init(this.data)
                        this.PrintPerfilesstp3 ()
                    }

                    /**
                     * Pintar los perfiles "finales"
                     */
                    PrintPerfilesstp3 () {

                        let imgUser = this.modalCrearCluster.data('imguser')

                        let profiles = this.data.profiles.map((e, i) => {
                            let idAccordion = (e.name.replace(/[^a-z0-9_]+/gi, '-').replace(/^-|-$/g, '').toLowerCase() + "-" + i)
                            return $(`<div class="panel-group pmd-accordion" id="accordion-`+ idAccordion +`" role="tablist" aria-multiselectable="true">
                                <div class="panel">
                                    <div class="panel-heading" role="tab" id="experto-`+ idAccordion +`-tab">
                                        <p class="panel-title">
                                            <a class="perfil" data-toggle="collapse" data-parent="#accordion" href="#experto-`+ idAccordion +`" aria-expanded="true" aria-controls="experto-1" data-expandable="false">
                                                <span class="material-icons">keyboard_arrow_down</span>
                                                <img src="`+ imgUser +`" alt="imguser">
                                                <span class="texto">`+ e.name +`</span>
                                            </a>
                                        </p>
                                    </div>
                                    <div id="experto-`+ idAccordion +`" class="panel-collapse collapse show" role="tabpanel" aria-labelledby="experto-`+ idAccordion +`-tab">
                                        <div class="panel-body">

                                            <table class="display nowrap table table-sm tableusers">
                                                <thead>
                                                    <tr>
                                                        <th class="th-user">

                                                        </th>
                                                        <th class="th-publicaciones">
                                                            Publicaciones
                                                        </th>
                                                        <th class="th-principal">
                                                            Principal
                                                        </th>
                                                        <th class="th-acciones">

                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>`)
                        })

                        this.perfilesStep3.append(profiles)
                    }

                    /** 
                    * Añade un usuario perfil de las pestañas y al objeto
                    */
                    addUserClusterStep3 (itemToAdd) {
                        let user = {}
                        // Obtiene el usuario 
                        // TODO

                        var userHTML = $(`
                            <tr>
                                <td class="td-user">
                                    <div class="user-miniatura">
                                        <div class="imagen-usuario-wrap d-none">
                                            <a href="javascript:void(0)">
                                                <div class="imagen">
                                                    <span style="background-image: url(theme/resources/imagenes-pre/foto-usuario-2.jpg)"></span>
                                                </div>
                                            </a>
                                        </div>
                                        <div class="nombre-usuario-wrap">
                                            <a href="`+ user.url +`">
                                                <p class="nombre">`+ user.name +`</p>
                                                <p class="nombre-completo">`+ user.category +`. `+ user.departament +`</p>
                                            </a>
                                        </div>
                                    </div>
                                </td>
                                <td class="td-publicaciones">
                                    `+ user.publicacions +`
                                </td>
                                <td class="td-principal">
                                    `+ user.principal +`
                                </td>
                                <td class="td-acciones">
                                    <ul class="no-list-style">
                                        <li>
                                            <a href="javascript: void(0);" class="texto-gris-claro">
                                                Eliminar
                                                <span class="material-icons-outlined">delete</span>
                                            </a>
                                        </li>
                                    </ul>
                                </td>
                            </tr>
                        `)

                        $('accordion-' + itemToAdd).find('table.tableusers tbody').append(userHTML)
                    }

                }

                var stepsCls = new StepsCluster();



                // Clase para las trabajar en las gráficas de los colaboradores en el cluster
                class CargarGraficaProjectoClusterObj {
                    dataCB = {};
                    idContenedorCB = "";
                    typesOcultar = [];
                    showRelation = true;

                    actualizarGraficaColaboradores = () => {
                        AjustarGraficaArania(this.dataCB, this.idContenedorCB, this.typesOcultar, this.showRelation);
                    };

                    CargarGraficaColaboradores = (pIdGrupo, parametros, idContenedor, mostrarCargando = false) => {
                        var url = servicioExternoBaseUrl + "servicioexterno/Hercules/DatosGraficaColaboradoresGrupo";
                        if (layDepuracion) {
                            url = localUrlBaseLayout + "Hercules/DatosGraficaColaboradoresGrupo";
                        }
                        var self = this;
                        var arg = {};
                        arg.pIdGrupo = pIdGrupo;
                        arg.pParametros = parametros;
                        arg.pMax = $('#numColaboradoresCluster').val();
                        $('#' + idContenedor).empty();
                        if (mostrarCargando) {
                            MostrarUpdateProgress();
                        }

                        let optionsRelations = ["relation_project", "relation_document"];

                        $.get(url, arg, function (data) {
                            // Establecer los valores en la variable externa
                            self.dataCB = data;
                            self.idContenedorCB = idContenedor;

                            self.actualizarGraficaColaboradores();
                            if (mostrarCargando) {
                                OcultarUpdateProgress();
                            }
                        });

                    };

                };

                // Creamos un nuevo objeto
                var newGrafProjClust = new CargarGraficaProjectoClusterObj();


                // Función a la que se llama para seleccionar qué elementos de las relaciones mostrar
                function actualizarTypesClusterOcultar(type) {
                    if (type == "relation_todas") {
                        newGrafProjClust.typesOcultar = [];
                    } else {
                        newGrafProjClust.typesOcultar = [type];
                    }
                    newGrafProjClust.actualizarGraficaColaboradores();
                }


                // función para actualizar la gráfica de colaboradores
                function ActualizarGraficaClusterolaboradoresCluster(typesOcultar = [], showRelation = true) {
                    AjustarGraficaArania(dataCB, idContenedorCB, typesOcultar, showRelation);
                }

                // Comportamiento página proyecto
                var comportamientoPopupCluster = {
                    tabActive: null,
                    init: function (clusterObj) {
                        this.config();
                        let paramsCl = this.workCO(clusterObj)
                        let profiles = this.setProfiles(clusterObj)

                        // Iniciar el listado de usuarios
                        buscadorPersonalizado.init("@Html.Translate("INVESTIGADORES")", "#clusterListUsers", "searchCluster=" + paramsCl, null, "profiles=" + JSON.stringify(profiles) + "|viewmode=cluster|rdf:type=person", "@Comunidad.Url", "@Comunidad.Key.ToString()")

                        var parametros = ObtenerHash2()+"&" + buscadorPersonalizado.filtro;
                        newGrafProjClust.CargarGraficaProjectoClusterObj("", parametros, 'colaboratorsgraphCluster');

                        return;
                    },
                    config: function () {
                        var that = this;

                        //Métodos colaboradores
                        $('#removeNodesCollaboratorsCluster').unbind().click(function (e) {
                            e.preventDefault();
                            var numColaboradores = parseInt($('#numColaboradoresCluster').val());
                            if (numColaboradores > 10) {
                                $('#numColaboradoresCluster').val((numColaboradores - 10));
                            }
                            $('#numNodosCollaboratorsCluster').html($('#numColaboradoresCluster').val());
                            var parametros = ObtenerHash2() + "&" + buscadorPersonalizado.filtro;
                            newGrafProjClust.CargarGraficaProjectoClusterObj("", parametros, 'colaboratorsgraphCluster', true);
                        });

                        $('#addNodesCollaboratorsCluster').unbind().click(function (e) {
                            e.preventDefault();
                            var numColaboradores = parseInt($('#numColaboradoresCluster').val());
                            $('#numColaboradoresCluster').val((numColaboradores + 10));
                            $('#numNodosCollaboratorsCluster').html($('#numColaboradoresCluster').val());
                            var parametros = ObtenerHash2() + "&" + buscadorPersonalizado.filtro;
                             CargarGraficaProjectoClusterObj("", parametros,'colaboratorsgraph',true);
                             newGrafProjClust.CargarGraficaProjectoClusterObj("", parametros, 'colaboratorsgraphCluster', true);
                        });
                        //Fin métodos colaboradores

                        return;
                    },

                    /*
                    * Convierte el objeto del cluster a los parámetros de consulta 
                    */
                    workCO: function (clusterObj) {

                        let results = null
                        if (clusterObj && clusterObj.profiles) {
                            results = clusterObj.profiles.map(e => {
                                let terms = (e.terms) ? e.terms.map(itm => '<' + itm + '>').join(',') : "<>"
                                let tags = (e.tags) ? e.tags.map(itm => "'" + itm + "'").join(',') : "''"
                                return terms + '@@@@@@' + tags
                            }).join('@@@@@@@@')
                        }

                        return results
                    },

                    /*
                    * Convierte los profiles en json 
                    */
                    setProfiles: function (clusterObj) {

                        let results = null
                        if (clusterObj && clusterObj.profiles) {
                            clusterObj.profiles.forEach((e, i) => {

                            })
                            results = clusterObj.profiles.map((e, i) => (
                                {
                                    [e.name.replace(/[^a-z0-9_]+/gi, '-').replace(/^-|-$/g, '').toLowerCase() + "-" + i]: e.name
                                }
                            ))
                        }

                        return results
                    }


                };

                /**
                * Clase que contiene la funcionalidad del modal de los TAGS para el Cluster
                */
                class ModalSearchTags {
                    constructor() {
                        this.body = $('body')
                        this.modal = this.body.find('#modal-anadir-topicos-cluster')
                        this.inputSearch = this.modal.find('#tagsSearchModalCluster')
                        this.results = this.modal.find('.ac_results')
                        this.resultsUl = this.results.find('ul')
                        this.timeWaitingForUserToType = 750; // Esperar 0.75 segundos a si el usuario ha dejado de escribir para iniciar búsqueda
                        this.tagsWrappper = this.modal.find('.tags ul')
                        this.ignoreKeysToBuscador = [37, 38, 39, 40, 46, 8, 32, 91, 17, 18, 20, 36, 18, 27];

                        // Inicializa la funcionalidad del buscador de TAGS
                        this.inputSearchEnter()

                        /* if (window.location.hostname == 'depuracion.net' || window.location.hostname.includes("localhost")) {
                            var urlSTAGS = new URL(servicioExternoBaseUrl + 'servicioexterno/' + uriSearchTags)
                        } */
                    }

                    /**
                     * Inicia la funcionalidad del modal
                     */
                    init() {
                        this.modal.modal('show') 
                    }

                    /**
                     * Funcionalidad para cuando se introduce un valor en el buscador
                     */
                    inputSearchEnter() {
                        let _self = this
                        this.inputSearch.off('keyup').on('keyup', function(e) {
                            let inputVal = this.value

                            if (inputVal.length <= 1) 
                            {
                                _self.hiddenResults()
                            }
                            else {
                                // Valida si el valor introducirdo en el input es 'válido'
                                if (_self.validarKeyPulsada(e) == true) {
                                    // Limpia el 'time' para reinicializar la espera para iniciar la búsqueda de TAGS
                                    clearTimeout(_self.timer)
                                    // Espera 0.5s para realizar la búsqueda de TAGS
                                    _self.timer = setTimeout(function () {
                                        _self.hiddenResults()

                                        _self.searchCall(inputVal).then((data) => {
                                            // Muestra el selector 
                                            _self.results.show()
                                            if (data.length > 0) {
                                                // Pinta los resultados
                                                let resultHTML = data.map(e => {
                                                    return '<li class="ac_even">' + e + '</li>'
                                                })
                                                _self.resultsUl.html(resultHTML.join(''))
                                                _self.addTagClick()

                                            } else {
                                                _self.mostrarPanelSinResultados()
                                            }
                                            
                                        })

                                    }, _self.timeWaitingForUserToType);
                                }               
                            }
                        })
                    }

                    /**
                     * Oculta y borra los resultados del API
                     */
                    hiddenResults() {
                        this.resultsUl.html('')
                        this.results.hide()
                    }

                    /**
                     * Muestra un texto "sin resultados" cuando no hay resultados del API
                     */
                    mostrarPanelSinResultados() {
                        this.resultsUl.html('<li>Sin resultados</li>')
                    }

                    /**
                     * Método que genera un inicia el evento de añadir el tag (al hacer 'click') cuando se 
                     * ha seleccionado un elemento de la lista de opciones disponibles 
                     */
                    addTagClick() {
                        let _self = this
                        // Evento para el click
                        this.resultsUl.off('click').on('click', 'li', function(e) {
                            let texto = $(this).text()

                            if (texto != "Sin resultados") {
                                _self.addTag(texto) // Añade el texto
                                _self.hiddenResults() // Vacía los resultados de la búsqueda
                                _self.inputSearch.val('') // Vacía el campo de búsqueda
                            }

                        })
                        // Delete list item  
                    }

                    /**
                     * Añade un tag al modal
                     * param texto, texto del tag a añadir
                     */
                    addTag(texto) {
                        let item = $(`<li>
                                        <a href="javascript: void(0);">
                                            <span class="texto">` + texto + `</span>
                                        </a>
                                        <span class="material-icons cerrar">close</span>
                                    </li>`)
                        this.tagsWrappper.append(item)
                        
                        item.off('click').on('click', '.cerrar', function(e) {
                            let li = $(this).parent().remove()
                        })
                    }

                    /**
                     * Remove all tags html
                     */
                    removeTags() {
                        this.tagsWrappper.html('')
                    }

                    /**
                     * Método que genera un evento para el botón "guardar" y devuelve el número de TAGS añadidas
                     * return promise (array) con la lista de resultados 
                     */
                    closeBtnClick() {
                        let _self = this
                        return new Promise((resolve, reject) => {

                            this.modal.find('.btnclosemodal').off('click').on('click', function(e) {
                            
                                let result = new Array()
                                _self.tagsWrappper.find('li .texto').each((i, item) => {
                                    result.push(item.innerText)
                                })
                                resolve(result)
                            })
                        })
                    }


                    /**
                     * Comprobará la tecla pulsada, y si no se encuentra entre las excluidas, dará lo introducido por válido devolviendo true
                     * Si se pulsa una tecla de las excluidas, devolverá false y por lo tanto el metabuscador no debería iniciarse
                     * param {any} event: Evento o tecla pulsada en el teclado
                     * return bool, devuelve si la tecla pulsada es válida o no
                     */
                    validarKeyPulsada (event) {
                        const keyPressed = this.ignoreKeysToBuscador.find(key => key == event.keyCode);
                        if (keyPressed) {
                            return false
                        }
                        return true;
                    }

                    /**
                     * Realiza la petición ajax (GET) para buscar los tags sugeridos en el input
                     * param {string} inputVal: Texto para la búsqueda
                     * return promise (array) con la lista de resultados 
                     */
                    searchCall (inputVal) {
                        // Set the url parameters
                        urlSTAGS.searchParams.set('tagInput', inputVal)

                        return new Promise((resolve) => {
                            $.get(urlSTAGS.toString(), function (data) {
                                resolve(data)
                            });
                        })
                    }
                }

            </script>

            <style type="text/css">
                .section-steps.show {
                    transform: scale(1);
                    max-height: initial;
                }

                .edicionCluster .step-progress__circle {
                    position: relative
                }

                .section-steps {
                    transform: scale(0);
                    max-height: 0px;
                }

                .categoria-wrap .categoria .custom-checkbox .custom-control-input.selected ~ .custom-control-label {
                    font-weight: 500;
                }

                .custom-checkbox.themed.primary .custom-control-input.selected ~ .custom-control-label,
                .custom-radio.themed.primary .custom-control-input.selected ~ .custom-control-label {
                    color: var(--c-primario);
                }

                .edicionCluster .grafico-wrap {
                    background-color: var(--c-gris-fondo);
                    margin-bottom: 16px;
                    height: 100%;
                    padding: 24px 20px;
                    min-height: 200px;
                    position: relative;
                }

                .edicionCluster .grafico-wrap .graph-controls {
                    position: absolute;
                    top: 24px;
                    right: 20px;
                    z-index: 200;
                }

                .edicionCluster .formulario-edicion .tab-content .row {
                    margin-left: 0;
                    margin-right: 0;
                    margin-bottom: 20px;
                }
            </style>



        }   
    </body>
</html>
