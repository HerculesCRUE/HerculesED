<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML+RDFa 1.0//EN" "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="@Html.GetUtilIdiomas().LanguageCode" xmlns:og="http://ogp.me/ns#">
<head>
    @{
        CommunityModel Comunidad = Html.GetComunidad();
        UserIdentityModel IdentidadActual = Html.GetIdentidadActual();
        string avisoCookies = Html.GetCookiesWarning();
    }

    @if (Comunidad != null && Comunidad.ProjectExtraHTMLList != null)
    {
        @Html.PartialView("../Shared/ProyectoElementoHTML", Comunidad.ProjectExtraHTMLList.Where(a => a.Ubication == UbicacionHtmlProyecto.BeginHead).ToList());
    }

    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

    @Html.PartialView("../Shared/Head/_Metas")

    <title>@Html.GetTituloPagina()</title>

    <link id="IMGfavicon" rel="shortcut icon" type="image/ico" href="@Html.GetFavicon()" />

    @if (!string.IsNullOrEmpty(Html.GetUrlCanonical()))
    {
        <link rel="canonical" href="@Html.GetUrlCanonical()" />
    }
    @if (Html.GetCabecera() != null && Html.GetCabecera().MultiLingualLinks != null)
    {
        if (Html.GetCabecera().MultiLingualLinks.Keys.Contains(Html.GetUtilIdiomas().LanguageCode))
        {
            <link rel="alternate" hreflang="@Html.GetUtilIdiomas().LanguageCode" href="@Html.GetCabecera().MultiLingualLinks[Html.GetUtilIdiomas().LanguageCode].Value" />
        }
        foreach (string language in Html.GetCabecera().MultiLingualLinks.Keys)
        {
            if (!language.Equals(Html.GetUtilIdiomas().LanguageCode))
            {
                if (Html.GetCabecera().MultiLingualLinks[language].Key)
                {
                    <link rel="alternate" hreflang="@language" href="@Html.GetCabecera().MultiLingualLinks[language].Value" />
                }
            }
        }
    }
    @*@if (!string.IsNullOrEmpty(Html.GetURLRSS()))
        {
            <link rel="alternate" type="application/rss+xml" href="@Html.GetURLRSS()" />
        }*@
    @if (!string.IsNullOrEmpty(Html.GetURLRDF()))
    {
        <link rel="alternate" type="application/rdf+xml" href="@Html.GetURLRDF()" />
    }

    @if (Html.GetListaMetas() != null)
    {
        foreach (KeyValuePair<string, string> contentMeta in Html.GetListaMetas())
        {
            <meta name="@contentMeta.Key" content="@contentMeta.Value" />
        }
    }

    @if (Html.GetListaMetasComplejas() != null)
    {
        foreach (Dictionary<string, string> atributosMeta in Html.GetListaMetasComplejas())
        {
            System.Text.StringBuilder meta = new System.Text.StringBuilder("<meta");

            foreach (string clave in atributosMeta.Keys)
            {
                meta.Append(" ");
                meta.Append(clave);
                meta.Append("=");
                meta.Append("\"");
                meta.Append(atributosMeta[clave]);
                meta.Append("\"");
            }

            meta.Append(" />\r\n");

            @Html.Raw(meta)
        }
    }

    @Html.PartialView("../Shared/Head/_HojasDeEstilo")

    @Html.PartialView("../Shared/Head/_FicherosJavascript")

    @if (Html.GetBusquedasXml() != null)
    {
        foreach (string busqeda in Html.GetBusquedasXml())
        {
            <link rel="search" type="application/opensearchdescription+xml" href="@busqeda" />
        }
    }

    @if (Comunidad != null && Comunidad.ProjectExtraHTMLList != null)
    {
        @Html.PartialView("../Shared/ProyectoElementoHTML", Comunidad.ProjectExtraHTMLList.Where(a => a.Ubication == UbicacionHtmlProyecto.EndHead).ToList());
    }

</head>

<body class="@Html.GetBodyClass() @(IdentidadActual == null || IdentidadActual.IsGuestUser ? " invitado" : "") @Html.GetBodyClassPestanya()">

    @if (Comunidad != null && Comunidad.ProjectExtraHTMLList != null)
    {
        @Html.PartialView("../Shared/ProyectoElementoHTML", Comunidad.ProjectExtraHTMLList.Where(a => a.Ubication == UbicacionHtmlProyecto.BeginBody).ToList());
    }

    <form method="post" target="_blank" action="" name="formularioHidden" id="formularioHidden">
        <fieldset style="display: none">
            <legend class="nota">formularioHidden</legend>
            @if (Html.GetListaInputHidden() != null)
            {
                foreach (KeyValuePair<string, string> inputHidden in Html.GetListaInputHidden())
                {
                    <input type="hidden" id="@inputHidden.Key" class="@inputHidden.Key" value="@inputHidden.Value" />
                }
            }
            <input type="submit" style="display: none;" id="enviarHidden" value="enviar" title="enviar" />
        </fieldset>
    </form>

    <form method="post" target="_blank" action="" name="formularioRDF" id="formularioRDF">
        <fieldset style="display: none">
            <legend class="nota">formularioRDF</legend>
            <input type="text" style="display: none;" title="query" name="query" id="query" />
            <input type="text" style="display: none;" title="pagina" name="pagina" id="pagina" />
            <input type="submit" style="display: none;" id="rdfHack" value="enviar" title="enviar" />
        </fieldset>
    </form>

    <div style="width: 100px; height: 100px; position: absolute; display: none; left: 0px; top: 0px; z-index: 2000" class="popup">
        <img style="border-width: 0px;" alt="Cargando..." src="@Html.GetBaseUrlStatic()/img/espera.gif" />
        <p><strong>Cargando...</strong></p>
    </div>
    <div style="display: none; z-index: 1999; width: 100%; top: 0px; left: 0px; position: absolute; height: 2900px;" id="mascaraBlanca"></div>

    @Html.PartialView("../Shared/_Cabecera")

    <main role="main">
        <div class="container">
            @if (!string.IsNullOrEmpty(avisoCookies))
            {
                <div id="phAvisoCookie">
                    <div class="info columms cookies" id="info">
                        <p class="title-panel-info"><span>Panel </span>@Html.GetText("COMMON", "INFORMACION")</p>
                        <div class="col-4">
                            <div class="box" id="divAvisoCookie">@Html.Raw(avisoCookies)</div>
                        </div>
                    </div>
                </div>
            }
            @if (Comunidad != null && string.IsNullOrEmpty(Request.Params["new-community-wizard"]) && (IdentidadActual.IsExpelled || Comunidad.ProjectState == CommunityModel.StateProject.Close || Comunidad.ProjectState == CommunityModel.StateProject.CloseTemporaly || Comunidad.ProjectState == CommunityModel.StateProject.Definition))
            {
                <div class="aviso columms" id="info">
                    <h3><span>Panel </span>Aviso</h3>
                    <div class="col-4">
                        <div class="box">
                            @if (IdentidadActual.IsExpelled)
                            {
                                @*Usuario expulsado*@
                                <p>@Html.Raw(Html.GetText("COMINICIOLOGIN", "ADVERTENCIAEXPULSADO1"))</p>
                                <p>@Html.GetText("COMMON", "MUCHASGRACIAS")</p>
                            }
                            else if (Comunidad.ProjectState == CommunityModel.StateProject.Close)
                            {
                                <p>@Html.GetText("COMADMIN", "EXPLICACIONCERRADA", Html.GetNombreProyectoEcosistema())</p>
                            }
                            else if (Comunidad.ProjectState == CommunityModel.StateProject.CloseTemporaly)
                            {
                                <p>@Html.GetText("COMADMIN", "EXPLICACIONCERRADATMP")</p>
                            }
                            else if (Comunidad.ProjectState == CommunityModel.StateProject.Definition)
                            {
                                if (IdentidadActual.IsProyectAdmin)
                                {
                                    string urlAdmin = GnossUrlsSemanticas.ObtenerURLAdministracionComunidad(Html.GetUtilIdiomas(), Html.GetBaseUrlIdioma(), Comunidad.ShortName, "ADMINISTRARCOMUNIDADGENERAL");
                                    //Sacamos el mensaje al administrador:
                                    switch (Comunidad.AccessType)
                                    {
                                        case CommunityModel.TypeAccessProject.Public:
                                            @Html.Raw(Html.GetText("COMINICIOLOGIN", "NOACCESODEFINICIONADMINPUBLICA", urlAdmin))
                                            break;
                                        case CommunityModel.TypeAccessProject.Private:
                                            @Html.Raw(Html.GetText("COMINICIOLOGIN", "NOACCESODEFINICIONADMINPRIVADA", urlAdmin))
                                            break;
                                        case CommunityModel.TypeAccessProject.Reserved:
                                            @Html.Raw(Html.GetText("COMINICIOLOGIN", "NOACCESODEFINICIONADMINRESERVADA", urlAdmin))
                                            break;
                                        case CommunityModel.TypeAccessProject.Restricted:
                                            @Html.Raw(Html.GetText("COMINICIOLOGIN", "NOACCESODEFINICIONADMINRESTRINGIDA", urlAdmin))
                                            break;
                                    }
                                }
                                else
                                {
                                    <p>@Html.GetText("COMINICIOLOGIN", "COMUNIDADDEFINICION")</p>
                                    <p>@Html.GetText("COMINICIOLOGIN", "NOACCESODEFINICION")</p>
                                    foreach (ProfileModel admin in Comunidad.Administrators)
                                    {
                                        <p>@Html.ObtenerNombrePerfil(admin)</p>
                                    }
                                }
                            }
                        </div>
                    </div>
                </div>
            }
            <div class="row">
                @RenderBody()
            </div>
        </div>
    </main>

    @Html.PartialView("../Shared/_Pie")

    <aside id="menuLateral" class="menuLateral" role="navigation">
        <div class="header">
            <div class="wrap-header">
                <div class="menu-logo-wrapper">
                    <div class="menu-toggle">
                        <a href="javascript: void(0);" class="cerrar texto-blanco">
                            <span class="material-icons">apps</span>
                        </a>
                    </div>
                    <div class="logo-wrapper">
                        <a href="./listado.php" class="texto-blanco">
                            Hércules
                        </a>
                    </div>
                </div>
                <span class="material-icons cerrar">close</span>
            </div>
        </div>

        <div class="body">
            <ul class="nav pmd-sidebar-nav">
                <li>
                    <ul>
                        @foreach (CommunityModel.TabModel pPestanya in Comunidad.Tabs)
                        {
                            <li>
                                <a href="@pPestanya.Url">@pPestanya.Name</a>
                            </li>
                        }
                    </ul>
                </li>
            </ul>
        </div>
    </aside>




    <script type="text/javascript">
        $(document).ready(function () {
            EjecutarScriptsIniciales2();
        });
    </script>
    @RenderSection("javascript", required: false)




    @if (Comunidad != null)
    {
        try
        {
            DateTime? envioCookie = (DateTime?)HttpContext.Current.Session["EnvioCookie"];

            //Actualizo la cookie del usuario para que no caduque
            if (Request.HttpMethod.Equals("GET") && !envioCookie.HasValue && !Html.GetIdentidadActual().IsGuestUser)
            {
                HttpContext.Current.Session.Add("EnvioCookie", DateTime.Now);

                string urlServicioLogin = UtilUsuario.UrlServicioLogin;
                string query = string.Format("?usuarioID={0}&dominio={1}/", Html.GetIdentidadActual().KeyUser, Html.GetBaseUrl());

                if (HttpContext.Current.Request.Url.Scheme.Equals("http"))
                {
                    //Elimino la sesión del resto de dominios en los que había entrado el usuario
                    //para que cuando entre en ellos soliciten la cookie al servicio de login

                    if (urlServicioLogin.StartsWith("https://"))
                    {
                        //Hago una petición con http porque si no no te desconecta de los dominios que no tienen https.
                        urlServicioLogin = urlServicioLogin.Replace("https://", "http://");
                    }

                    string nuevoEnvio = "";
                    if (HttpContext.Current.Session["CrearCookieEnServicioLogin"] != null)
                    {
                        nuevoEnvio = "&nuevoEnvio=true";
                    }

                    <iframe style="WIDTH:1px;HEIGHT:1px; display:none;" frameBorder="0" src="@string.Format("{0}/eliminarcookie.aspx{1}{2}", urlServicioLogin, query, nuevoEnvio)"></iframe>

                    ////Registro el evento y lanzo la accion del proyecto
                    //ProyectoCL proyectoCL = new ProyectoCL();
                    //Dictionary<TipoProyectoEventoAccion, string> listaEventos = proyectoCL.ObtenerEventosAccionProyectoPorProyectoID(ProyectoSeleccionado.Clave, ((GnossWebPage)Page).EsBot);
                    //proyectoCL.Dispose();
                    //if (listaEventos != null && listaEventos.Count > 0)
                    //{
                    //    //comprobación existencia evento login
                    //    if (listaEventos.ContainsKey(TipoProyectoEventoAccion.Login) && (!((GnossWebPage)Page).OmitirProyectoEventoAccionLogin))
                    //    {
                    //        StringBuilder sbEventos = new StringBuilder();
                    //        sbEventos.AppendLine(listaEventos[TipoProyectoEventoAccion.Login]);
                    //        this.Page.ClientScript.RegisterStartupScript(this.GetType(), "EventoLogin", sbEventos.ToString(), true);
                    //    }
                    //}
                }
                if (Session["CrearCookieEnServicioLogin"] != null && Session["Usuario"] != null)
                {
                    //Envío la cookie del usuario
                    Es.Riam.Gnoss.Util.Seguridad.GnossIdentity usuario = ((Es.Riam.Gnoss.Util.Seguridad.GnossIdentity)Session["Usuario"]);

                    query = "usuarioID=" + usuario.UsuarioID + "&loginUsuario=" + usuario.Login + "&idioma=" + usuario.Idioma + "&personaID=" + usuario.PersonaID + "&nombreCorto=" + usuario.Login;
                    query += "&token=" + UtilUsuario.TokenLoginUsuario;

                    query = Es.Riam.Web.Util.MachineKeyCryptography.Encriptar(query);

                    <iframe style="WIDTH:1px;HEIGHT:1px; display:none;" frameBorder="0" src="@string.Format("{0}/crearCookie.aspx?{1}", urlServicioLogin, query)"></iframe>

                    Session.Remove("CrearCookieEnServicioLogin");
                }
            }
        }
        catch (Exception ex)
        {
            Es.Riam.Gnoss.Util.General.Error.GuardarLogError(ex);
        }
        if (Comunidad.ProjectExtraHTMLList != null)
        {
            @Html.PartialView("../Shared/ProyectoElementoHTML", Comunidad.ProjectExtraHTMLList.Where(a => a.Ubication == UbicacionHtmlProyecto.EndBody).ToList());
        }
    }
	
<div id="modal-resultados" class="modal modal-top fade modal-resultados" tabindex="-1" role="dialog">
<div class="modal-dialog" role="document">
	<div class="modal-content">
		<div class="modal-header">
			<h2>-</h2>
			<span class="material-icons cerrar" data-dismiss="modal" aria-label="Close">close</span>
		</div>
		<div class="modal-body">
			<div class="buscador-coleccion">
				<form>
					<div>
						<span class="buscar lupa">
							<input type="text" value="XXXXXXX" valueaux="XXXXXX" class="texto">
							<a>Buscar</a>
						</span>
					</div>
				</form>
				<script>
					$(document).ready(function () {
						$(".buscador-coleccion .buscar input").on("focus", function () {
							$(this).val("");
						});
					});
				</script>
			</div>
			<div class="indice-lista no-letra">
			  <div class="owl-carousel owl-theme">					
				</div>  
			</div>
		</div>
	</div>
</div>
</div>
	
</body>
</html>
