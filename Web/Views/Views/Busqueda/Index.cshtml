@*[security|||busqueda/index.cshtml|||hercules]*@
@using Es.Riam.Gnoss.Web.MVC.Models
@using Es.Riam.Gnoss.Web.MVC.Controles.Helper
@using Es.Riam.Gnoss.Web.MVC.Models.ViewModels
@using Es.Riam.Gnoss.Web.MVC.Models.Administracion
@using Es.Riam.Gnoss.AD.ServiciosGenerales
@using Es.Riam.Gnoss.Web.MVC.Controllers
@using Es.Riam.Gnoss.Web.MVC.Controllers.Administracion
@using Es.Riam.Gnoss.Web.Controles
@using Newtonsoft.Json
@model SearchViewModel
@{
    CommunityModel Comunidad = Html.GetComunidad();
    UserIdentityModel IdentidadActual = Html.GetIdentidadActual();
    string jsExtra = Html.GetJSExtra();

    string nombrePestanyaActual = Model.PageName;
    string htmlResultados = Model.HTMLResourceList;
    string htmlFacetas = Model.HTMLFaceted;
    Dictionary<string, string> listaFiltrosOrden = Model.FilterOrderList;
    string FiltroOrdenSeleccionado = Model.FilterOrderSelected;

    Html.SetBodyClass("layout02 comunidad listado"); // Clases del body por defecto.

    Html.SetPintarH1(false);

    if (Comunidad.ProyectType == CommunityModel.TypeProyect.Catalogo || Comunidad.ProyectType == CommunityModel.TypeProyect.CatalogoNoSocial)
    {
        Html.SetBodyClass(Html.GetBodyClass() + " listadoCatalogo ");
    }

    if (IdentidadActual.IsProyectAdmin && ViewContext.RouteData.Values["admin"] != null && ViewContext.RouteData.Values["admin"].Equals("true"))
    {
        Html.GetListaCSS().Add(Html.GetBaseUrlStatic() + "/cssNuevo/administracion.css?v=" + Html.GetVersion());
    }
}

<!-- Ruta de páginas -->
<div class="col col-12 col-breadcrumb">
    <ul>
        <li>
            <a href="@Comunidad.Url">Home</a>
        </li>
        <li>@nombrePestanyaActual</li>
    </ul>
</div>

<div class="col col-12 col-xl-3 col-facetas col-lateral izquierda">
    <!-- Facetas -->
    <div class="wrapCol">
        <div class="header-facetas">
            <p>Filtros</p>
            <a href="javascript: void(0);" class="cerrar">
                <span class="material-icons">close</span>
            </a>
        </div>
        <div id="panFacetas" class="facetas-wrap pmd-scrollbar mCustomScrollbar" data-mcs-theme="minimal-dark">

            @if (Model.FacetedVisible)
            {
                if (string.IsNullOrEmpty(htmlFacetas) && Model.JSONFaceted != null)
                {
                    @Html.PartialView("../CargadorFacetas/CargarFacetas", Model.JSONFaceted);
                }
                else
                {
                    @Html.Raw(htmlFacetas);
                }
            }

        </div>
    </div>
</div>

<div class="col col-12 col-xl-9 col-contenido derecha">
    <div class="wrapCol">
        <div class="header-contenido">
            <!-- Número de resultados -->
            <div class="h1-container">
                <h1>@nombrePestanyaActual <span id="panNumResultados" class="numResultados"></span></h1>
            </div>

            <!-- Desplegables derecha -->
            <div class="acciones-listado">
                <div class="wrap">
                    <!-- Filtros de ordenación -->
                    @if (listaFiltrosOrden != null && listaFiltrosOrden.Count > 0)
                    {
						@* Opciones de Ordenar los resultados obtenidos *@
						<div id="panel-orderBy" class="ordenar dropdown dropdown-select">
							@* La ordenación debe estar "activa". Por defecto se ordena por fecha
							<a class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
								<span class="material-icons">swap_vert</span>
								<span class="texto">@Html.GetText("BANDEJAENTRADA", "ORDENADOPOR")</span>
							</a>
							*@
							@* Coger por defecto la primera opción*@
							<a class="dropdown-toggle active" data-toggle="dropdown" aria-expanded="false">
								<span class="material-icons">swap_vert</span>                                        
								<span class="texto">@FiltroOrdenSeleccionado</span>                                                                                                                                
							</a>

							<div class="dropdown-menu basic-dropdown dropdown-menu-right" style="will-change: transform;">
								@foreach (string filtro in listaFiltrosOrden.Keys)
								{
									string activo = (@FiltroOrdenSeleccionado == filtro ? "activeView" : "");									
									<a class="item-dropdown @activo" data-orderBy="@listaFiltrosOrden[filtro]" data-order="orden|desc">
										<span class="material-icons">swap_vert</span>
										<span class="texto">@filtro</span> 
									</a>
								}
							</div>
						</div>
                    }
                </div>
            </div>

            <!-- Etiquetas de filtros -->
            <div class="etiquetas" id="panFiltros">
                <ul class="facetedSearch tags" id="panListadoFiltros">
                    <li class="borrarFiltros-wrap">
                        <a class="borrarFiltros" href="#" onclick="event.preventDefault();LimpiarFiltros();">Borrar</a>
                    </li>
                </ul>
            </div>
        </div>

        <!-- Resultados -->
        <div class="resource-list listView resource-list-buscador">
            <div id="panResultados" class="resource-list-wrap">
                @if (string.IsNullOrEmpty(htmlResultados) && Model.JSONResourceList != null)
                {
                    @Html.PartialView("../CargadorResultados/CargarResultados", Model.JSONResourceList);
                }
                else
                {
                    @Html.Raw(htmlResultados)
                }
            </div>
        </div>
    </div>
</div>

@section javascript{
    <script type="text/javascript">

        @Html.Raw(jsExtra)

        @if (string.IsNullOrEmpty(htmlFacetas) && Model.JSONFaceted != null && string.IsNullOrEmpty(htmlResultados) && Model.JSONResourceList != null)
        {

        }
        else
        {
            <text>
                $(document).ready(function () {
                    FiltrarPorFacetas(filtrosDeInicio);
                });
            </text>
        }





        @if (!string.IsNullOrEmpty(Html.GetJSMapa()))
        {
            @Html.Raw(Html.GetJSMapa())
        }

        @if (!string.IsNullOrEmpty(Html.GetJSGraficos()))
        {
            @Html.Raw(Html.GetJSGraficos())
        }
    </script>
}