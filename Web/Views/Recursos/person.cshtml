@*[security|||person|||hercules]*@
@using Es.Riam.Gnoss.Web.MVC.Models
@using Es.Riam.Gnoss.Web.MVC.Controles.Helper
@using Es.Riam.Gnoss.Web.MVC.Models.ViewModels
@using Es.Riam.Gnoss.Web.MVC.Models.Administracion
@using Es.Riam.Gnoss.AD.ServiciosGenerales
@using Es.Riam.Gnoss.Web.MVC.Controllers
@using Es.Riam.Gnoss.Web.MVC.Controllers.Administracion
@using Es.Riam.Gnoss.Web.Controles
@using Newtonsoft.Json
@using System.Reflection;

@model ResourceViewModel
@{ ResourceModel FichaDocumento = Model.Resource;
    CommunityModel Comunidad = Html.GetComunidad();
    UserIdentityModel IdentidadActual = Html.GetIdentidadActual();
    Html.AddBodyClass(" fichaRecurso-investigador ");
    if (FichaDocumento.ItemLinkedFotoVersion != 0 && !string.IsNullOrEmpty(FichaDocumento.ItemLinked.ToString()) && FichaDocumento.ItemLinked != Guid.Empty)
    {
        string urlPersonalizacion = $"{Html.GetBaseUrlContent()}/{Es.Riam.Util.UtilArchivos.ContentOntologias}/Archivos/{FichaDocumento.ItemLinked.ToString().Substring(0, 3)}";
        Html.GetListaJS().Add($"{urlPersonalizacion}/{FichaDocumento.ItemLinked.ToString()}.js?v= {FichaDocumento.ItemLinkedFotoVersion}");
        Html.GetListaCSS().Add($"{urlPersonalizacion}/{FichaDocumento.ItemLinked.ToString()}.css?v= {FichaDocumento.ItemLinkedFotoVersion}");
    }
    string urlJS = $"{Html.GetBaseUrlContent()}/imagenes/proyectos/personalizacion/{Comunidad.Key.ToString()}/theme/ficharecurso.js";
    Html.GetListaJS().Add(urlJS);
    SemanticResourceModel semCmsModel = Model.SemanticFrom;
    GnossOCBase.LanguageEnum idiomaUsuario = (GnossOCBase.LanguageEnum)Enum.Parse(typeof(GnossOCBase.LanguageEnum), Html.GetUtilIdiomas().LanguageCode.ToLower());
    Person pPerson = new Person(semCmsModel, idiomaUsuario); }

    <div class="col col-12 col-breadcrumb">
        <ul>
            <li>
                <a href="@Comunidad.Url">Home</a>
            </li>
            <li>
                @{string urlProyectos = Comunidad.Url + "/personal-investigador"; }
                <a href="@urlProyectos">Personal investigador</a>
            </li>
            @{ if (!string.IsNullOrEmpty(pPerson.Foaf_name))
                {
                    <li>@pPerson.Foaf_name</li>
                }
                else
                {
                    <li>---</li>
                }
            }
        </ul>
    </div>

    <div class="col col-12 col-xl-12 col-contenido">
        <div class="wrapCol">
            <div class="cabecera-ficha cabecera-proyecto">
                <div class="ficha-upper-row">
                    <div class="user-miniatura">
                        <div class="imagen-usuario-wrap">
                            <span class="material-icons">person</span>
                        </div>
                        <div class="nombre-usuario-wrap">
                            @{ if (!string.IsNullOrEmpty(pPerson.Foaf_name) && !string.IsNullOrEmpty(pPerson.GNOSSID))
                                {
                                    <p about="@pPerson.GNOSSID" property="@pPerson.GetPropertyURI(nameof(pPerson.Foaf_name))" class="nombre">@pPerson.Foaf_name,</p>
                                }
                                else
                                {
                                    <p class="nombre">---</p>
                                }
                            }
                            <p class="rol">
                                @{
                                    if (!string.IsNullOrEmpty(pPerson.Roh_hasPosition))
                                    {
                                        <span about="@pPerson.GNOSSID" property="@pPerson.GetPropertyURI(nameof(pPerson.Roh_hasPosition))">@pPerson.Roh_hasPosition</span>
                                    }
                                    if (pPerson.Roh_hasRole!=null && !string.IsNullOrEmpty(pPerson.Roh_hasRole.Roh_title) )
                                    {
                                        <span> @pPerson.Roh_hasRole.Roh_title, </span>
                                    }

                                    if (pPerson.Vivo_departmentOrSchool != null && !string.IsNullOrEmpty(pPerson.Vivo_departmentOrSchool.Dc_title[idiomaUsuario]) && !string.IsNullOrEmpty(pPerson.GNOSSID))
                                    {
                                        <span about="@pPerson.GNOSSID" property="@pPerson.GetPropertyURI(nameof(pPerson.Vivo_departmentOrSchool.Dc_title))">@pPerson.Vivo_departmentOrSchool.Dc_title[idiomaUsuario]</span>

                                    }
                                }
                            </p>


                        </div>
                    </div>
                    <div class="other-data-wrap d-flex">
                        <div class="info-resource">
                            <span class="material-icons">article</span>
                            @{
                                if (pPerson.Roh_publicationsNumber != null && pPerson.Roh_publicationsNumber > 0 && !string.IsNullOrEmpty(pPerson.GNOSSID))
                                {
                                    <span id="numPublicacionesCab" about="@pPerson.GNOSSID" property="@pPerson.GetPropertyURI(nameof(pPerson.Roh_publicationsNumber))" class="nombre">@pPerson.Roh_publicationsNumber Publicaciones &nbsp;</span>
                                }
                                else
                                {
                                    <span id="numPublicacionesCab">--- Publicaciones &nbsp;</span>
                                }
                            }
                        </div>
                        <div class="info-resource">
                            <span class="material-icons">tag</span>
                            @{ if (pPerson.Roh_h_index != null && pPerson.Roh_h_index > 0 && !string.IsNullOrEmpty(pPerson.GNOSSID))
                                {
                                    <span id="numPublicacionesCab" about="@pPerson.GNOSSID" property="@pPerson.GetPropertyURI(nameof(pPerson.Roh_h_index))" class="nombre">@pPerson.Roh_h_index Índice H</span>
                                }
                                else
                                {
                                    <span id="numPublicacionesCab">--- Índice H &nbsp;</span>
                                }
                            }
                        </div>
                        <div class="acciones-usuario-wrap pl-3">
                            <ul class="no-list-style d-flex">
                                <li>
                                    <div class="acciones-recurso-listado">
                                        <div class="dropdown">
                                            <a href="#" class="dropdown-toggle btn btn-outline-grey no-flecha" role="button" id="dropdownMasOpciones" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <span class="material-icons">more_vert</span>
                                            </a>
                                            <div class="dropdown-menu basic-dropdown dropdown-icons dropdown-menu-right" aria-labelledby="dropdownMasOpciones">
                                                <p class="dropdown-title">@Html.Translate("ACCIONES")</p>
                                                <ul class="no-list-style">
                                                    <li>
                                                        <a class="item-dropdown">
                                                            <span class="texto">@Html.Translate("GUARDAR_ESPACIO_PERSONAL")</span>
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a class="item-dropdown">
                                                            <span class="texto">@Html.Translate("ADD_AREA_TEMATICA")</span>
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a class="item-dropdown">
                                                            <span class="texto">@Html.Translate("ADD_ETIQUETAS")</span>
                                                        </a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>

                </div>
            <!-- <div class="list-wrap">
                <ul>
                    @{ if (!string.IsNullOrEmpty(pPerson.Roh_hasPosition) && !string.IsNullOrEmpty(pPerson.GNOSSID))
                        {
                            <li about="@pPerson.GNOSSID" property="@pPerson.GetPropertyURI(nameof(pPerson.Roh_hasPosition))" class="nombre">@pPerson.Roh_hasPosition</li>
                        }
                        else
                        {
                            <li>---</li>
                        }
                    }
                    @{ PintarOrganization(pPerson.Roh_hasRole, idiomaUsuario); }
                    @{
                        if (pPerson.Vivo_departmentOrSchool != null && !string.IsNullOrEmpty(pPerson.Vivo_departmentOrSchool.Dc_title[idiomaUsuario]) && !string.IsNullOrEmpty(pPerson.GNOSSID))
                        {
                            <li about="@pPerson.GNOSSID" property="@pPerson.GetPropertyURI(nameof(pPerson.Vivo_departmentOrSchool.Dc_title))" class="nombre">@pPerson.Vivo_departmentOrSchool.Dc_title[idiomaUsuario]</li>

                        }
                        else
                        {
                            <li>---</li>

                        }
                    }
                </ul>
            </div> -->
            <div class="group-wrap">
                <div class="bloque">
                    <div class="label">@Html.Translate("GRUPOS_INVESTIGACION")</div>
                    <div class="descripcion">
                        @{ if (pPerson.Vivo_relates != null && pPerson.Vivo_relates.Count > 0)
                            {
                                foreach (Group grupo in pPerson.Vivo_relates)
                                {
                                    if (!string.IsNullOrEmpty(grupo.Roh_title) && !string.IsNullOrEmpty(grupo.GNOSSID))
                                    {
                                        <p about="@pPerson.GNOSSID" property="@pPerson.GetPropertyURI(nameof(grupo.Roh_title))" class="nombre"><a href="@grupo.URL">@grupo.Roh_title</a></p>
                                    }
                                    else
                                    {
                                        <p>---</p>
                                    }
                                }
                            }
                            else
                            {
                                <p id="idGrupoInvestigacion">---</p>
                            }
                        }
                    </div>
                </div>
            </div>
            
            <div class="description-wrap">
                <div class="desc" style="display: -webkit-box;">
                    @{ if (!string.IsNullOrEmpty(pPerson.Vivo_description) && !string.IsNullOrEmpty(pPerson.GNOSSID))
                        {
                            <p about="@pPerson.GNOSSID" property="@pPerson.GetPropertyURI(nameof(pPerson.Vivo_description))" class="nombre">@pPerson.Vivo_description</p>
                        }
                    }
                </div>
                <p class="moreResults showMore">
                    <a href="javascript: void(0);" class="ver-mas" style="display: flex;">@Html.Translate("VER_MAS")</a>
                    <a href="javascript: void(0);" class="ver-menos" style="display: none;">@Html.Translate("VER_MENOS")</a>
                </p>
            </div>

            <div class="list-wrap tags" id="divTags">
                <div class="label">@Html.Translate("AREAS_TEMATICAS")</div>
                <ul id="idListaCategorias"></ul>
                <ul>
                    @{
                        int contadorAreaConocimiento = 0;
                    
                        if (pPerson.Vivo_hasResearchArea != null && pPerson.Vivo_hasResearchArea.Count > 0)
                        {
                            foreach (CategoryPath area in pPerson.Vivo_hasResearchArea)
                            {
                                if (area != null && area.Roh_categoryNode != null && area.Roh_categoryNode.Count > 0)
                                {
                                    Concept concept = area.Roh_categoryNode.LastOrDefault(); // TODO: Implementar lógica por si vienen desordenadas las categorías.

                                    //foreach (Concept concept in area.Roh_categoryNode)
                                    //{
                                    if (concept != null && !string.IsNullOrEmpty(concept.Skos_prefLabel) && contadorAreaConocimiento < 3)
                                    {
                                        contadorAreaConocimiento++;
                                        <li>
                                            <a href="@Comunidad.Url/@Html.Translate("GRUPOS_URL")?roh:hasKnowledgeArea@("@@@")roh:categoryNode=@concept.GNOSSID">
                                                <span about="@concept.GNOSSID" property="@concept.GetPropertyURI(nameof(concept.Skos_prefLabel))" class="texto">@concept.Skos_prefLabel</span>
                                            </a>
                                        </li>
                                    }
                                    else if (concept != null && !string.IsNullOrEmpty(concept.Skos_prefLabel))
                                    {
                                        contadorAreaConocimiento++;
                                        <li class="ocultar" style="display: none;">
                                            <a href="@Comunidad.Url/@Html.Translate("GRUPOS_URL")?roh:hasKnowledgeArea@("@@@")roh:categoryNode=@concept.GNOSSID">
                                                <span about="@concept.GNOSSID" property="@concept.GetPropertyURI(nameof(concept.Skos_prefLabel))" class="texto">@concept.Skos_prefLabel</span>
                                            </a>
                                        </li>
                                    }
                                    //}
                                }
                            }
                        }
                    }
                </ul>
                @{
                    if (contadorAreaConocimiento > 3)
                    {
                        <p class="moreResults">
                            <a href="javascript: void(0);" class="ver-mas" style="display: flex;">@Html.Translate("VER_MAS")</a>
                            <a href="javascript: void(0);" class="ver-menos" style="display: none;">@Html.Translate("VER_MENOS")</a>
                        </p>
                    }
                }
            </div>
            <div class="list-wrap tags">
                <div class="bloque">
                    <div class="label">ORCID</div>
                    @{ if (!string.IsNullOrEmpty(pPerson.Roh_ORCID) && !string.IsNullOrEmpty(pPerson.GNOSSID))
                        {
                            <a href="https://orcid.org/@pPerson.Roh_ORCID" target="_blank" about="@pPerson.GNOSSID" property="@pPerson.GetPropertyURI(nameof(pPerson.Roh_ORCID))" class="nombre">@pPerson.Roh_ORCID</a>
                        }
                        else
                        {
                            <a>---</a>
                        }
                    }
                </div>
            </div>
            <div class="tags">
                <div class="list-wrap bloque">
                    <div class="label">@Html.Translate("PAGINA_WEB")</div>
                    
                    <ul>
                    @{ if (!string.IsNullOrEmpty(pPerson.GNOSSID) && pPerson.Foaf_homepage != null && pPerson.Foaf_homepage.Count > 0)
                        {
                            foreach (var item in pPerson.Foaf_homepage)
                            {
                                <li>
                                    <a href="@item" about="@item" target="_blank" property="@pPerson.GetPropertyURI(nameof(pPerson.Foaf_homepage))" class="nombre">@item</a>
                                </li>
                            }
                        }
                    }
                    </ul>
                </div>
            </div>
            <hr />
            <div class="group-wrap">
                <div class="bloque">
                    <div class="info-proyecto">
                        <div class="bloque">
                            <div class="descripcion">
                                <p>@Html.Translate("CONTACTO")</p>
                            </div>
                        </div>
                    </div>
                    <div class="info-investigador d-flex flex-wrap">
                        <div class="list-wrap bloque">
                            <div class="label">@Html.Translate("CORREO_ELECTRONICO")</div>
                            <ul>
                                @{ if (pPerson.Vcard_email != null && pPerson.Vcard_email.Count > 0 && !string.IsNullOrEmpty(pPerson.GNOSSID))
                                    {

                                        foreach (var item in pPerson.Vcard_email)
                                        {
                                            <li>
                                                <div class="value" about="@item" property="@pPerson.GetPropertyURI(nameof(pPerson.Vcard_email))"><a href="mailto:@item" >@item</a></div>
                                            </li>
                                        }

                                    }
                                }
                            </ul>
                        </div>
                        <div class="list-wrap bloque">
                            <div class="label">@Html.Translate("TELEFONO")</div>
                            <ul>
                                @{ if (pPerson.Vcard_hasTelephone != null && pPerson.Vcard_hasTelephone.Count > 0 && !string.IsNullOrEmpty(pPerson.GNOSSID))
                                    {
                                        foreach (var item in pPerson.Vcard_hasTelephone)
                                        {
                                            <li>
                                                <div class="value" about="@item" property="@pPerson.GetPropertyURI(nameof(pPerson.Vcard_hasTelephone))"><a href="tel:@item">@item</a></div> 
                                            </li>
                                        }

                                    }
                                    else
                                    {
                                        <div class="value">---</div>
                                    }
                                }
                            </ul>
                        </div>
                        <div class="bloque">
                            <div class="label">@Html.Translate("DIRECCION_CONTACTO")</div>
                            @{ if (!string.IsNullOrEmpty(pPerson.Vcard_address) && !string.IsNullOrEmpty(pPerson.GNOSSID))
                                {
                                    <div class="value" about="@pPerson.Vcard_address" property="@pPerson.GetPropertyURI(nameof(pPerson.Vcard_address))">@pPerson.Vcard_address</div>
                                }
                                else
                                {
                                    <div class="value">---</div>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="contenido-ficha contenido-proyecto">
            <div class="tab-paneles-ficha">

                <div class="tabs">
                    <ul class="nav nav-tabs" id="navegacion-recurso" role="tablist">
                        <li class="nav-item" role="presentation">
                            <a class="nav-link active" id="publicaciones-tab" data-toggle="tab" href="#publicaciones-panel" role="tab" aria-controls="publicaciones-panel" aria-selected="true">
                                <div class="bloque">
                                    <div class="label">@Html.Translate("PUBLICACIONES")</div>
                                    @{
                                        if (pPerson.Roh_publicationsNumber != null && pPerson.Roh_publicationsNumber > 0 && !string.IsNullOrEmpty(pPerson.GNOSSID))
                                        {
                                            <div about="@pPerson.GNOSSID" property="@pPerson.GetPropertyURI(nameof(pPerson.Roh_publicationsNumber))" class="data">@pPerson.Roh_publicationsNumber</div>
                                        }
                                        else
                                        {
                                            <div class="data">---</div>
                                        }
                                    }
                                </div>
                            </a>
                        </li>
                        <li class="nav-item" role="presentation">
                            <a class="nav-link" id="proyectos-tab" data-toggle="tab" href="#proyectos-panel" role="tab" aria-controls="proyectos-panel" aria-selected="false">
                                <div class="bloque">
                                    <div class="label">@Html.Translate("PROYECTOS")</div>
                                    @{
                                        if (pPerson.Roh_projectsNumber != null && pPerson.Roh_projectsNumber > 0 && !string.IsNullOrEmpty(pPerson.GNOSSID))
                                        {
                                            <div about="@pPerson.GNOSSID" property="@pPerson.GetPropertyURI(nameof(pPerson.Roh_projectsNumber))" class="data">@pPerson.Roh_projectsNumber</div>
                                        }
                                        else
                                        {
                                            <div class="data">---</div>
                                        }
                                    }
                                </div>
                            </a>
                        </li>
                        <li class="nav-item" role="presentation">
                            <a class="nav-link" id="otros-tab" data-toggle="tab" href="#otros-panel" role="tab" aria-controls="otros-panel" aria-selected="false">
                                <div class="bloque">
                                    <div class="label">@Html.Translate("OTROS_RESULTADOS")</div>
                                    <div class="data">---</div>
                                </div>
                            </a>
                        </li>
                        <li class="nav-item" role="presentation">
                            <a class="nav-link" id="topics-tab" data-toggle="tab" href="#topics-panel" role="tab" aria-controls="topics-panel" aria-selected="false">
                                <div class="bloque">
                                    <div class="label">@Html.Translate("AREAS_TEMATICAS")</div>
                                    <div class="data">---</div>
                                </div>
                            </a>
                        </li>
                        <li class="nav-item" role="presentation">
                            <a class="nav-link" id="colaboraciones-tab" data-toggle="tab" href="#colaboraciones-panel" role="tab" aria-controls="colaboraciones-panel" aria-selected="false">
                                <div class="bloque">
                                    <div class="label">@Html.Translate("COLABORACIONES")</div>
                                    @{
                                        if (pPerson.Roh_collaboratorsNumber != null && pPerson.Roh_collaboratorsNumber > 0 && !string.IsNullOrEmpty(pPerson.GNOSSID))
                                        {
                                            <div about="@pPerson.GNOSSID" property="@pPerson.GetPropertyURI(nameof(pPerson.Roh_collaboratorsNumber))" class="data">@pPerson.Roh_collaboratorsNumber</div>
                                        }
                                        else
                                        {
                                            <div class="data">---</div>
                                        }
                                    }
                                </div>
                            </a>
                        </li>
                        <li class="nav-item" role="presentation">
                            <a class="nav-link" id="otros-meritos-tab" data-toggle="tab" href="#otros-meritos-panel" role="tab" aria-controls="otros-meritos-panel" aria-selected="false">
                                <div class="bloque">
                                    <div class="label">@Html.Translate("OTROS_MERITOS")</div>
                                    <div class="data">---</div>
                                </div>
                            </a>
                        </li>
                    </ul>
                </div>


                <div class="tab-content" id="paneles-recurso">
                    <div class="tab-pane fade show active" id="publicaciones-panel" role="tabpanel" aria-labelledby="publicaciones-tab">
                        <div class="row" id="contenedorBuscadorPublicaciones">
                            <div class="col col-12 col-section-title font-weight-bold">
                                <div class="wrapCol">
                                    <p></p>
                                </div>
                            </div>
                            <div class="col col-12 col-chart">
                                <div class="wrapCol">
                                    <div class="chart-wrap chart-publicaciones" id="publicaciongraph">
                                    </div>
                                </div>
                            </div>
                            <div class="col col-12 col-section-title font-weight-bold searcherTitle">
                                <div class="wrapCol">
                                    <p>@Html.Translate("LISTADO_PUBLICACIONES")</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="proyectos-panel" role="tabpanel" aria-labelledby="proyectos-tab">
                        <div class="row" id="contenedorBuscadorProyectos">
                            <div class="col col-12 col-section-title font-weight-bold">
                                <div class="wrapCol">
                                    <p></p>
                                </div>
                            </div>
                            <div class="col col-12 col-chart">
                                <div class="wrapCol">
                                    <div class="chart-wrap chart-proyectos" id="projectgraph">
                                    </div>
                                </div>
                            </div>
                            <div class="col col-12 col-section-title font-weight-bold searcherTitle">
                                <div class="wrapCol">
                                    <p>@Html.Translate("LISTADO_PROYECTOS")</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="otros-panel" role="tabpanel" aria-labelledby="otros-tab">
                        <div class="row">
                            <div class="col col-12 col-section-title font-weight-bold">
                                <div class="wrapCol">
                                </div>
                            </div>
                            <div class="col col-12 col-chart">
                                <div class="wrapCol">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="topics-panel" role="tabpanel" aria-labelledby="topics-tab">
                        <div class="row" id="contenedorBuscadorTemasInvestigacion">
                            <div class="col col-12 col-section-title font-weight-bold">
                                <div class="wrapCol">
                                </div>
                            </div>
                            <div class="col col-12 col-chart">
                                <div class="wrapCol">
                                    <div class="chart-wrap chart-publicaciones-horizontal">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="colaboraciones-panel" role="tabpanel" aria-labelledby="colaboraciones-tab">
                        <div class="row" id="contenedorBuscadorColaboradores">
                            <div class="col col-12 col-grafo mb-5">
                                <div class="wrapCol" id="colaboratorsgraph" style="width: 1224px; height: 500px;"></div>
                            </div>
                            <div class="col col-12 col-section-title font-weight-bold searcherTitle">
                                <div class="wrapCol">
                                    <p>@Html.Translate("LISTADO_COLABORADORES")</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="otros-meritos-panel" role="tabpanel" aria-labelledby="otros-meritos-tab">
                        <div class="row">
                            <div class="col col-12 col-section-title font-weight-bold">
                                <div class="wrapCol">
                                </div>
                            </div>
                            <div class="col col-12 col-chart">
                                <div class="wrapCol">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JAVASCRIPT -->
<script type="text/javascript">
    var depuracion = false; // TODO:
    const localUrlBase = "https://localhost:44321";
    const servicioExtermpBaseUrl = "http://serviciosedma.gnoss.com";


    // Datos cabeceras de las fichas.
    var url = servicioExtermpBaseUrl + "/servicioexterno/Hercules/DatosFichaPersona"
    if (depuracion) {
        url = localUrlBase + "/Hercules/DatosFichaPersona"
    }
    var arg = {};
    arg.pIdPersona = "@pPerson.GNOSSID";
    $.get(url, arg, function (data) {
        //$("#publicaciones-tab div div.data").text(data["Publicaciones"]);
        //$("#proyectos-tab div div.data").text(data["Proyectos"]);
        $("#topics-tab div div.data").text(data["Categorias"]);
        $("#colaboraciones-tab div div.data").text(data["Colaboradores"]);
    });


    // Datos gráfica publicaciones.
    function CargarGraficaPublicaciones(parametros, idContenedor) {
        var url = servicioExtermpBaseUrl + "/servicioexterno/Hercules/DatosGraficaPublicaciones"
        if (depuracion) {
            url = localUrlBase + "/Hercules/DatosGraficaPublicaciones"
        }
        var arg = {};
        arg.pParametros = parametros;
        $('#' + idContenedor).empty();
        $.get(url, arg, function (data) {
            PintarGraficaPublicaciones(data, idContenedor);
        });
    }

    // Datos gráfica proyectos.
    function CargarGraficaProyectos(parametros, idContenedor) {
        var url = servicioExtermpBaseUrl + "/servicioexterno/Hercules/DatosGraficaProyectos"
        if (depuracion) {
            url = localUrlBase + "/Hercules/DatosGraficaProyectos"
        }
        console.log("url", url)
        var arg = {};
        arg.pParametros = parametros;
        $('#' + idContenedor).empty();
        $.get(url, arg, function (data) {
            PintarGraficaProyectos(data, idContenedor);
        });
    }


    // Datos gráfica colaboradores externos.
    function CargarGraficaColaboradores(idpersona, parametros, nombrePersona, idContenedor) {
        var url = servicioExtermpBaseUrl + "/servicioexterno/Hercules/DatosGraficaColaboradoresPersonas"
        if (depuracion) {
            url = localUrlBase + "/Hercules/DatosGraficaColaboradoresPersonas"
        }
        var arg = {};
        arg.pIdPersona = idpersona;
        arg.pParametros = parametros;
        arg.pNombrePersona = nombrePersona;
        $('#graficaCytoscape').empty();
        $.get(url, arg, function (data) {
            PintarGraficaArania(data, idContenedor);
        });
    }


    // Datos gráfica áreas temáticas
    function CargarGraficaAreasTematicas(pIdGrupo, parametros) {
        var url = servicioExtermpBaseUrl + "/servicioexterno/Hercules/DatosGraficaAreasTematicasGrupo"
        if (depuracion) {
            url = localUrlBase + "/Hercules/DatosGraficaAreasTematicasGrupo"
        }
        var arg = {};
        arg.pIdGrupo = pIdGrupo;
        arg.pParametros = parametros;
        $.get(url, arg, function (data) {
            // Porcentajes en parte inferior.
            data.options.scales.x.ticks.callback = function (value) { return value + "%" }
            var altura = data.data.labels.length * 50;
            $('#chart-publicaciones-horizontal').remove();
            $('div.chart-publicaciones-horizontal').removeAttr("style");
            $('div.chart-publicaciones-horizontal').css("height", altura + 50);
            $('div.chart-publicaciones-horizontal').append($('<canvas id="chart-publicaciones-horizontal" class="js-chart" width="600" height="' + altura + '"></canvas>'));
            var ctx = document.getElementById('chart-publicaciones-horizontal');
            var parent = ctx.parentElement;
            var width = parent.offsetWidth;
            ctx.setAttribute('width', width);
            var height = parent.offsetHeight;
            ctx.setAttribute('height', height);
            var myChart = new Chart(ctx, data);
        });
    }

    var comportamientoPaginaInvestigador = {
        filtroOculto: null,
        tabActive: null,
        init: function () {
            this.config();
            $('#publicaciones-tab').click();
            return;
        },
        config: function () {
            var that = this;
            $('#publicaciones-tab').unbind().click(function (e) {
                e.preventDefault();
                that.tabActive = "publicaciones";
                //buscadorPersonalizado.init("@Html.Translate("PUBLICACIONES")", "#contenedorBuscadorPublicaciones", "bibo:authorList@@@@@@rdf:member=http://gnoss/@pPerson.GNOSSID.Split('_')[1].ToUpper()", "dct:issued", "rdf:type=document", "@Comunidad.Url", "@Comunidad.Key.ToString()");
                buscadorPersonalizado.init("@Html.Translate("PUBLICACIONES")", "#contenedorBuscadorPublicaciones", "roh:publicAuthorList=http://gnoss/@pPerson.GNOSSID.Split('_')[1].ToUpper()", "dct:issued", "rdf:type=document", "@Comunidad.Url", "@Comunidad.Key.ToString()");
            });
            $('#proyectos-tab').unbind().click(function (e) {
                e.preventDefault();
                that.tabActive = "proyectos";
                //buscadorPersonalizado.init("Proyectos", "#contenedorBuscadorProyectos", "vivo:relates@@@@@@roh:roleOf=http://gnoss/@pPerson.GNOSSID.Split('_')[1].ToUpper()", "", "rdf:type=project", "@Comunidad.Url", "@Comunidad.Key.ToString()");
                buscadorPersonalizado.init("Proyectos", "#contenedorBuscadorProyectos", "roh:publicAuthorList=http://gnoss/@pPerson.GNOSSID.Split('_')[1].ToUpper()", "", "rdf:type=project", "@Comunidad.Url", "@Comunidad.Key.ToString()");
            });
            $('#topics-tab').unbind().click(function (e) {
                e.preventDefault();
                that.tabActive = "topics";
                var parametros = ObtenerHash2()+"&" + buscadorPersonalizado.filtro;
                // CargarGraficaPublicacionesHorizontal("@pPerson.GNOSSID.Split('_')[1].ToUpper()", "");
                // buscadorPersonalizado.init("@Html.Translate("PUBLICACIONES")", "", "roh:publicAuthorList=http://gnoss/@pPerson.GNOSSID.Split('_')[1].ToUpper()", "dct:issued", "rdf:type=document", "@Comunidad.Url", "@Comunidad.Key.ToString()");
                CargarGraficaAreasTematicas("@pPerson.GNOSSID.Split('_')[1].ToUpper()", "roh:publicAuthorList=http://gnoss/@pPerson.GNOSSID.Split('_')[1].ToUpper()");
            });
            $('#colaboraciones-tab').unbind().click(function (e) {
                e.preventDefault();
                that.tabActive = "colaboradores";
                buscadorPersonalizado.init("Colaboradores", "#contenedorBuscadorColaboradores", "searchPersonasRelacionadas=@pPerson.GNOSSID.Split('_')[1].ToUpper()", "", "rdf:type=person", "@Comunidad.Url", "@Comunidad.Key.ToString()");
            });
            return;
        }
    };

    $(function () {
        comportamientoPaginaInvestigador.init();
        comportamientoVerMasVerMenosTags.init();
    });
    
    // Acciones a llevar a cabo en el filtrado.
    function accionFiltrado() {
        console.log("ejectuado: ", comportamientoPaginaInvestigador.tabActive);
        var parametros = ObtenerHash2()+"&" + buscadorPersonalizado.filtro;
        if (comportamientoPaginaInvestigador.tabActive == "publicaciones") {
            CargarGraficaPublicaciones(parametros,'publicaciongraph');
        }
        else if (comportamientoPaginaInvestigador.tabActive == "proyectos") {
            CargarGraficaProyectos(parametros,'projectgraph');
        }
        else if (comportamientoPaginaInvestigador.tabActive == "colaboradores")
        {
            CargarGraficaColaboradores("@pPerson.GNOSSID.Split('_')[1].ToUpper()", parametros, "@pPerson.Foaf_name", 'colaboratorsgraph');
        }
    }
</script>

@functions
{void PintarOrganization(Organization pOrganization, GnossOCBase.LanguageEnum idiomaUsuario)
    {

        if (pOrganization != null && !string.IsNullOrEmpty(pOrganization.Roh_title) && !string.IsNullOrEmpty(pOrganization.GNOSSID))
        {
            <li about="@pOrganization.GNOSSID" property="@pOrganization.GetPropertyURI(nameof(pOrganization.Roh_title))">@pOrganization.Roh_title</li>
        }
        else
        {
            <li>Organización Externa</li>
        }
    }
}

@functions
{
    public class RDFPropertyAttribute : Attribute
    {
        public RDFPropertyAttribute(string pRDFA)
        {
            mRDFA = pRDFA;
        }
        protected string mRDFA;
        public string RDFProperty
        {
            get { return mRDFA; }
        }
    }

    [AttributeUsage(AttributeTargets.All, AllowMultiple = true)]
    public class LABELAttribute : Attribute
    {
        private GnossOCBase.LanguageEnum IdiomaDefecto = GnossOCBase.LanguageEnum.es;
        private GnossOCBase.LanguageEnum midioma;
        private string mlabel;
        public LABELAttribute(GnossOCBase.LanguageEnum idioma, string label)
        {
            mlabel = label;
            midioma = idioma;
        }
        public string LABEL(GnossOCBase.LanguageEnum pLang)
        {
            if (midioma.Equals(pLang))
            {
                return mlabel;
            }
            return "";
        }
    }

    public class CategoryPath : GnossOCBase
    {

        public CategoryPath() : base() { }

        public CategoryPath(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Roh_categoryNode = new List<Concept>();
            SemanticPropertyModel propRoh_categoryNode = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/categoryNode");
            if (propRoh_categoryNode != null && propRoh_categoryNode.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_categoryNode.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        Concept roh_categoryNode = new Concept(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_categoryNode.Add(roh_categoryNode);
                    }
                }
            }
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/CategoryPath"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/CategoryPath"; } }

        [LABEL(LanguageEnum.es, "http://w3id.org/roh/categoryNode")]
        [RDFProperty("http://w3id.org/roh/categoryNode")]
        public List<Concept> Roh_categoryNode { get; set; }
        public List<string> IdsRoh_categoryNode { get; set; }
    }

    public class Concept : GnossOCBase
    {

        public Concept() : base() { }

        public Concept(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Skos_broader = new List<Concept>();
            SemanticPropertyModel propSkos_broader = pSemCmsModel.GetPropertyByPath("http://www.w3.org/2008/05/skos#broader");
            if (propSkos_broader != null && propSkos_broader.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propSkos_broader.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        Concept skos_broader = new Concept(propValue.RelatedEntity, idiomaUsuario);
                        this.Skos_broader.Add(skos_broader);
                    }
                }
            }
            this.Skos_narrower = new List<Concept>();
            SemanticPropertyModel propSkos_narrower = pSemCmsModel.GetPropertyByPath("http://www.w3.org/2008/05/skos#narrower");
            if (propSkos_narrower != null && propSkos_narrower.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propSkos_narrower.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        Concept skos_narrower = new Concept(propValue.RelatedEntity, idiomaUsuario);
                        this.Skos_narrower.Add(skos_narrower);
                    }
                }
            }
            this.Skos_symbol = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://www.w3.org/2008/05/skos#symbol"));
            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Skos_prefLabel = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://www.w3.org/2008/05/skos#prefLabel"));
            this.Dc_source = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/source"));
        }

        public virtual string RdfType { get { return "http://www.w3.org/2008/05/skos#Concept"; } }
        public virtual string RdfsLabel { get { return "http://www.w3.org/2008/05/skos#Concept"; } }

        [LABEL(LanguageEnum.es, "Genérico")]
        [RDFProperty("http://www.w3.org/2008/05/skos#broader")]
        public List<Concept> Skos_broader { get; set; }

        [LABEL(LanguageEnum.es, "Específico")]
        [RDFProperty("http://www.w3.org/2008/05/skos#narrower")]
        public List<Concept> Skos_narrower { get; set; }

        [LABEL(LanguageEnum.es, "Símbolo")]
        [RDFProperty("http://www.w3.org/2008/05/skos#symbol")]
        public string Skos_symbol { get; set; }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [LABEL(LanguageEnum.es, "Etiqueta preferente")]
        [RDFProperty("http://www.w3.org/2008/05/skos#prefLabel")]
        public string Skos_prefLabel { get; set; }

        [LABEL(LanguageEnum.es, "Fuente")]
        [RDFProperty("http://purl.org/dc/elements/1.1/source")]
        public string Dc_source { get; set; }

    }

    public class GnossOCBase
    {
        public enum LanguageEnum
        {
            es,
            en,
        }
        internal List<string> prefList = new List<string>();
        internal string mGNOSSID;
        internal string mURL;
        internal Guid resourceID;
        internal Guid articleID;
        private static List<string> NoEnIdiomas = new List<string> { "Não", "Non", "Ez", "Nein", "No" };
        public List<string> tagList = new List<string>();
        public GnossOCBase()
        {
            prefList.Add("xmlns:foaf=\"http://xmlns.com/foaf/0.1/\"");
            prefList.Add("xmlns:vivo=\"http://vivoweb.org/ontology/core#\"");
            prefList.Add("xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"");
            prefList.Add("xmlns:owl=\"http://www.w3.org/2002/07/owl#\"");
            prefList.Add("xmlns:bibo=\"http://purl.org/ontology/bibo/\"");
            prefList.Add("xmlns:roh=\"http://w3id.org/roh/\"");
            prefList.Add("xmlns:dct=\"http://purl.org/dc/terms/\"");
            prefList.Add("xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"");
            prefList.Add("xmlns:xsd=\"http://www.w3.org/2001/XMLSchema#\"");
            prefList.Add("xmlns:obo=\"http://purl.obolibrary.org/obo/\"");
            prefList.Add("xmlns:vcard=\"https://www.w3.org/2006/vcard/ns#\"");
            prefList.Add("xmlns:dc=\"http://purl.org/dc/elements/1.1/\"");

            this.resourceID = Guid.NewGuid();
            this.articleID = Guid.NewGuid();
        }

        public string GNOSSID
        {
            get { return mGNOSSID; }
            set
            {
                this.mGNOSSID = value;
                var GnossIDSplit = this.mGNOSSID.Split('_');
                Guid nuevoResource = Guid.Parse(GnossIDSplit[GnossIDSplit.Count() - 2]);
                Guid nuevoArticle = Guid.Parse(GnossIDSplit.Last());
                if (!this.ResourceID.Equals(nuevoResource))
                {
                    this.resourceID = nuevoResource;
                }
                if (!this.ArticleID.Equals(nuevoArticle))
                {
                    this.articleID = nuevoArticle;
                }
            }
        }
        public string URL
        {
            get { return mURL; }
        }

        public Guid ResourceID
        {
            get { return resourceID; }
            set
            {
                this.resourceID = value;
                string primeraParte = this.mGNOSSID.Substring(0, this.mGNOSSID.LastIndexOf('/') + 1);
                string antiguoGuid = this.mGNOSSID.Substring(this.mGNOSSID.LastIndexOf('/') + 1, this.mGNOSSID.LastIndexOf('_'));
                string ultimaParte = this.mGNOSSID.Substring(this.mGNOSSID.LastIndexOf('_') + 1);
                if (!antiguoGuid.Equals(this.resourceID.ToString()))
                {
                    this.mGNOSSID = $"{primeraParte}{this.resourceID.ToString()}{ultimaParte}";
                }
            }
        }

        public Guid ArticleID
        {
            get { return articleID; }
            set
            {
                this.articleID = value;
                string primeraParte = this.mGNOSSID.Substring(0, this.mGNOSSID.LastIndexOf('_') + 1);
                string antiguoGuid = this.mGNOSSID.Substring(this.mGNOSSID.LastIndexOf('_') + 1);
                if (!antiguoGuid.Equals(this.articleID.ToString()))
                {
                    this.mGNOSSID = $"{primeraParte}{this.articleID.ToString()}";
                }
            }
        }

        public static string GetPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            if (pProperty != null && pProperty.PropertyValues.Count > 0)
            {
                return pProperty.PropertyValues[0].Value;
            }
            return "";
        }

        public static int? GetNumberIntPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            if (pProperty != null && pProperty.PropertyValues.Count > 0 && !string.IsNullOrEmpty(pProperty.PropertyValues[0].Value))
            {
                return int.Parse(pProperty.PropertyValues[0].Value);
            }
            return 0;
        }

        public static int? GetNumberIntPropertyMultipleValueSemCms(SemanticPropertyModel.PropertyValue pProperty)
        {
            if (pProperty != null && !string.IsNullOrEmpty(pProperty.Value))
            {
                return int.Parse(pProperty.Value);
            }
            return 0;
        }

        public static float? GetNumberFloatPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            if (pProperty != null && pProperty.PropertyValues.Count > 0 && !string.IsNullOrEmpty(pProperty.PropertyValues[0].Value))
            {
                return float.Parse(pProperty.PropertyValues[0].Value.Replace('.', ','));
            }
            return 0;
        }

        public static DateTime? GetDateValuePropertySemCms(SemanticPropertyModel pProperty)
        {
            string stringDate = GetPropertyValueSemCms(pProperty);
            if (!string.IsNullOrEmpty(stringDate))
            {
                int year = 0;
                int month = 0;
                int day = 0;
                if (stringDate.Contains('/'))
                {
                    day = int.Parse(stringDate.Split('/')[0]);
                    month = int.Parse(stringDate.Split('/')[1]);
                    year = int.Parse(stringDate.Split('/')[2].Split(' ')[0]);
                }
                else
                {
                    year = int.Parse(stringDate.Substring(0, 4));
                    month = int.Parse(stringDate.Substring(4, 2));
                    day = int.Parse(stringDate.Substring(6, 2));
                }
                if (stringDate.Length == 14)
                {
                    if (month == 0 || day == 0)
                    {
                        return new DateTime(year);
                    }
                    else
                    {
                        int hour = int.Parse(stringDate.Substring(8, 2));
                        int minute = int.Parse(stringDate.Substring(10, 2));
                        int second = int.Parse(stringDate.Substring(12, 2));
                        return new DateTime(year, month, day, hour, minute, second);
                    }
                }
                else
                {
                    return new DateTime(year, month, day);
                }
            }
            return null;
        }

        public static bool GetBooleanPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            bool resultado = false;
            if (pProperty != null && pProperty.PropertyValues.Count > 0 && !string.IsNullOrEmpty(pProperty.PropertyValues[0].Value))
            {
                if (!bool.TryParse(pProperty.PropertyValues[0].Value, out resultado))
                {
                    resultado = !NoEnIdiomas.Contains(pProperty.PropertyValues[0].Value);
                }
            }
            return resultado;
        }



        public string GetPropertyURI(string nombrePropiedad)
        {
            Type type = this.GetType();
            PropertyInfo mInfo = type.GetProperty(nombrePropiedad);
            if (mInfo != null)
            {
                Attribute attr = Attribute.GetCustomAttribute(mInfo, typeof(RDFPropertyAttribute));
                if (attr != null)
                {
                    return ((RDFPropertyAttribute)attr).RDFProperty;
                }
            }
            return "";
        }



        public string GetLabel(string nombrePropiedad, LanguageEnum pLang)
        {
            Type type = this.GetType();
            PropertyInfo mInfo = type.GetProperty(nombrePropiedad);

            if (mInfo != null)
            {
                Attribute[] attr = Attribute.GetCustomAttributes(mInfo, typeof(LABELAttribute));
                {
                    foreach (Attribute atributo in attr)
                    {
                        if (atributo != null)
                        {
                            if (!((LABELAttribute)atributo).LABEL(pLang).Equals(""))
                            {
                                return ((LABELAttribute)atributo).LABEL(pLang);
                            }
                        }
                    }
                }
            }

            return "";
        }
    }

    public class Person : GnossOCBase
    {

        public Person() : base() { } 

        public Person(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            SemanticPropertyModel propRoh_hasRole = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasRole");
            if(propRoh_hasRole != null && propRoh_hasRole.PropertyValues.Count > 0)
            {
                this.Roh_hasRole = new Organization(propRoh_hasRole.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            SemanticPropertyModel propVivo_departmentOrSchool = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#departmentOrSchool");
            if(propVivo_departmentOrSchool != null && propVivo_departmentOrSchool.PropertyValues.Count > 0)
            {
                this.Vivo_departmentOrSchool = new Department(propVivo_departmentOrSchool.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Vivo_hasResearchArea = new List<CategoryPath>();
            SemanticPropertyModel propVivo_hasResearchArea = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#hasResearchArea");
            if(propVivo_hasResearchArea != null && propVivo_hasResearchArea.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_hasResearchArea.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        CategoryPath vivo_hasResearchArea = new CategoryPath(propValue.RelatedEntity,idiomaUsuario);
                        this.Vivo_hasResearchArea.Add(vivo_hasResearchArea);
                    }
                }
            }
            this.Vivo_relates = new List<Group>();
            SemanticPropertyModel propVivo_relates = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#relates");
            if(propVivo_relates != null && propVivo_relates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_relates.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        Group vivo_relates = new Group(propValue.RelatedEntity,idiomaUsuario);
                        this.Vivo_relates.Add(vivo_relates);
                    }
                }
            }
            SemanticPropertyModel propRoh_lineResearch = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/lineResearch");
            this.Roh_lineResearch = new List<string>();
            if (propRoh_lineResearch != null && propRoh_lineResearch.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_lineResearch.PropertyValues)
                {
                    this.Roh_lineResearch.Add(propValue.Value);
                }
            }
            this.Roh_publicationsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/publicationsNumber"));
            this.Vivo_researcherId = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#researcherId"));
            this.Vivo_scopusId = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#scopusId"));
            this.Roh_projectsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/projectsNumber"));
            this.Vcard_address = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#address"));
            this.Roh_hasPosition = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasPosition"));
            SemanticPropertyModel propFoaf_homepage = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/homepage");
            this.Foaf_homepage = new List<string>();
            if (propFoaf_homepage != null && propFoaf_homepage.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_homepage.PropertyValues)
                {
                    this.Foaf_homepage.Add(propValue.Value);
                }
            }
            SemanticPropertyModel propVcard_email = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#email");
            this.Vcard_email = new List<string>();
            if (propVcard_email != null && propVcard_email.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVcard_email.PropertyValues)
                {
                    this.Vcard_email.Add(propValue.Value);
                }
            }
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Vivo_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#description"));
            this.Roh_semanticScholarId = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/semanticScholarId"));
            this.Roh_ORCID = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/ORCID"));
            this.Roh_h_index = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/h-index"));
            SemanticPropertyModel propVcard_hasTelephone = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasTelephone");
            this.Vcard_hasTelephone = new List<string>();
            if (propVcard_hasTelephone != null && propVcard_hasTelephone.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVcard_hasTelephone.PropertyValues)
                {
                    this.Vcard_hasTelephone.Add(propValue.Value);
                }
            }
            this.Roh_collaboratorsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/collaboratorsNumber"));
            SemanticPropertyModel propFoaf_nick = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/nick");
            this.Foaf_nick = new List<string>();
            if (propFoaf_nick != null && propFoaf_nick.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_nick.PropertyValues)
                {
                    this.Foaf_nick.Add(propValue.Value);
                }
            }
            this.Roh_isSynchronized= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isSynchronized"));
            this.Foaf_firstName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/firstName"));
            this.Roh_isActive= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isActive"));
            this.Foaf_name = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/name"));
            this.Roh_hasResearchAreaEdited= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasResearchAreaEdited"));
            this.Foaf_lastName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/lastName"));
            this.Roh_isPublic= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isPublic"));
        }

        public Person(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propRoh_hasRole = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasRole");
            if(propRoh_hasRole != null && propRoh_hasRole.PropertyValues.Count > 0)
            {
                this.Roh_hasRole = new Organization(propRoh_hasRole.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            SemanticPropertyModel propVivo_departmentOrSchool = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#departmentOrSchool");
            if(propVivo_departmentOrSchool != null && propVivo_departmentOrSchool.PropertyValues.Count > 0)
            {
                this.Vivo_departmentOrSchool = new Department(propVivo_departmentOrSchool.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Vivo_hasResearchArea = new List<CategoryPath>();
            SemanticPropertyModel propVivo_hasResearchArea = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#hasResearchArea");
            if(propVivo_hasResearchArea != null && propVivo_hasResearchArea.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_hasResearchArea.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        CategoryPath vivo_hasResearchArea = new CategoryPath(propValue.RelatedEntity,idiomaUsuario);
                        this.Vivo_hasResearchArea.Add(vivo_hasResearchArea);
                    }
                }
            }
            this.Vivo_relates = new List<Group>();
            SemanticPropertyModel propVivo_relates = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#relates");
            if(propVivo_relates != null && propVivo_relates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_relates.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        Group vivo_relates = new Group(propValue.RelatedEntity,idiomaUsuario);
                        this.Vivo_relates.Add(vivo_relates);
                    }
                }
            }
            SemanticPropertyModel propRoh_lineResearch = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/lineResearch");
            this.Roh_lineResearch = new List<string>();
            if (propRoh_lineResearch != null && propRoh_lineResearch.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_lineResearch.PropertyValues)
                {
                    this.Roh_lineResearch.Add(propValue.Value);
                }
            }
            this.Roh_publicationsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/publicationsNumber"));
            this.Vivo_researcherId = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#researcherId"));
            this.Vivo_scopusId = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#scopusId"));
            this.Roh_projectsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/projectsNumber"));
            this.Vcard_address = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#address"));
            this.Roh_hasPosition = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasPosition"));
            SemanticPropertyModel propFoaf_homepage = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/homepage");
            this.Foaf_homepage = new List<string>();
            if (propFoaf_homepage != null && propFoaf_homepage.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_homepage.PropertyValues)
                {
                    this.Foaf_homepage.Add(propValue.Value);
                }
            }
            SemanticPropertyModel propVcard_email = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#email");
            this.Vcard_email = new List<string>();
            if (propVcard_email != null && propVcard_email.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVcard_email.PropertyValues)
                {
                    this.Vcard_email.Add(propValue.Value);
                }
            }
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Vivo_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#description"));
            this.Roh_semanticScholarId = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/semanticScholarId"));
            this.Roh_ORCID = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/ORCID"));
            this.Roh_h_index = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/h-index"));
            SemanticPropertyModel propVcard_hasTelephone = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasTelephone");
            this.Vcard_hasTelephone = new List<string>();
            if (propVcard_hasTelephone != null && propVcard_hasTelephone.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVcard_hasTelephone.PropertyValues)
                {
                    this.Vcard_hasTelephone.Add(propValue.Value);
                }
            }
            this.Roh_collaboratorsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/collaboratorsNumber"));
            SemanticPropertyModel propFoaf_nick = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/nick");
            this.Foaf_nick = new List<string>();
            if (propFoaf_nick != null && propFoaf_nick.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_nick.PropertyValues)
                {
                    this.Foaf_nick.Add(propValue.Value);
                }
            }
            this.Roh_isSynchronized= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isSynchronized"));
            this.Foaf_firstName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/firstName"));
            this.Roh_isActive= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isActive"));
            this.Foaf_name = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/name"));
            this.Roh_hasResearchAreaEdited= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasResearchAreaEdited"));
            this.Foaf_lastName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/lastName"));
            this.Roh_isPublic= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isPublic"));
        }

        public virtual string RdfType { get { return "http://xmlns.com/foaf/0.1/Person"; } }
        public virtual string RdfsLabel { get { return "http://xmlns.com/foaf/0.1/Person"; } }
        [LABEL(LanguageEnum.es,"http://w3id.org/roh/hasRole")]
        [RDFProperty("http://w3id.org/roh/hasRole")]
        public  Organization Roh_hasRole  { get; set;} 
        public string IdRoh_hasRole  { get; set;} 

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#departmentOrSchool")]
        [RDFProperty("http://vivoweb.org/ontology/core#departmentOrSchool")]
        public  Department Vivo_departmentOrSchool  { get; set;} 
        public string IdVivo_departmentOrSchool  { get; set;} 

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#hasResearchArea")]
        [RDFProperty("http://vivoweb.org/ontology/core#hasResearchArea")]
        public  List<CategoryPath> Vivo_hasResearchArea { get; set;}

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#relates")]
        [RDFProperty("http://vivoweb.org/ontology/core#relates")]
        public  List<Group> Vivo_relates { get; set;}
        public List<string> IdsVivo_relates { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/lineResearch")]
        [RDFProperty("http://w3id.org/roh/lineResearch")]
        public  List<string> Roh_lineResearch { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/publicationsNumber")]
        [RDFProperty("http://w3id.org/roh/publicationsNumber")]
        public  int? Roh_publicationsNumber { get; set;}

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#researcherId")]
        [RDFProperty("http://vivoweb.org/ontology/core#researcherId")]
        public  string Vivo_researcherId { get; set;}

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#scopusId")]
        [RDFProperty("http://vivoweb.org/ontology/core#scopusId")]
        public  string Vivo_scopusId { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/projectsNumber")]
        [RDFProperty("http://w3id.org/roh/projectsNumber")]
        public  int? Roh_projectsNumber { get; set;}

        [LABEL(LanguageEnum.es,"https://www.w3.org/2006/vcard/ns#address")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#address")]
        public  string Vcard_address { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/hasPosition")]
        [RDFProperty("http://w3id.org/roh/hasPosition")]
        public  string Roh_hasPosition { get; set;}

        [LABEL(LanguageEnum.es,"http://xmlns.com/foaf/0.1/homepage")]
        [RDFProperty("http://xmlns.com/foaf/0.1/homepage")]
        public  List<string> Foaf_homepage { get; set;}

        [LABEL(LanguageEnum.es,"https://www.w3.org/2006/vcard/ns#email")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#email")]
        public  List<string> Vcard_email { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/crisIdentifier")]
        [RDFProperty("http://w3id.org/roh/crisIdentifier")]
        public  string Roh_crisIdentifier { get; set;}

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#description")]
        [RDFProperty("http://vivoweb.org/ontology/core#description")]
        public  string Vivo_description { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/semanticScholarId")]
        [RDFProperty("http://w3id.org/roh/semanticScholarId")]
        public  string Roh_semanticScholarId { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/ORCID")]
        [RDFProperty("http://w3id.org/roh/ORCID")]
        public  string Roh_ORCID { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/h-index")]
        [RDFProperty("http://w3id.org/roh/h-index")]
        public  float? Roh_h_index { get; set;}

        [LABEL(LanguageEnum.es,"https://www.w3.org/2006/vcard/ns#hasTelephone")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#hasTelephone")]
        public  List<string> Vcard_hasTelephone { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/collaboratorsNumber")]
        [RDFProperty("http://w3id.org/roh/collaboratorsNumber")]
        public  int? Roh_collaboratorsNumber { get; set;}

        [LABEL(LanguageEnum.es,"http://xmlns.com/foaf/0.1/nick")]
        [RDFProperty("http://xmlns.com/foaf/0.1/nick")]
        public  List<string> Foaf_nick { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/isSynchronized")]
        [RDFProperty("http://w3id.org/roh/isSynchronized")]
        public  bool Roh_isSynchronized { get; set;}

        [LABEL(LanguageEnum.es,"http://xmlns.com/foaf/0.1/firstName")]
        [RDFProperty("http://xmlns.com/foaf/0.1/firstName")]
        public  string Foaf_firstName { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/isActive")]
        [RDFProperty("http://w3id.org/roh/isActive")]
        public  bool Roh_isActive { get; set;}

        [LABEL(LanguageEnum.es,"http://xmlns.com/foaf/0.1/name")]
        [RDFProperty("http://xmlns.com/foaf/0.1/name")]
        public  string Foaf_name { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/hasResearchAreaEdited")]
        [RDFProperty("http://w3id.org/roh/hasResearchAreaEdited")]
        public  bool Roh_hasResearchAreaEdited { get; set;}

        [LABEL(LanguageEnum.es,"http://xmlns.com/foaf/0.1/lastName")]
        [RDFProperty("http://xmlns.com/foaf/0.1/lastName")]
        public  string Foaf_lastName { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/isPublic")]
        [RDFProperty("http://w3id.org/roh/isPublic")]
        public  bool Roh_isPublic { get; set;}
    }

    public class Department : GnossOCBase
    {

        public Department() : base() { }

        public Department(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
        }

        public virtual string RdfType{ 
            get {return "http://vivoweb.org/ontology/core#Department";}
        }
        public virtual string RdfsLabel{ 
            get {return "http://vivoweb.org/ontology/core#Department";}
        }
        [LABEL(LanguageEnum.es, "http://purl.org/dc/elements/1.1/title")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }

        [LABEL(LanguageEnum.es, "http://purl.org/dc/elements/1.1/identifier")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }
    }

    public class Organization : GnossOCBase
    {

        public Organization() : base() { }

        public Organization(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public Organization(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        [LABEL(LanguageEnum.es, "Nombre")]
        [RDFProperty("http://w3id.org/roh/title")]
        public string Roh_title { get; set; }

    }

    public class Group : GnossOCBase
    {

        public Group() : base() { }

        public Group(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            SemanticPropertyModel propVivo_affiliatedOrganization = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#affiliatedOrganization");
            if (propVivo_affiliatedOrganization != null && propVivo_affiliatedOrganization.PropertyValues.Count > 0)
            {
                this.Vivo_affiliatedOrganization = new Organization(propVivo_affiliatedOrganization.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_hasResultsGroupClassification = new List<GroupClassification>();
            SemanticPropertyModel propRoh_hasResultsGroupClassification = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasResultsGroupClassification");
            if (propRoh_hasResultsGroupClassification != null && propRoh_hasResultsGroupClassification.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasResultsGroupClassification.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        GroupClassification roh_hasResultsGroupClassification = new GroupClassification(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_hasResultsGroupClassification.Add(roh_hasResultsGroupClassification);
                    }
                }
            }
            this.Roh_mainResearcher = new List<BFO_0000023>();
            SemanticPropertyModel propRoh_mainResearcher = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/mainResearcher");
            if (propRoh_mainResearcher != null && propRoh_mainResearcher.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_mainResearcher.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        BFO_0000023 roh_mainResearcher = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_mainResearcher.Add(roh_mainResearcher);
                    }
                }
            }
            this.Foaf_member = new List<BFO_0000023>();
            SemanticPropertyModel propFoaf_member = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/member");
            if (propFoaf_member != null && propFoaf_member.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_member.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        BFO_0000023 foaf_member = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Foaf_member.Add(foaf_member);
                    }
                }
            }
            SemanticPropertyModel propRoh_colaborationTypeGroup = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/colaborationTypeGroup");
            if (propRoh_colaborationTypeGroup != null && propRoh_colaborationTypeGroup.PropertyValues.Count > 0)
            {
                //this.Roh_colaborationTypeGroup = new ColaborationTypeGroup(propRoh_colaborationTypeGroup.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_relevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/relevantResults"));
            this.Roh_durationDays = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationDays"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
            this.Roh_normalizedCode = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/normalizedCode"));
            this.Roh_otherRelevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/otherRelevantResults"));
            this.Roh_durationMonths = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationMonths"));
            this.Roh_directedPostdocsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/directedPostdocsNumber"));
            this.Roh_researchersNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/researchersNumber"));
            this.Roh_durationYears = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationYears"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Roh_foundationDate = GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/foundationDate"));
            this.Roh_directedThesisNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/directedThesisNumber"));
        }

        public Group(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propVivo_affiliatedOrganization = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#affiliatedOrganization");
            if (propVivo_affiliatedOrganization != null && propVivo_affiliatedOrganization.PropertyValues.Count > 0)
            {
                this.Vivo_affiliatedOrganization = new Organization(propVivo_affiliatedOrganization.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_hasResultsGroupClassification = new List<GroupClassification>();
            SemanticPropertyModel propRoh_hasResultsGroupClassification = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasResultsGroupClassification");
            if (propRoh_hasResultsGroupClassification != null && propRoh_hasResultsGroupClassification.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasResultsGroupClassification.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        GroupClassification roh_hasResultsGroupClassification = new GroupClassification(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_hasResultsGroupClassification.Add(roh_hasResultsGroupClassification);
                    }
                }
            }
            this.Roh_mainResearcher = new List<BFO_0000023>();
            SemanticPropertyModel propRoh_mainResearcher = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/mainResearcher");
            if (propRoh_mainResearcher != null && propRoh_mainResearcher.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_mainResearcher.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        BFO_0000023 roh_mainResearcher = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_mainResearcher.Add(roh_mainResearcher);
                    }
                }
            }
            this.Foaf_member = new List<BFO_0000023>();
            SemanticPropertyModel propFoaf_member = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/member");
            if (propFoaf_member != null && propFoaf_member.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_member.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        BFO_0000023 foaf_member = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Foaf_member.Add(foaf_member);
                    }
                }
            }
            SemanticPropertyModel propRoh_colaborationTypeGroup = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/colaborationTypeGroup");
            if (propRoh_colaborationTypeGroup != null && propRoh_colaborationTypeGroup.PropertyValues.Count > 0)
            {
                //this.Roh_colaborationTypeGroup = new ColaborationTypeGroup(propRoh_colaborationTypeGroup.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_relevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/relevantResults"));
            this.Roh_durationDays = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationDays"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
            this.Roh_normalizedCode = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/normalizedCode"));
            this.Roh_otherRelevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/otherRelevantResults"));
            this.Roh_durationMonths = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationMonths"));
            this.Roh_directedPostdocsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/directedPostdocsNumber"));
            this.Roh_researchersNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/researchersNumber"));
            this.Roh_durationYears = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationYears"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Roh_foundationDate = GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/foundationDate"));
            this.Roh_directedThesisNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/directedThesisNumber"));
        }

        public virtual string RdfType{ 
            get {return "http://xmlns.com/foaf/0.1/Group";}
        }
        public virtual string RdfsLabel{ 
            get {return "http://xmlns.com/foaf/0.1/Group";}
        }
        [LABEL(LanguageEnum.es, "Entidad de afiliación")]
        [RDFProperty("http://vivoweb.org/ontology/core#affiliatedOrganization")]
        public Organization Vivo_affiliatedOrganization { get; set; }
        public string IdVivo_affiliatedOrganization { get; set; }

        [LABEL(LanguageEnum.es, "Resultados de la clasificación del grupo")]
        [RDFProperty("http://w3id.org/roh/hasResultsGroupClassification")]
        public List<GroupClassification> Roh_hasResultsGroupClassification { get; set; }

        [LABEL(LanguageEnum.es, "Investigador principal")]
        [RDFProperty("http://w3id.org/roh/mainResearcher")]
        public List<BFO_0000023> Roh_mainResearcher { get; set; }

        [LABEL(LanguageEnum.es, "Miembros")]
        [RDFProperty("http://xmlns.com/foaf/0.1/member")]
        public List<BFO_0000023> Foaf_member { get; set; }

        [LABEL(LanguageEnum.es, "Tipo de colaboración")]
        [RDFProperty("http://w3id.org/roh/colaborationTypeGroup")]
        //public ColaborationTypeGroup Roh_colaborationTypeGroup { get; set; }
        public string IdRoh_colaborationTypeGroup { get; set; }

        [LABEL(LanguageEnum.es, "Resultados relevantes")]
        [RDFProperty("http://w3id.org/roh/relevantResults")]
        public string Roh_relevantResults { get; set; }

        [LABEL(LanguageEnum.es, "Duración (días)")]
        [RDFProperty("http://w3id.org/roh/durationDays")]
        public string Roh_durationDays { get; set; }

        [LABEL(LanguageEnum.es, "Nombre del grupo")]
        [RDFProperty("http://w3id.org/roh/title")]
        public string Roh_title { get; set; }

        [LABEL(LanguageEnum.es, "Código normalizado")]
        [RDFProperty("http://w3id.org/roh/normalizedCode")]
        public string Roh_normalizedCode { get; set; }

        [LABEL(LanguageEnum.es, "Resultados relevantes, otros")]
        [RDFProperty("http://w3id.org/roh/otherRelevantResults")]
        public string Roh_otherRelevantResults { get; set; }

        [LABEL(LanguageEnum.es, "Duración (meses)")]
        [RDFProperty("http://w3id.org/roh/durationMonths")]
        public string Roh_durationMonths { get; set; }

        [LABEL(LanguageEnum.es, "Número de postdoctorados dirigidos")]
        [RDFProperty("http://w3id.org/roh/directedPostdocsNumber")]
        public int? Roh_directedPostdocsNumber { get; set; }

        [LABEL(LanguageEnum.es, "Número de investigadores")]
        [RDFProperty("http://w3id.org/roh/researchersNumber")]
        public int? Roh_researchersNumber { get; set; }

        [LABEL(LanguageEnum.es, "Duración (años)")]
        [RDFProperty("http://w3id.org/roh/durationYears")]
        public string Roh_durationYears { get; set; }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://w3id.org/roh/crisIdentifier")]
        public string Roh_crisIdentifier { get; set; }

        [LABEL(LanguageEnum.es, "Fecha de inicio")]
        [RDFProperty("http://w3id.org/roh/foundationDate")]
        public DateTime? Roh_foundationDate { get; set; }

        [LABEL(LanguageEnum.es, "Número de tesis dirigidas")]
        [RDFProperty("http://w3id.org/roh/directedThesisNumber")]
        public int? Roh_directedThesisNumber { get; set; }
    }

    public class BFO_0000023 : GnossOCBase
    {

        public BFO_0000023() : base() { }

        public BFO_0000023(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Vivo_start = GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#start"));
            SemanticPropertyModel propVivo_hasResearchArea = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#hasResearchArea");
            this.Vivo_hasResearchArea = new List<string>();
            if (propVivo_hasResearchArea != null && propVivo_hasResearchArea.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_hasResearchArea.PropertyValues)
                {
                    this.Vivo_hasResearchArea.Add(propValue.Value);
                }
            }
            this.Vivo_end = GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#end"));
            this.Foaf_nick = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/nick"));
            SemanticPropertyModel propRoh_roleOf = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/roleOf");
            if (propRoh_roleOf != null && propRoh_roleOf.PropertyValues.Count > 0)
            {
                this.Roh_roleOf = new Person(propRoh_roleOf.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
        }

        public virtual string RdfType{ 
            get {return "http://purl.obolibrary.org/obo/BFO_0000023";}
        }
        public virtual string RdfsLabel{ 
            get {return "http://purl.obolibrary.org/obo/BFO_0000023";}
        }

        [LABEL(LanguageEnum.es, "Firma")]
        [RDFProperty("http://vivoweb.org/ontology/core#start")]
        public DateTime? Vivo_start { get; set; }

        [LABEL(LanguageEnum.es, "Líneas de investigación")]
        [RDFProperty("http://vivoweb.org/ontology/core#hasResearchArea")]
        public List<string> Vivo_hasResearchArea { get; set; }

        [LABEL(LanguageEnum.es, "Fecha inicio")]
        [RDFProperty("http://vivoweb.org/ontology/core#end")]
        public DateTime? Vivo_end { get; set; }

        [LABEL(LanguageEnum.es, "Fecha fin")]
        [RDFProperty("http://xmlns.com/foaf/0.1/nick")]
        public string Foaf_nick { get; set; }

        [LABEL(LanguageEnum.es, "Persona")]
        [RDFProperty("http://w3id.org/roh/roleOf")]
        public Person Roh_roleOf { get; set; }
        public string IdRoh_roleOf { get; set; }
    }

    public class GroupClassification : GnossOCBase
    {

        public GroupClassification() : base() { }

        public GroupClassification(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            //this.Roh_groupClassificationNode = new List<Concept>();
            SemanticPropertyModel propRoh_groupClassificationNode = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/groupClassificationNode");
            if (propRoh_groupClassificationNode != null && propRoh_groupClassificationNode.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_groupClassificationNode.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        //Concept roh_groupClassificationNode = new Concept(propValue.RelatedEntity, idiomaUsuario);
                        //this.Roh_groupClassificationNode.Add(roh_groupClassificationNode);
                    }
                }
            }
        }

        public virtual string RdfType{ 
            get {return "http://w3id.org/roh/GroupClassification";}
        }
        public virtual string RdfsLabel{ 
            get {return "http://w3id.org/roh/GroupClassification";}
        }

        [LABEL(LanguageEnum.es, "Nodo de clasificación del grupo")]
        [RDFProperty("http://w3id.org/roh/groupClassificationNode")]
        //public List<Concept> Roh_groupClassificationNode { get; set; }
        public List<string> IdsRoh_groupClassificationNode { get; set; }
    }
}
