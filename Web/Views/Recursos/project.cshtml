@*[security|||project|||hercules]*@
@using Es.Riam.Gnoss.Web.MVC.Models
@using Es.Riam.Gnoss.Web.MVC.Controles.Helper
@using Es.Riam.Gnoss.Web.MVC.Models.ViewModels
@using Es.Riam.Gnoss.Web.MVC.Models.Administracion
@using Es.Riam.Gnoss.AD.ServiciosGenerales
@using Es.Riam.Gnoss.Web.MVC.Controllers
@using Es.Riam.Gnoss.Web.MVC.Controllers.Administracion
@using Es.Riam.Gnoss.Web.Controles
@using Newtonsoft.Json
@using System.Reflection;
@model ResourceViewModel
@{ ResourceModel FichaDocumento = Model.Resource;
    CommunityModel Comunidad = Html.GetComunidad();
    UserIdentityModel IdentidadActual = Html.GetIdentidadActual();
    Html.AddBodyClass(" ProjectModel ");
    if (FichaDocumento.ItemLinkedFotoVersion != 0 && !string.IsNullOrEmpty(FichaDocumento.ItemLinked.ToString()) && FichaDocumento.ItemLinked != Guid.Empty)
    {
        string urlPersonalizacion = $"{Html.GetBaseUrlContent()}/{Es.Riam.Util.UtilArchivos.ContentOntologias}/Archivos/{FichaDocumento.ItemLinked.ToString().Substring(0, 3)}";
        Html.GetListaJS().Add($"{urlPersonalizacion}/{FichaDocumento.ItemLinked.ToString()}.js?v= {FichaDocumento.ItemLinkedFotoVersion}");
        Html.GetListaCSS().Add($"{urlPersonalizacion}/{FichaDocumento.ItemLinked.ToString()}.css?v= {FichaDocumento.ItemLinkedFotoVersion}");
    }
	string urlJS = $"{Html.GetBaseUrlContent()}/imagenes/proyectos/personalizacion/{Comunidad.Key.ToString()}/theme/ficharecurso.js";
    Html.GetListaJS().Add(urlJS);
	
    SemanticResourceModel semCmsModel = Model.SemanticFrom;
    GnossOCBase.LanguageEnum idiomaUsuario = (GnossOCBase.LanguageEnum)Enum.Parse(typeof(GnossOCBase.LanguageEnum), Html.GetUtilIdiomas().LanguageCode.ToLower());
    Project pProject = new Project(semCmsModel, idiomaUsuario);
    Html.AddBodyClass("fichaRecurso");
    Html.AddBodyClass("fichaRecurso-proyecto"); }

<div class="col col-12 col-breadcrumb">
    <ul>
        <li>
            <a href="@Comunidad.Url">Home</a>
        </li>
        <li>
            @{string urlProyectos = Comunidad.Url + "/proyectos"; }
            <a href="@urlProyectos">Proyectos</a>
        </li>
        @{ if (!string.IsNullOrEmpty(pProject.Roh_title))
            {
                <li>@pProject.Roh_title</li>
            }
            else
            {
                <li>---</li>
            } }
    </ul>
</div>

<div class="col col-12 col-xl-12 col-contenido">
    <div class="wrapCol">
        <div class="cabecera-ficha cabecera-proyecto">
            <div class="user-miniatura">
                <div class="imagen-usuario-wrap">
                    <span class="material-icons">work</span>
                </div>
                <div class="nombre-usuario-wrap">
                    @{ if (!string.IsNullOrEmpty(pProject.Roh_title))
                        {
                            <p class="nombre">@pProject.Roh_title</p> }
                        else
                        {
                            <p class="nombre">---</p> } }
                </div>
                <div class="acciones-usuario-wrap">
                    <ul class="no-list-style d-flex">
                        <li>
                            <a class="btn btn-outline-grey d-none d-xl-flex">
                                <span class="material-icons">folder</span>
                                <span>TODO: Guardar en Espacio Personal</span>
                            </a>
                        </li>
                        <li>
                            <div class="acciones-recurso-listado">
                                <div class="dropdown">
                                    <a href="#" class="dropdown-toggle btn btn-outline-grey no-flecha" role="button" id="dropdownMasOpciones" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="material-icons">more_vert</span>
                                    </a>
                                    <div class="dropdown-menu basic-dropdown dropdown-icons dropdown-menu-right" aria-labelledby="dropdownMasOpciones">
                                        <p class="dropdown-title">Acciones</p>
                                        <ul class="no-list-style">
                                            <li>
                                                <a class="item-dropdown">
                                                    <span class="texto">TODO: Añadir áreas de conocimiento</span>
                                                </a>
                                            </li>
                                            <li>
                                                <a class="item-dropdown">
                                                    <span class="texto">TODO: Añadir etiquetas</span>
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="list-wrap">
                <ul>
                    @{ if (pProject.Roh_conductedBy != null && !string.IsNullOrEmpty(pProject.Roh_conductedBy.Roh_title))
                        {
                            <li>@pProject.Roh_conductedBy.Roh_title</li>
                        }
                        else
                        {
                            <li>---</li>
                        } }

                    @{ if (pProject.Roh_conductedBy != null && pProject.Roh_conductedBy.Vcard_hasAddress != null && pProject.Roh_conductedBy.Vcard_hasAddress.Vcard_hasCountryName != null)
                        {
                            <li>@pProject.Roh_conductedBy.Vcard_hasAddress.Vcard_locality</li>
                        }
                        else
                        {
                            //TODO: Ñapa
                            if (pProject.GNOSSID == "http://gnoss.com/items/Project_831011de-5eb7-4ccf-bdd5-16e8082fd4ee_f23b1d04-d1c1-403a-bb4e-8df64ad8ff03")
                            {
                                <li>España</li>
                            }
                            else
                            {
                                <li>TODO: País</li>
                            }
                        } }
                </ul>
            </div>
            <div class="list-wrap authors">
                <div class="label">
                    @Html.Translate("PERSONAL_INVESTIGADOR_PRINCIPAL")
                    @{ if (pProject.Vivo_relates != null && pProject.Vivo_relates.Count > 0)
                        {
                            foreach (BFO_0000023 persona in pProject.Vivo_relates)
                            {
                                if (persona != null && persona.Roh_participationType != null)
                                {
                                    if (persona.Roh_participationType.Dc_title[GnossOCBase.LanguageEnum.es] == "Investigador principal" || persona.Roh_participationType.Dc_title[GnossOCBase.LanguageEnum.es] == "Altres")
                                    {
                                        @persona.Roh_roleOf.Foaf_name }
                                }
                            }
                        } }
                </div>
            </div>
            <div class="info-proyecto">
                <div class="bloque">
                    <div class="descripcion">
                        @{ if (!string.IsNullOrEmpty(pProject.Vivo_description))
                            {
                                <p>@pProject.Vivo_description</p> }
                            else
                            {
                                <p>---</p> } }
                    </div>
                </div>
                <div class="bloque">
                    <div class="label">@Html.Translate("ENTIDAD_FINANCIADORA")</div>
                    @{ if (pProject.Roh_grantedBy != null && pProject.Roh_grantedBy.Count > 0)
                        {
                            foreach (Organization organizacion in pProject.Roh_grantedBy)
                            {
                                if (organizacion != null && !string.IsNullOrEmpty(organizacion.Roh_title))
                                {
                                    <div class="value">@organizacion.Roh_title</div> }
                                else
                                {
                                    <div class="value">---</div> }
                            }
                        }
                        else
                        {
                            <div class="value">---</div> } }
                </div>
                <div class="bloque">
                    <div class="label">@Html.Translate("PROGRAMA_FINANCIACION")</div>
                    @{ if (pProject.Roh_isSupportedBy != null)
                        {
                            if (!string.IsNullOrEmpty(pProject.Roh_isSupportedBy.Vivo_description))
                            {
                                <div class="value">@pProject.Roh_isSupportedBy.Vivo_description</div> }
                            else
                            {
                                <div class="value">---</div> }
                        }
                        else
                        {
                            <div class="value">---</div> } }
                </div>
                @*<div class="bloque">
                        <div class="label">Tipo de proyecto</div>
                        <div class="value">---</div>
                    </div>*@
                <div class="bloque">
                    <div class="label">@Html.Translate("MODALIDAD_PROYECTO")</div>
                    @if (pProject.Roh_modality != null && pProject.Roh_modality.Dc_title != null && pProject.Roh_modality.Dc_title.Count > 0)
                    {
                        <div class="value">@pProject.Roh_modality.Dc_title[idiomaUsuario]</div> }
                    else
                    {
                        <div class="value">---</div>}
                </div>
                <div class="fila">
                    @*<div class="bloque">
                            <div class="label">@Html.Translate("CODIGO_PROYECTO")</div>
                            @if (!string.IsNullOrEmpty(pProject.Roh_crisIdentifier))
                            {
                            <div class="value">@pProject.Roh_crisIdentifier</div>
                            }
                            else
                            {
                            <div class="value">---</div>
                            }
                        </div>*@
                    <div class="bloque">
                        <div class="label">@Html.Translate("AMBITO_GEOGRAFICO")</div>
                        @if (pProject.Vivo_geographicFocus != null && pProject.Vivo_geographicFocus.Dc_title != null && pProject.Vivo_geographicFocus.Dc_title.Count > 0)
                        {
                            <div class="value">@pProject.Vivo_geographicFocus.Dc_title[idiomaUsuario]</div> }
                        else
                        {
                            <div class="value">---</div>}
                    </div>
                    <div class="bloque">
                        <div class="label">@Html.Translate("NUMERO_INVESTIGADORES")</div>
                        @if (pProject.Roh_researchersNumber != null && pProject.Roh_researchersNumber.HasValue)
                        {
                            <div class="value">@pProject.Roh_researchersNumber</div> }
                        else
                        {
                            <div class="value">---</div>}
                    </div>
                </div>
                <div class="fila">
                    <div class="bloque">
                        <div class="label">@Html.Translate("FECHA_INICIO")</div>
                        @if (pProject.Vivo_start != null && pProject.Vivo_start.HasValue)
                        {
                            string anioInicio = pProject.Vivo_start.Value.Year.ToString();
                            string mesInicio = pProject.Vivo_start.Value.Month.ToString();
                            string diaInicio = pProject.Vivo_start.Value.Day.ToString();
                            string fechaInicio = diaInicio + "/" + mesInicio + "/" + anioInicio;

                            <div class="value">@fechaInicio</div>}
                    </div>
                    <div class="bloque">
                        <div class="label">@Html.Translate("FECHA_FIN")</div>
                        @if (pProject.Vivo_end != null && pProject.Vivo_end.HasValue)
                        {
                            string anioFin = pProject.Vivo_end.Value.Year.ToString();
                            string mesFin = pProject.Vivo_end.Value.Month.ToString();
                            string diaFin = pProject.Vivo_end.Value.Day.ToString();
                            string fechaFin = diaFin + "/" + mesFin + "/" + anioFin;
                            <div class="value">@fechaFin</div>}
                    </div>
                    @*<div class="bloque">
                            <div class="label">Estado</div>
                            <div class="value">---</div>
                        </div>*@
                </div>
            </div>
            <div class="list-wrap tags">
                <div class="label">@Html.Translate("TOPICS")</div>
                <ul>
                    @{ //TODO: Ñapa
                        int contadorCategorias = 0;
                        if (pProject.GNOSSID == "http://gnoss.com/items/Project_831011de-5eb7-4ccf-bdd5-16e8082fd4ee_f23b1d04-d1c1-403a-bb4e-8df64ad8ff03")
                        {
                            List<string> topicos = new List<string>();
                            topicos.Add("ZOOLOGY");
                            topicos.Add("IMMUNOLOGY");
                            topicos.Add("IMMUNOLOGY AND MICROBIOLOGY");
                            topicos.Add("VETERINARY");
                            topicos.Add("VETERINARY SCIENCES");
                            topicos.Add("BIOCHEMISTRY & MOLECULAR BIOLOGY");
                            topicos.Add("CELL BIOLOGY");
                            topicos.Add("ENDOCRINOLOGY & METABOLISM");
                            topicos.Add("SIN CLASIFICAR");
                            topicos.Add("PARASITOLOGY");

                            foreach (string cat in topicos)
                            {
                                contadorCategorias++;
                                if (contadorCategorias <= 3)
                                {
                                    <li>
                                        <a>
                                            <span class="texto">@cat</span>
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li class="ocultar" style="display: none;">
                                        <a>
                                            <span class="texto">@cat</span>
                                        </a>
                                    </li>
                                }
                            }
                        } }

                    @if (pProject.Roh_hasProjectClassification != null && pProject.Roh_hasProjectClassification.Count > 0)
                    {
                        foreach (ProjectClassification clasificacion in pProject.Roh_hasProjectClassification)
                        {
                            if (clasificacion != null && clasificacion.IdsRoh_projectClassificationNode != null && clasificacion.IdsRoh_projectClassificationNode.Count > 0)
                            {
                                foreach (string nodo in clasificacion.IdsRoh_projectClassificationNode)
                                {
                                    if (!string.IsNullOrEmpty(nodo))
                                    {
                                        <li>
                                            <a>
                                                <span class="texto">@nodo</span>
                                            </a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li>
                                            <a>
                                                <span class="texto">---</span>
                                            </a>
                                        </li>
                                    }
                                }
                            }
                            else
                            {
                                <li>
                                    <a>
                                        <span class="texto">---</span>
                                    </a>
                                </li>
                            }
                        }
                    }
                    else
                    {
                        if (pProject.GNOSSID != "http://gnoss.com/items/Project_831011de-5eb7-4ccf-bdd5-16e8082fd4ee_f23b1d04-d1c1-403a-bb4e-8df64ad8ff03")
                        {
                            <li>
                                <a>
                                    <span class="texto">---</span>
                                </a>
                            </li>
                        }
                    }
                </ul>
                @{ if (contadorCategorias > 3)
                    {
                        <p class="moreResults">
                            <a href="javascript: void(0);" class="ver-mas" style="display: flex;">@Html.Translate("VER_MAS")</a>
                            <a href="javascript: void(0);" class="ver-menos" style="display: none;">@Html.Translate("VER_MENOS")</a>
                        </p> } }
            </div>
        </div>

        <div class="contenido-ficha contenido-proyecto">
            <div class="tab-paneles-ficha">

                <div class="tabs">
                    <ul class="nav nav-tabs" id="navegacion-recurso" role="tablist">
                        <li class="nav-item" role="presentation">
                            <a class="nav-link active" id="participantes-tab" data-toggle="tab" href="#participantes-panel" role="tab" aria-controls="participantes-panel" aria-selected="true">
                                <div class="bloque">
                                    <div class="label">@Html.Translate("PARTICIPANTES")</div>
                                    <div class="data"></div>
                                </div>
                            </a>
                        </li>
                        <li class="nav-item" role="presentation">
                            <a class="nav-link" id="publicaciones-tab" data-toggle="tab" href="#publicaciones-panel" role="tab" aria-controls="publicaciones-panel" aria-selected="false">
                                <div class="bloque">
                                    <div class="label">@Html.Translate("PUBLICACIONES")</div>
                                    <div class="data"></div>
                                </div>
                            </a>
                        </li>
                        <li class="nav-item" role="presentation">
                            <a class="nav-link" id="temas-investigacion-tab" data-toggle="tab" href="#temas-investigacion-panel" role="tab" aria-controls="temas-investigacion-panel" aria-selected="false">
                                <div class="bloque">
                                    <div class="label">@Html.Translate("TOPICS")</div>
                                    <div class="data"></div>
                                </div>
                            </a>
                        </li>
                    </ul>
                </div>


                <div class="tab-content" id="paneles-recurso">
                    <div class="tab-pane fade show active" id="participantes-panel" role="tabpanel" aria-labelledby="referencias-tab">
                        <div class="row" id="contenedorBuscadorParticipantes">
                            <div class="col col-12 col-grafo mb-5">
                                <div class="wrapCol" id="graficaCytoscape" style="width: 1224px; height: 500px;"></div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="publicaciones-panel" role="tabpanel" aria-labelledby="publicaciones-tab">
                        <div class="row" id="contenedorBuscadorPublicaciones">
                            <div class="col col-12 col-section-title font-weight-bold">
                                <div class="wrapCol">
                                    <p></p>
                                </div>
                            </div>
                            <div class="col col-12 col-chart">
                                <div class="wrapCol">
                                    <div class="chart-wrap chart-publicaciones">
                                    </div>
                                </div>
                            </div>
                            <div class="col col-12 col-section-title font-weight-bold searcherTitle">
                                <div class="wrapCol">
                                    <p>@Html.Translate("LISTADO_PUBLICACIONES")</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="temas-investigacion-panel" role="tabpanel" aria-labelledby="temas-investigacion-tab">
                        <div class="row">
                            <div class="col col-12 col-section-title font-weight-bold">
                                <div class="wrapCol">
                                </div>
                            </div>
                            <div class="col col-12 col-chart">
                                <div class="wrapCol">
                                    <div class="chart-wrap chart-publicaciones-horizontal">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JAVASCRIPT -->
<script type="text/javascript">
    var depuracion = false; 

    //Funciones propias de la ficha

    // Datos cabeceras de las fichas.
    function CargarDatosCabeceras() {
        var url = "http://serviciosedma.gnoss.com/servicioexterno/Hercules/DatosFichaProyecto"
        if (depuracion) {
            url = "https://localhost:44367/Hercules/DatosFichaProyecto"
        }
        var arg = {};
        arg.pIdProyecto = "@pProject.GNOSSID";
        $.get(url, arg, function (data) {
            $("#participantes-tab div div.data").text(data["Participantes"]);
            $("#publicaciones-tab div div.data").text(data["Publicaciones"]);
            $("#temas-investigacion-tab div div.data").text(data["Categorias"]);
        });
    }

    // Datos gráfica colaboradores.
    function CargarGraficaColaboradores(idproyecto, parametros) {
        var url = "http://serviciosedma.gnoss.com/servicioexterno/Hercules/DatosGraficaRedColaboradores"
        if (depuracion) {
            url = "https://localhost:44367/Hercules/DatosGraficaRedColaboradores"
        }
        var arg = {};
        arg.pIdProyecto = idproyecto;
        arg.pParametros = parametros;
		$('#graficaCytoscape').empty();
        $.get(url, arg, function (data) {
            $('#graficaCytoscape').empty();

            var cy = window.cy = cytoscape({
                // Contenedor
                container: document.getElementById('graficaCytoscape'),
                // Layout
                layout: {
                    name: 'cose',
                    idealEdgeLength: 100,
                    nodeOverlap: 20,
                    refresh: 20,
                    padding: 30,
                    randomize: false,
                    componentSpacing: 100,
                    nodeRepulsion: 400000,
                    edgeElasticity: 100,
                    nestingFactor: 5,
                    gravity: 80,
                    numIter: 1000,
                    initialTemp: 200,
                    coolingFactor: 0.95,
                    minTemp: 1.0

                }, pan: { x: 350, y: 50 },
                // Estilos
                style: [{
                    "selector": "node",
                    "style": {

                        "width": "mapData(score, 0, 25, 30, 70)",
                        "height": "mapData(score, 0, 25, 30, 70)",
                        "content": "data(name)",
                        "font-size": "12px",
                        "font-family": 'Roboto',
                        "font-color": "#999999",
                        "background-color": "#c2c2c2",

                        "text-outline-width": "0px",

                        "overlay-padding": "6px",
                        "z-index": "10"
                    }
                }, {
                    "selector": "edge",
                    "style": {
                        "curve-style": "haystack",
                        "haystack-radius": "0.5",
                        "opacity": "0.4",
                        "line-color": "#E1E1E1",
                        "width": "5",
                        "overlay-padding": "1px",
                        "font-family": 'Arial Black',
                        "font-color": 'black'
                    }
                }],
                // Datos
                elements: data
            });
            cy.zoomingEnabled(false);

            var array = []
            var nodos = cy.nodes()

            //Quita el nombre de la publicación.
            array.push(nodos[0]._private.data.name);
            cy.nodes()[0]._private.data.name = "";

            cy.nodes()[0].style({
                'border-width': '2px',
                'border-color': 'black',
                'shape': 'circle'
            });

            var f = cy.nodes().length

            for (i = 1; i < cy.nodes().length; i++) { //starts loop
                array.push(nodos[i]._private.data.name);
                //cy.nodes()[i]._private.data.name="";
                cy.nodes()[i].style({
                    'background-color': 'white',
                    'background-image': 'https://cdn.iconscout.com/icon/free/png-256/user-1648810-1401302.png',
                    'background-fit': 'cover',
                    'border-width': '2px',
                    'border-color': 'rgb(4,184,209)',
                    'shape': 'circle'
                })
            };

            cy.on('mouseover', 'edges', function (event) {
                $('#numRelaciones').text('(' + event.target.id().split("~")[2] + ')');
            });

            cy.on('click', 'node', function (e) {
                e = e.target;
                var indice = cy.nodes().indexOf(e)
                if (e._private.data.name === "") {
                    e._private.data.name = array[indice]
                    //nodo proyect.
                    if (indice === 0) {
                        e.style('border-color', 'rgb(12,121,212)')
                    }
                    else {
                        e.style('border-color', 'rgb(4,184,209)')
                    }
                }
                else {
                    e._private.data.name = ""
                    if (indice == 0) e.style('border-color', 'black');
                    else e.style('border-color', 'grey');
                }
            })
        });
    }

    // Datos gráfica publicaciones.
    function CargarGraficaPublicaciones(idproyecto, parametros) {
		$('#chart-publicaciones').remove();
        var url = "http://serviciosedma.gnoss.com/servicioexterno/Hercules/DatosGraficaPublicaciones"
        if (depuracion) {
            url = "https://localhost:44367/Hercules/DatosGraficaPublicaciones"
        }
        var arg = {};
        arg.pIdProyecto = idproyecto;
        arg.pParametros = parametros;

        $.get(url, arg, function (data) {
            $('#chart-publicaciones').remove();
            $('div.chart-publicaciones').append($('<canvas id="chart-publicaciones" class="js-chart"></canvas>'));
            var ctx = document.getElementById('chart-publicaciones');
            var parent = ctx.parentElement;
            var height = parent.offsetHeight;
            ctx.setAttribute('height', 100);
            var myChart = new Chart(ctx, data);
        });
    }

    // Datos gráfica publicaciones horizontal.
    function CargarGraficaPublicacionesHorizontal(idproyecto, parametros) {
		$('#chart-publicaciones-horizontal').remove();
        var url = "http://serviciosedma.gnoss.com/servicioexterno/Hercules/DatosGraficaPublicacionesHorizontal"
        if (depuracion) {
            url = "https://localhost:44367/Hercules/DatosGraficaPublicacionesHorizontal"
        }
        var arg = {};
        arg.pIdProyecto = idproyecto;
        arg.pParametros = parametros;
        $.get(url, arg, function (data) {

            // Porcentajes en parte inferior.
            data.options.scales.x.ticks.callback = function (value) { return value + "%" }
            var altura = data.data.labels.length * 50;

            $('#chart-publicaciones-horizontal').remove();
            $('div.chart-publicaciones-horizontal').removeAttr("style");
            $('div.chart-publicaciones-horizontal').css("height", altura + 50);

            $('div.chart-publicaciones-horizontal').append($('<canvas id="chart-publicaciones-horizontal" class="js-chart" width="600" height="' + altura + '"></canvas>'));
            var ctx = document.getElementById('chart-publicaciones-horizontal');
            var parent = ctx.parentElement;
            var width = parent.offsetWidth;
            ctx.setAttribute('width', width);
            var height = parent.offsetHeight;
            ctx.setAttribute('height', height);
            var myChart = new Chart(ctx, data);
        });
    }

    // Comportamiento página proyecto
    var comportamientoPaginaProyecto = {
        tabActive: null,
        init: function () {
            CargarDatosCabeceras();
            this.config();
            $('#participantes-tab').click();
            return;
        },
        config: function () {
            var that = this;
            $('#participantes-tab').unbind().click(function (e) {
                e.preventDefault();
                that.tabActive = "participantes";
                //CargarGraficaColaboradores("@pProject.GNOSSID.Split('_')[1].ToUpper()", "");
                buscadorPersonalizado.init("@Html.Translate("INVESTIGADORES")", "#contenedorBuscadorParticipantes", "searchPersonasRelacionadasConProyecto=@pProject.GNOSSID.Split('_')[1].ToUpper()", null, "PestanyaActualID=@Html.Translate("ID_BUSQUEDA_PERSONAS")|rdf:type=person", "@Comunidad.Url", "@Comunidad.Key.ToString()");
            });
            $('#publicaciones-tab').unbind().click(function (e) {
                e.preventDefault();
                that.tabActive = "publicaciones";
                //CargarGraficaPublicaciones("@pProject.GNOSSID.Split('_')[1].ToUpper()", "");
                buscadorPersonalizado.init("@Html.Translate("PUBLICACIONES")", "#contenedorBuscadorPublicaciones", "searchDocumentosRelacionadosConProyecto=@pProject.GNOSSID.Split('_')[1].ToUpper()", "dct:issued", "PestanyaActualID=@Html.Translate("ID_BUSQUEDA_DOCUMENTOS")|rdf:type=document", "@Comunidad.Url", "@Comunidad.Key.ToString()");
            });
            $('#temas-investigacion-tab').unbind().click(function (e) {
                e.preventDefault();
                that.tabActive = "temas-investigacion";
                CargarGraficaPublicacionesHorizontal("@pProject.GNOSSID.Split('_')[1].ToUpper()", "");
                history.pushState('', 'New URL: ', ResetearURL());
            });
            return;
        }
    };

    $(function () {
        comportamientoPaginaProyecto.init();
    });

    // Acciones al llevar a cabo en rl filtrado
    function accionFiltrado() {
        if (comportamientoPaginaProyecto.tabActive == "participantes") {
            var parametros = ObtenerHash2();
            CargarGraficaColaboradores("@pProject.GNOSSID.Split('_')[1].ToUpper()", parametros);
        }
        else if (comportamientoPaginaProyecto.tabActive == "publicaciones") {
            var parametros = ObtenerHash2();
            CargarGraficaPublicaciones("@pProject.GNOSSID.Split('_')[1].ToUpper()", parametros);
        }
    }


</script>

@functions{ public class RDFPropertyAttribute : Attribute
    {
        public RDFPropertyAttribute(string pRDFA)
        {
            mRDFA = pRDFA;
        }
        protected string mRDFA;
        public string RDFProperty
        {
            get { return mRDFA; }
        }
    }

    [AttributeUsage(AttributeTargets.All, AllowMultiple = true)]
    public class LABELAttribute : Attribute
    {
        private GnossOCBase.LanguageEnum IdiomaDefecto = GnossOCBase.LanguageEnum.es;
        private GnossOCBase.LanguageEnum midioma;
        private string mlabel;
        public LABELAttribute(GnossOCBase.LanguageEnum idioma, string label)
        {
            mlabel = label;
            midioma = idioma;
        }
        public string LABEL(GnossOCBase.LanguageEnum pLang)
        {
            if (midioma.Equals(pLang))
            {
                return mlabel;
            }
            return "";
        }
    }

    public class GnossOCBase
    {
        public enum LanguageEnum
        {
            es,
            en,
            pt,
            ca,
            eu,
            gl,
            fr,
            de,
            it,
        }
        internal List<string> prefList = new List<string>();
        internal string mGNOSSID;
        internal string mURL;
        internal Guid resourceID;
        internal Guid articleID;
        private static List<string> NoEnIdiomas = new List<string> { "N�o", "Non", "Ez", "Nein", "No" };
        public List<string> tagList = new List<string>();
        public GnossOCBase()
        {
            prefList.Add("xmlns:foaf=\"http://xmlns.com/foaf/0.1/\"");
            prefList.Add("xmlns:vivo=\"http://vivoweb.org/ontology/core#\"");
            prefList.Add("xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"");
            prefList.Add("xmlns:owl=\"http://www.w3.org/2002/07/owl#\"");
            prefList.Add("xmlns:bibo=\"http://purl.org/ontology/bibo/\"");
            prefList.Add("xmlns:roh=\"http://w3id.org/roh/\"");
            prefList.Add("xmlns:dct=\"http://purl.org/dc/terms/\"");
            prefList.Add("xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"");
            prefList.Add("xmlns:xsd=\"http://www.w3.org/2001/XMLSchema#\"");
            prefList.Add("xmlns:obo=\"http://purl.obolibrary.org/obo/\"");
            prefList.Add("xmlns:vcard=\"https://www.w3.org/2006/vcard/ns#\"");
            prefList.Add("xmlns:dc=\"http://purl.org/dc/elements/1.1/\"");
            prefList.Add("xmlns:gn=\"http://www.geonames.org/ontology#\"");

            this.resourceID = Guid.NewGuid();
            this.articleID = Guid.NewGuid();
        }

        public string GNOSSID
        {
            get { return mGNOSSID; }
            set
            {
                this.mGNOSSID = value;
                var GnossIDSplit = this.mGNOSSID.Split('_');
                Guid nuevoResource = Guid.Parse(GnossIDSplit[GnossIDSplit.Count() - 2]);
                Guid nuevoArticle = Guid.Parse(GnossIDSplit.Last());
                if (!this.ResourceID.Equals(nuevoResource))
                {
                    this.resourceID = nuevoResource;
                }
                if (!this.ArticleID.Equals(nuevoArticle))
                {
                    this.articleID = nuevoArticle;
                }
            }
        }
        public string URL
        {
            get { return mURL; }
        }

        public Guid ResourceID
        {
            get { return resourceID; }
            set
            {
                this.resourceID = value;
                string primeraParte = this.mGNOSSID.Substring(0, this.mGNOSSID.LastIndexOf('/') + 1);
                string antiguoGuid = this.mGNOSSID.Substring(this.mGNOSSID.LastIndexOf('/') + 1, this.mGNOSSID.LastIndexOf('_'));
                string ultimaParte = this.mGNOSSID.Substring(this.mGNOSSID.LastIndexOf('_') + 1);
                if (!antiguoGuid.Equals(this.resourceID.ToString()))
                {
                    this.mGNOSSID = $"{primeraParte}{this.resourceID.ToString()}{ultimaParte}";
                }
            }
        }

        public Guid ArticleID
        {
            get { return articleID; }
            set
            {
                this.articleID = value;
                string primeraParte = this.mGNOSSID.Substring(0, this.mGNOSSID.LastIndexOf('_') + 1);
                string antiguoGuid = this.mGNOSSID.Substring(this.mGNOSSID.LastIndexOf('_') + 1);
                if (!antiguoGuid.Equals(this.articleID.ToString()))
                {
                    this.mGNOSSID = $"{primeraParte}{this.articleID.ToString()}";
                }
            }
        }

        public static string GetPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            if (pProperty != null && pProperty.PropertyValues.Count > 0)
            {
                return pProperty.PropertyValues[0].Value;
            }
            return "";
        }

        public static int? GetNumberIntPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            if (pProperty != null && pProperty.PropertyValues.Count > 0 && !string.IsNullOrEmpty(pProperty.PropertyValues[0].Value))
            {
                return int.Parse(pProperty.PropertyValues[0].Value);
            }
            return 0;
        }

        public static int? GetNumberIntPropertyMultipleValueSemCms(SemanticPropertyModel.PropertyValue pProperty)
        {
            if (pProperty != null && !string.IsNullOrEmpty(pProperty.Value))
            {
                return int.Parse(pProperty.Value);
            }
            return 0;
        }

        public static float? GetNumberFloatPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            if (pProperty != null && pProperty.PropertyValues.Count > 0 && !string.IsNullOrEmpty(pProperty.PropertyValues[0].Value))
            {
                return float.Parse(pProperty.PropertyValues[0].Value.Replace('.', ','));
            }
            return 0;
        }

        public static DateTime? GetDateValuePropertySemCms(SemanticPropertyModel pProperty)
        {
            string stringDate = GetPropertyValueSemCms(pProperty);
            if (!string.IsNullOrEmpty(stringDate))
            {
                int year = 0;
                int month = 0;
                int day = 0;
                if (stringDate.Contains('/'))
                {
                    day = int.Parse(stringDate.Split('/')[0]);
                    month = int.Parse(stringDate.Split('/')[1]);
                    year = int.Parse(stringDate.Split('/')[2].Split(' ')[0]);
                }
                else
                {
                    year = int.Parse(stringDate.Substring(0, 4));
                    month = int.Parse(stringDate.Substring(4, 2));
                    day = int.Parse(stringDate.Substring(6, 2));
                }
                if (stringDate.Length == 14)
                {
                    if (month == 0 || day == 0)
                    {
                        return new DateTime(year);
                    }
                    else
                    {
                        int hour = int.Parse(stringDate.Substring(8, 2));
                        int minute = int.Parse(stringDate.Substring(10, 2));
                        int second = int.Parse(stringDate.Substring(12, 2));
                        return new DateTime(year, month, day, hour, minute, second);
                    }
                }
                else
                {
                    return new DateTime(year, month, day);
                }
            }
            return null;
        }

        public static bool GetBooleanPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            bool resultado = false;
            if (pProperty != null && pProperty.PropertyValues.Count > 0 && !string.IsNullOrEmpty(pProperty.PropertyValues[0].Value))
            {
                if (!bool.TryParse(pProperty.PropertyValues[0].Value, out resultado))
                {
                    resultado = !NoEnIdiomas.Contains(pProperty.PropertyValues[0].Value);
                }
            }
            return resultado;
        }

        internal virtual void GetProperties()
        {
        }

        internal virtual void GetEntities()
        {
        }

        internal string GetExtension(string file)
        {
            return file.Substring(file.LastIndexOf('.'));
        }


        public string GetPropertyURI(string nombrePropiedad)
        {
            Type type = this.GetType();
            PropertyInfo mInfo = type.GetProperty(nombrePropiedad);
            if (mInfo != null)
            {
                Attribute attr = Attribute.GetCustomAttribute(mInfo, typeof(RDFPropertyAttribute));
                if (attr != null)
                {
                    return ((RDFPropertyAttribute)attr).RDFProperty;
                }
            }
            return "";
        }


        public string GetLabel(string nombrePropiedad, LanguageEnum pLang)
        {
            Type type = this.GetType();
            PropertyInfo mInfo = type.GetProperty(nombrePropiedad);

            if (mInfo != null)
            {
                Attribute[] attr = Attribute.GetCustomAttributes(mInfo, typeof(LABELAttribute));
                {
                    foreach (Attribute atributo in attr)
                    {
                        if (atributo != null)
                        {
                            if (!((LABELAttribute)atributo).LABEL(pLang).Equals(""))
                            {
                                return ((LABELAttribute)atributo).LABEL(pLang);
                            }
                        }
                    }
                }
            }

            return "";
        }

        public int GetID() { return 0; }
    }

    public class Project : GnossOCBase
    {

        public Project() : base() { }

        public Project(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            SemanticPropertyModel propRoh_isSupportedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isSupportedBy");
            if (propRoh_isSupportedBy != null && propRoh_isSupportedBy.PropertyValues.Count > 0)
            {
                this.Roh_isSupportedBy = new Funding(propRoh_isSupportedBy.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_grantedBy = new List<Organization>();
            SemanticPropertyModel propRoh_grantedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/grantedBy");
            if (propRoh_grantedBy != null && propRoh_grantedBy.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_grantedBy.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        Organization roh_grantedBy = new Organization(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_grantedBy.Add(roh_grantedBy);
                    }
                }
            }
            this.Roh_hasProjectClassification = new List<ProjectClassification>();
            SemanticPropertyModel propRoh_hasProjectClassification = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasProjectClassification");
            if (propRoh_hasProjectClassification != null && propRoh_hasProjectClassification.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasProjectClassification.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        ProjectClassification roh_hasProjectClassification = new ProjectClassification(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_hasProjectClassification.Add(roh_hasProjectClassification);
                    }
                }
            }
            this.Roh_hasResultsProjectClassification = new List<ProjectClassification>();
            SemanticPropertyModel propRoh_hasResultsProjectClassification = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasResultsProjectClassification");
            if (propRoh_hasResultsProjectClassification != null && propRoh_hasResultsProjectClassification.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasResultsProjectClassification.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        ProjectClassification roh_hasResultsProjectClassification = new ProjectClassification(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_hasResultsProjectClassification.Add(roh_hasResultsProjectClassification);
                    }
                }
            }
            this.Roh_participates = new List<Organization>();
            SemanticPropertyModel propRoh_participates = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/participates");
            if (propRoh_participates != null && propRoh_participates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_participates.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        Organization roh_participates = new Organization(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_participates.Add(roh_participates);
                    }
                }
            }
            SemanticPropertyModel propVivo_geographicFocus = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#geographicFocus");
            if (propVivo_geographicFocus != null && propVivo_geographicFocus.PropertyValues.Count > 0)
            {
                this.Vivo_geographicFocus = new GeographicRegion(propVivo_geographicFocus.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propRoh_conductedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/conductedBy");
            if (propRoh_conductedBy != null && propRoh_conductedBy.PropertyValues.Count > 0)
            {
                this.Roh_conductedBy = new Organization(propRoh_conductedBy.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Vivo_relates = new List<BFO_0000023>();
            SemanticPropertyModel propVivo_relates = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#relates");
            if (propVivo_relates != null && propVivo_relates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_relates.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        BFO_0000023 vivo_relates = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Vivo_relates.Add(vivo_relates);
                    }
                }
            }
            SemanticPropertyModel propRoh_modality = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/modality");
            if (propRoh_modality != null && propRoh_modality.PropertyValues.Count > 0)
            {
                this.Roh_modality = new Modality(propRoh_modality.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_relevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/relevantResults"));
            this.Roh_peopleYearNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/peopleYearNumber"));
            this.Roh_durationMonths = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationMonths"));
            this.Roh_geographicFocusOther = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/geographicFocusOther"));
            this.Roh_researchersNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/researchersNumber"));
            this.Roh_durationDays = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationDays"));
            this.Vivo_start = GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#start"));
            this.Roh_durationYears = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationYears"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Vivo_end = GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#end"));
            this.Vivo_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#description"));
            this.Roh_monetaryAmount = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/monetaryAmount"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public Project(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propRoh_isSupportedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isSupportedBy");
            if (propRoh_isSupportedBy != null && propRoh_isSupportedBy.PropertyValues.Count > 0)
            {
                this.Roh_isSupportedBy = new Funding(propRoh_isSupportedBy.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_grantedBy = new List<Organization>();
            SemanticPropertyModel propRoh_grantedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/grantedBy");
            if (propRoh_grantedBy != null && propRoh_grantedBy.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_grantedBy.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        Organization roh_grantedBy = new Organization(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_grantedBy.Add(roh_grantedBy);
                    }
                }
            }
            this.Roh_hasProjectClassification = new List<ProjectClassification>();
            SemanticPropertyModel propRoh_hasProjectClassification = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasProjectClassification");
            if (propRoh_hasProjectClassification != null && propRoh_hasProjectClassification.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasProjectClassification.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        ProjectClassification roh_hasProjectClassification = new ProjectClassification(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_hasProjectClassification.Add(roh_hasProjectClassification);
                    }
                }
            }
            this.Roh_hasResultsProjectClassification = new List<ProjectClassification>();
            SemanticPropertyModel propRoh_hasResultsProjectClassification = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasResultsProjectClassification");
            if (propRoh_hasResultsProjectClassification != null && propRoh_hasResultsProjectClassification.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasResultsProjectClassification.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        ProjectClassification roh_hasResultsProjectClassification = new ProjectClassification(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_hasResultsProjectClassification.Add(roh_hasResultsProjectClassification);
                    }
                }
            }
            this.Roh_participates = new List<Organization>();
            SemanticPropertyModel propRoh_participates = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/participates");
            if (propRoh_participates != null && propRoh_participates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_participates.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        Organization roh_participates = new Organization(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_participates.Add(roh_participates);
                    }
                }
            }
            SemanticPropertyModel propVivo_geographicFocus = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#geographicFocus");
            if (propVivo_geographicFocus != null && propVivo_geographicFocus.PropertyValues.Count > 0)
            {
                this.Vivo_geographicFocus = new GeographicRegion(propVivo_geographicFocus.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propRoh_conductedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/conductedBy");
            if (propRoh_conductedBy != null && propRoh_conductedBy.PropertyValues.Count > 0)
            {
                this.Roh_conductedBy = new Organization(propRoh_conductedBy.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Vivo_relates = new List<BFO_0000023>();
            SemanticPropertyModel propVivo_relates = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#relates");
            if (propVivo_relates != null && propVivo_relates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_relates.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        BFO_0000023 vivo_relates = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Vivo_relates.Add(vivo_relates);
                    }
                }
            }
            SemanticPropertyModel propRoh_modality = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/modality");
            if (propRoh_modality != null && propRoh_modality.PropertyValues.Count > 0)
            {
                this.Roh_modality = new Modality(propRoh_modality.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_relevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/relevantResults"));
            this.Roh_peopleYearNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/peopleYearNumber"));
            this.Roh_durationMonths = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationMonths"));
            this.Roh_geographicFocusOther = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/geographicFocusOther"));
            this.Roh_researchersNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/researchersNumber"));
            this.Roh_durationDays = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationDays"));
            this.Vivo_start = GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#start"));
            this.Roh_durationYears = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationYears"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Vivo_end = GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#end"));
            this.Vivo_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#description"));
            this.Roh_monetaryAmount = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/monetaryAmount"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public virtual string RdfType { get { return "http://vivoweb.org/ontology/core#Project"; } }
        public virtual string RdfsLabel { get { return "http://vivoweb.org/ontology/core#Project"; } }
        [LABEL(LanguageEnum.es, "Financiación")]
        [RDFProperty("http://w3id.org/roh/isSupportedBy")]
        public Funding Roh_isSupportedBy { get; set; }

        [LABEL(LanguageEnum.es, "Entidad/es financiadora/s")]
        [RDFProperty("http://w3id.org/roh/grantedBy")]
        public List<Organization> Roh_grantedBy { get; set; }
        public List<string> IdsRoh_grantedBy { get; set; }

        [LABEL(LanguageEnum.es, "Clasificación del proyecto")]
        [RDFProperty("http://w3id.org/roh/hasProjectClassification")]
        public List<ProjectClassification> Roh_hasProjectClassification { get; set; }

        [LABEL(LanguageEnum.es, "Resultados de la clasificación del proyecto")]
        [RDFProperty("http://w3id.org/roh/hasResultsProjectClassification")]
        public List<ProjectClassification> Roh_hasResultsProjectClassification { get; set; }

        [LABEL(LanguageEnum.es, "Entidad/es participante/s")]
        [RDFProperty("http://w3id.org/roh/participates")]
        public List<Organization> Roh_participates { get; set; }
        public List<string> IdsRoh_participates { get; set; }

        [LABEL(LanguageEnum.es, "Ámbito geográfico")]
        [RDFProperty("http://vivoweb.org/ontology/core#geographicFocus")]
        public GeographicRegion Vivo_geographicFocus { get; set; }
        public string IdVivo_geographicFocus { get; set; }

        [LABEL(LanguageEnum.es, "Entidad de realización")]
        [RDFProperty("http://w3id.org/roh/conductedBy")]
        public Organization Roh_conductedBy { get; set; }
        public string IdRoh_conductedBy { get; set; }

        [LABEL(LanguageEnum.es, "Relacionado con")]
        [RDFProperty("http://vivoweb.org/ontology/core#relates")]
        public List<BFO_0000023> Vivo_relates { get; set; }

        [LABEL(LanguageEnum.es, "Modalidad de proyecto")]
        [RDFProperty("http://w3id.org/roh/modality")]
        public Modality Roh_modality { get; set; }
        public string IdRoh_modality { get; set; }

        [LABEL(LanguageEnum.es, "Resultados relevantes")]
        [RDFProperty("http://w3id.org/roh/relevantResults")]
        public string Roh_relevantResults { get; set; }

        [LABEL(LanguageEnum.es, "Nº de personas/año")]
        [RDFProperty("http://w3id.org/roh/peopleYearNumber")]
        public int? Roh_peopleYearNumber { get; set; }

        [LABEL(LanguageEnum.es, "Duración (meses)")]
        [RDFProperty("http://w3id.org/roh/durationMonths")]
        public string Roh_durationMonths { get; set; }

        [LABEL(LanguageEnum.es, "Ámbito geográfico, otros")]
        [RDFProperty("http://w3id.org/roh/geographicFocusOther")]
        public string Roh_geographicFocusOther { get; set; }

        [LABEL(LanguageEnum.es, "Nº de investigadores/as")]
        [RDFProperty("http://w3id.org/roh/researchersNumber")]
        public int? Roh_researchersNumber { get; set; }

        [LABEL(LanguageEnum.es, "Duración (días)")]
        [RDFProperty("http://w3id.org/roh/durationDays")]
        public string Roh_durationDays { get; set; }

        [LABEL(LanguageEnum.es, "Fecha de inicio")]
        [RDFProperty("http://vivoweb.org/ontology/core#start")]
        public DateTime? Vivo_start { get; set; }

        [LABEL(LanguageEnum.es, "Duración (años)")]
        [RDFProperty("http://w3id.org/roh/durationYears")]
        public string Roh_durationYears { get; set; }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://w3id.org/roh/crisIdentifier")]
        public string Roh_crisIdentifier { get; set; }

        [LABEL(LanguageEnum.es, "Fecha de finalización")]
        [RDFProperty("http://vivoweb.org/ontology/core#end")]
        public DateTime? Vivo_end { get; set; }

        [LABEL(LanguageEnum.es, "Descripción del proyecto")]
        [RDFProperty("http://vivoweb.org/ontology/core#description")]
        public string Vivo_description { get; set; }

        [LABEL(LanguageEnum.es, "Cuantía total")]
        [RDFProperty("http://w3id.org/roh/monetaryAmount")]
        public float? Roh_monetaryAmount { get; set; }

        [LABEL(LanguageEnum.es, "Nombre del proyecto")]
        [RDFProperty("http://w3id.org/roh/title")]
        public string Roh_title { get; set; }
    }

    public class GeographicRegion : GnossOCBase
    {

        public GeographicRegion() : base() { }

        public GeographicRegion(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

        }

        public virtual string RdfType { get { return "http://vivoweb.org/ontology/core#GeographicRegion"; } }
        public virtual string RdfsLabel { get { return "http://vivoweb.org/ontology/core#GeographicRegion"; } }
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [LABEL(LanguageEnum.es, "Ámbito geográfico")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }
    }

    public class Modality : GnossOCBase
    {

        public Modality() : base() { }

        public Modality(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/Modality"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/Modality"; } }
        [LABEL(LanguageEnum.es, "Modalidad")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }

        [LABEL(LanguageEnum.es, "Identificador de modalidad")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }
    }

    public class ParticipationType : GnossOCBase
    {

        public ParticipationType() : base() { }

        public ParticipationType(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/ParticipationType"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/ParticipationType"; } }
        [LABEL(LanguageEnum.es, "Tipo de participación")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }

        [LABEL(LanguageEnum.es, "Identificador tipo de participación")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }
    }

    public class BFO_0000023 : GnossOCBase
    {

        public BFO_0000023() : base() { }

        public BFO_0000023(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propRoh_dedicationRegime = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/dedicationRegime");
            if (propRoh_dedicationRegime != null && propRoh_dedicationRegime.PropertyValues.Count > 0)
            {
                //this.Roh_dedicationRegime = new DedicationRegime(propRoh_dedicationRegime.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propRoh_participationType = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/participationType");
            if (propRoh_participationType != null && propRoh_participationType.PropertyValues.Count > 0)
            {
                this.Roh_participationType = new ParticipationType(propRoh_participationType.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_participationTypeOther = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/participationTypeOther"));
            this.Roh_contributionGradeOther = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/contributionGradeOther"));
            this.Roh_applicantContribution = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/applicantContribution"));
            SemanticPropertyModel propRoh_roleOf = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/roleOf");
            if (propRoh_roleOf != null && propRoh_roleOf.PropertyValues.Count > 0)
            {
                this.Roh_roleOf = new Person(propRoh_roleOf.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_order = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/order"));
        }

        public virtual string RdfType { get { return "http://purl.obolibrary.org/obo/BFO_0000023"; } }
        public virtual string RdfsLabel { get { return "http://purl.obolibrary.org/obo/BFO_0000023"; } }

        [LABEL(LanguageEnum.es, "Grado de contribución")]
        [RDFProperty("http://w3id.org/roh/contributionGrade")]
        public object Roh_contributionGrade { get; set; }
        public string IdRoh_contributionGrade { get; set; }

        [LABEL(LanguageEnum.es, "Régimen de dedicación")]
        [RDFProperty("http://w3id.org/roh/dedicationRegime")]
        //public DedicationRegime Roh_dedicationRegime { get; set; }
        public string IdRoh_dedicationRegime { get; set; }

        [LABEL(LanguageEnum.es, "Tipo de participación")]
        [RDFProperty("http://w3id.org/roh/participationType")]
        public ParticipationType Roh_participationType { get; set; }
        public string IdRoh_participationType { get; set; }

        [LABEL(LanguageEnum.es, "Tipo de participación, otros")]
        [RDFProperty("http://w3id.org/roh/participationTypeOther")]
        public string Roh_participationTypeOther { get; set; }

        [LABEL(LanguageEnum.es, "Grado de contribución, otros")]
        [RDFProperty("http://w3id.org/roh/contributionGradeOther")]
        public string Roh_contributionGradeOther { get; set; }

        [LABEL(LanguageEnum.es, "Aportación del solicitante")]
        [RDFProperty("http://w3id.org/roh/applicantContribution")]
        public string Roh_applicantContribution { get; set; }

        [LABEL(LanguageEnum.es, "Rol de")]
        [RDFProperty("http://w3id.org/roh/roleOf")]
        public Person Roh_roleOf { get; set; }
        public string IdRoh_roleOf { get; set; }

        [LABEL(LanguageEnum.es, "Posición")]
        [RDFProperty("http://w3id.org/roh/order")]
        public string Roh_order { get; set; }
    }

    public class Person : GnossOCBase
    {

        public Person() : base() { }

        public Person(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            SemanticPropertyModel propRoh_hasRole = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasRole");
            if (propRoh_hasRole != null && propRoh_hasRole.PropertyValues.Count > 0)
            {
                this.Roh_hasRole = new Organization(propRoh_hasRole.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_ORCID = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/ORCID"));
            SemanticPropertyModel propFoaf_nick = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/nick");
            this.Foaf_nick = new List<string>();
            if (propFoaf_nick != null && propFoaf_nick.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_nick.PropertyValues)
                {
                    this.Foaf_nick.Add(propValue.Value);
                }
            }
            this.Foaf_firstName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/firstName"));
            this.Foaf_name = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/name"));
            this.Foaf_lastName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/lastName"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
        }

        public Person(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propRoh_hasRole = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasRole");
            if (propRoh_hasRole != null && propRoh_hasRole.PropertyValues.Count > 0)
            {
                this.Roh_hasRole = new Organization(propRoh_hasRole.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_ORCID = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/ORCID"));
            SemanticPropertyModel propFoaf_nick = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/nick");
            this.Foaf_nick = new List<string>();
            if (propFoaf_nick != null && propFoaf_nick.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_nick.PropertyValues)
                {
                    this.Foaf_nick.Add(propValue.Value);
                }
            }
            this.Foaf_firstName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/firstName"));
            this.Foaf_name = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/name"));
            this.Foaf_lastName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/lastName"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
        }

        public virtual string RdfType { get { return "http://xmlns.com/foaf/0.1/Person"; } }
        public virtual string RdfsLabel { get { return "http://xmlns.com/foaf/0.1/Person"; } }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://w3id.org/roh/crisIdentifier")]
        public string Roh_crisIdentifier { get; set; }

        [LABEL(LanguageEnum.es, "Tiene rol")]
        [RDFProperty("http://w3id.org/roh/hasRole")]
        public Organization Roh_hasRole { get; set; }
        public string IdRoh_hasRole { get; set; }

        [LABEL(LanguageEnum.es, "ORCID")]
        [RDFProperty("http://w3id.org/roh/ORCID")]
        public string Roh_ORCID { get; set; }

        [LABEL(LanguageEnum.es, "Firma")]
        [RDFProperty("http://xmlns.com/foaf/0.1/nick")]
        public List<string> Foaf_nick { get; set; }

        [LABEL(LanguageEnum.es, "Nombre")]
        [RDFProperty("http://xmlns.com/foaf/0.1/firstName")]
        public string Foaf_firstName { get; set; }

        [LABEL(LanguageEnum.es, "Nombre completo")]
        [RDFProperty("http://xmlns.com/foaf/0.1/name")]
        public string Foaf_name { get; set; }

        [LABEL(LanguageEnum.es, "Apellidos")]
        [RDFProperty("http://xmlns.com/foaf/0.1/lastName")]
        public string Foaf_lastName { get; set; }
    }

    public class ProjectClassification : GnossOCBase
    {

        public ProjectClassification() : base() { }

        public ProjectClassification(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            //this.Roh_projectClassificationNode = new List<Concept>();
            SemanticPropertyModel propRoh_projectClassificationNode = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/projectClassificationNode");
            if (propRoh_projectClassificationNode != null && propRoh_projectClassificationNode.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_projectClassificationNode.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        //Concept roh_projectClassificationNode = new Concept(propValue.RelatedEntity, idiomaUsuario);
                        //this.Roh_projectClassificationNode.Add(roh_projectClassificationNode);
                    }
                }
            }
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/ProjectClassification"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/ProjectClassification"; } }

        [LABEL(LanguageEnum.es, "Nodo de clasificación del proyecto")]
        [RDFProperty("http://w3id.org/roh/projectClassificationNode")]
        //public List<Concept> Roh_projectClassificationNode { get; set; }
        public List<string> IdsRoh_projectClassificationNode { get; set; }
    }

    public class Funding : GnossOCBase
    {

        public Funding() : base() { }

        public Funding(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Roh_grantsPercentage = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/grantsPercentage"));
            this.Vivo_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#identifier"));
            this.Roh_mixedPercentage = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/mixedPercentage"));
            this.Roh_creditPercentage = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/creditPercentage"));
            this.Vivo_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#description"));
            this.Roh_monetaryAmount = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/monetaryAmount"));
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/Funding"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/Funding"; } }

        [LABEL(LanguageEnum.es, "Porcentaje en subvención")]
        [RDFProperty("http://w3id.org/roh/grantsPercentage")]
        public float? Roh_grantsPercentage { get; set; }

        [LABEL(LanguageEnum.es, "Cód. según financiadora")]
        [RDFProperty("http://vivoweb.org/ontology/core#identifier")]
        public string Vivo_identifier { get; set; }

        [LABEL(LanguageEnum.es, "Porcentaje mixto")]
        [RDFProperty("http://w3id.org/roh/mixedPercentage")]
        public float? Roh_mixedPercentage { get; set; }

        [LABEL(LanguageEnum.es, "Porcentaje en crédito")]
        [RDFProperty("http://w3id.org/roh/creditPercentage")]
        public float? Roh_creditPercentage { get; set; }

        [LABEL(LanguageEnum.es, "Descripción del programa")]
        [RDFProperty("http://vivoweb.org/ontology/core#description")]
        public string Vivo_description { get; set; }

        [LABEL(LanguageEnum.es, "Cuantía del programa")]
        [RDFProperty("http://w3id.org/roh/monetaryAmount")]
        public float? Roh_monetaryAmount { get; set; }
    }

    public class Organization : GnossOCBase
    {

        public Organization() : base() { }

        public Organization(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            SemanticPropertyModel propVcard_hasAddress = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasAddress");
            if (propVcard_hasAddress != null && propVcard_hasAddress.PropertyValues.Count > 0)
            {
                this.Vcard_hasAddress = new Address(propVcard_hasAddress.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propDc_type = pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/type");
            if (propDc_type != null && propDc_type.PropertyValues.Count > 0)
            {
                this.Dc_type = new OrganizationType(propDc_type.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Roh_otherTypeMoreInfo = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/otherTypeMoreInfo"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public Organization(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propVcard_hasAddress = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasAddress");
            if (propVcard_hasAddress != null && propVcard_hasAddress.PropertyValues.Count > 0)
            {
                this.Vcard_hasAddress = new Address(propVcard_hasAddress.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propDc_type = pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/type");
            if (propDc_type != null && propDc_type.PropertyValues.Count > 0)
            {
                this.Dc_type = new OrganizationType(propDc_type.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Roh_otherTypeMoreInfo = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/otherTypeMoreInfo"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public virtual string RdfType { get { return "http://xmlns.com/foaf/0.1/Organization"; } }
        public virtual string RdfsLabel { get { return "http://xmlns.com/foaf/0.1/Organization"; } }
        [LABEL(LanguageEnum.es, "Dirección")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#hasAddress")]
        public Address Vcard_hasAddress { get; set; }

        [LABEL(LanguageEnum.es, "Tipo de entidad")]
        [RDFProperty("http://purl.org/dc/elements/1.1/type")]
        public OrganizationType Dc_type { get; set; }
        public string IdDc_type { get; set; }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://w3id.org/roh/crisIdentifier")]
        public string Roh_crisIdentifier { get; set; }

        [LABEL(LanguageEnum.es, "Tipo de entidad, otros")]
        [RDFProperty("http://w3id.org/roh/otherTypeMoreInfo")]
        public string Roh_otherTypeMoreInfo { get; set; }

        [LABEL(LanguageEnum.es, "Nombre")]
        [RDFProperty("http://w3id.org/roh/title")]
        public string Roh_title { get; set; }
    }

    public class Address : GnossOCBase
    {

        public Address() : base() { }

        public Address(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propVcard_hasRegion = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasRegion");
            if (propVcard_hasRegion != null && propVcard_hasRegion.PropertyValues.Count > 0)
            {
                this.Vcard_hasRegion = new Feature(propVcard_hasRegion.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propVcard_hasCountryName = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasCountryName");
            if (propVcard_hasCountryName != null && propVcard_hasCountryName.PropertyValues.Count > 0)
            {
                this.Vcard_hasCountryName = new Feature(propVcard_hasCountryName.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Vcard_locality = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#locality"));
        }

        public virtual string RdfType { get { return "https://www.w3.org/2006/vcard/ns#Address"; } }
        public virtual string RdfsLabel { get { return "https://www.w3.org/2006/vcard/ns#Address"; } }

        [LABEL(LanguageEnum.es, "C. Autón./Reg. entidad")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#hasRegion")]
        public Feature Vcard_hasRegion { get; set; }
        public string IdVcard_hasRegion { get; set; }

        [LABEL(LanguageEnum.es, "País entidad")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#hasCountryName")]
        public Feature Vcard_hasCountryName { get; set; }
        public string IdVcard_hasCountryName { get; set; }

        [LABEL(LanguageEnum.es, "Ciudad entidad")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#locality")]
        public string Vcard_locality { get; set; }
    }

    public class Feature : GnossOCBase
    {

        public Feature() : base() { }

        public Feature(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propGn_parentFeature = pSemCmsModel.GetPropertyByPath("http://www.geonames.org/ontology#parentFeature");
            if (propGn_parentFeature != null && propGn_parentFeature.PropertyValues.Count > 0)
            {
                this.Gn_parentFeature = new Feature(propGn_parentFeature.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Gn_name = new Dictionary<LanguageEnum, string>();
            this.Gn_name.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://www.geonames.org/ontology#name")));

            this.Gn_featureCode = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://www.geonames.org/ontology#featureCode"));
        }

        public virtual string RdfType { get { return "http://www.geonames.org/ontology#Feature"; } }
        public virtual string RdfsLabel { get { return "http://www.geonames.org/ontology#Feature"; } }
        [LABEL(LanguageEnum.es, "Rasgo padre")]
        [RDFProperty("http://www.geonames.org/ontology#parentFeature")]
        public Feature Gn_parentFeature { get; set; }
        public string IdGn_parentFeature { get; set; }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [LABEL(LanguageEnum.es, "Nombre")]
        [RDFProperty("http://www.geonames.org/ontology#name")]
        public Dictionary<LanguageEnum, string> Gn_name { get; set; }

        [LABEL(LanguageEnum.es, "Código de rasgo")]
        [RDFProperty("http://www.geonames.org/ontology#featureCode")]
        public string Gn_featureCode { get; set; }
    }

    public class OrganizationType : GnossOCBase
    {

        public OrganizationType() : base() { }

        public OrganizationType(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

        }

        public virtual string RdfType { get { return "http://w3id.org/roh/OrganizationType"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/OrganizationType"; } }
        [LABEL(LanguageEnum.es, "Identificador del tipo de entidad")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [LABEL(LanguageEnum.es, "Tipo de entidad")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }
    } }
