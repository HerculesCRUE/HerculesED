@*[security|||project|||hercules]*@
@using Es.Riam.Gnoss.Web.MVC.Models
@using Es.Riam.Gnoss.Web.MVC.Controles.Helper
@using Es.Riam.Gnoss.Web.MVC.Models.ViewModels
@using Es.Riam.Gnoss.Web.MVC.Models.Administracion
@using Es.Riam.Gnoss.AD.ServiciosGenerales
@using Es.Riam.Gnoss.Web.MVC.Controllers
@using Es.Riam.Gnoss.Web.MVC.Controllers.Administracion
@using Es.Riam.Gnoss.Web.Controles
@using Newtonsoft.Json
@using System.Reflection;
@model ResourceViewModel
@{ ResourceModel FichaDocumento = Model.Resource;
    CommunityModel Comunidad = Html.GetComunidad();
    UserIdentityModel IdentidadActual = Html.GetIdentidadActual();
    Html.AddBodyClass(" ProjectModel ");
    if (FichaDocumento.ItemLinkedFotoVersion != 0 && !string.IsNullOrEmpty(FichaDocumento.ItemLinked.ToString()) && FichaDocumento.ItemLinked != Guid.Empty)
    {
        string urlPersonalizacion = $"{Html.GetBaseUrlContent()}/{Es.Riam.Util.UtilArchivos.ContentOntologias}/Archivos/{FichaDocumento.ItemLinked.ToString().Substring(0, 3)}";
        Html.GetListaJS().Add($"{urlPersonalizacion}/{FichaDocumento.ItemLinked.ToString()}.js?v= {FichaDocumento.ItemLinkedFotoVersion}");
        Html.GetListaCSS().Add($"{urlPersonalizacion}/{FichaDocumento.ItemLinked.ToString()}.css?v= {FichaDocumento.ItemLinkedFotoVersion}");
    }
    string urlJS = $"{Html.GetBaseUrlContent()}/imagenes/proyectos/personalizacion/{Comunidad.Key.ToString()}/theme/ficharecurso.js";
    Html.GetListaJS().Add(urlJS);

    SemanticResourceModel semCmsModel = Model.SemanticFrom;
    GnossOCBase.LanguageEnum idiomaUsuario = (GnossOCBase.LanguageEnum)Enum.Parse(typeof(GnossOCBase.LanguageEnum), Html.GetUtilIdiomas().LanguageCode.ToLower());
    Project pProject = new Project(semCmsModel, idiomaUsuario);
    Html.AddBodyClass("fichaRecurso");
    Html.AddBodyClass("fichaRecurso-proyecto");
    int anioInicioAreas = 1980;
    int anioFinAreas = DateTime.Now.Year;
}

<div class="col col-12 col-breadcrumb">
    <ul>
        <li>
            <a href="@Comunidad.Url">Home</a>
        </li>
        <li>
            @{string urlProyectos = Comunidad.Url + "/proyectos"; }
            <a href="@urlProyectos">Proyectos</a>
        </li>
        @{ if (!string.IsNullOrEmpty(pProject.Roh_title))
            {
                <li>@pProject.Roh_title</li>
            }
            else
            {
                <li>---</li>
            }
        }
    </ul>
</div>

<div class="col col-12 col-xl-12 col-contenido">
    <div class="wrapCol">
        <div class="cabecera-ficha cabecera-proyecto">
            <div class="ficha-upper-row">
                <div class="ficha-icon-wrap">
                    <span class="material-icons">work</span>
                </div>
                <div class="ficha-title-wrap">
                    @{
                        if (!string.IsNullOrEmpty(pProject.Roh_title))
                        {
                            <p about="@pProject.GNOSSID" property="@pProject.GetPropertyURI(nameof(pProject.Roh_title))" class="ficha-title">@pProject.Roh_title</p>
                        }
                        else
                        {
                            <p class="ficha-title">---</p>
                        }
                    }
                </div>
                <div class="acciones-ficha-wrap">
                    <ul class="no-list-style d-flex">
                        <li>
                            <div class="acciones-recurso-listado">
                                <div class="dropdown">
                                    <a href="#" class="dropdown-toggle btn btn-outline-grey no-flecha" role="button" id="dropdownMasOpciones" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="material-icons">more_vert</span>
                                    </a>
                                    <div class="dropdown-menu basic-dropdown dropdown-icons dropdown-menu-right" aria-labelledby="dropdownMasOpciones">
                                        <p class="dropdown-title">@Html.Translate("ACCIONES")</p>
                                        <ul class="no-list-style">
                                            <li>
                                                <a class="item-dropdown">
                                                    <span class="texto">@Html.Translate("GUARDAR_ESPACIO_PERSONAL")</span>
                                                </a>
                                            </li>
                                            <li>
                                                <a class="item-dropdown">
                                                    <span class="texto">@Html.Translate("ADD_AREA_TEMATICA")</span>
                                                </a>
                                            </li>
                                            <li>
                                                <a class="item-dropdown">
                                                    <span class="texto">@Html.Translate("ADD_ETIQUETAS")</span>
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="list-wrap">
                <ul>
                    @{ 
                        if (pProject.Roh_conductedBy != null && !string.IsNullOrEmpty(pProject.Roh_conductedBy.Roh_title))
                        {
                            <li about="@pProject.Roh_conductedBy.GNOSSID" property="@pProject.Roh_conductedBy.GetPropertyURI(nameof(pProject.Roh_conductedBy.Roh_title))">@pProject.Roh_conductedBy.Roh_title</li>

                        }
                        else
                        {
                            <li>---</li>
                        }
                    }

                    @{ 
                        if (pProject.Vivo_geographicFocus != null && !string.IsNullOrEmpty(pProject.Vivo_geographicFocus.Dc_title[idiomaUsuario]))
                        {
                            <li about="@pProject.Vivo_geographicFocus.GNOSSID" property="@pProject.Vivo_geographicFocus.GetPropertyURI(nameof(pProject.Vivo_geographicFocus.Dc_title))">@pProject.Vivo_geographicFocus.Dc_title[idiomaUsuario]</li>
                        }
                        else
                        {
                            <li>---</li>
                        }
                   }
                </ul>
            </div>
            <div class="group-wrap list-wrap authors">
                <div class="bloque">
                    <div class="label">
                        @Html.Translate("PERSONAL_INVESTIGADOR_PRINCIPAL")
                    </div>
                    @{ 
                        if (pProject.Vivo_relates != null && pProject.Vivo_relates.Count > 0)
                        {
                            int numPreferencia = 100;
                            string nombrePersona = "";
                            <div class="value">
                            @{ 
                                foreach (BFO_0000023 persona in pProject.Vivo_relates)
                                {
                                    if (persona != null)
                                    {
                                        if (persona.Rdf_member != null && persona.Rdf_comment != null && persona.Rdf_comment < numPreferencia)
                                        {
                                            numPreferencia = persona.Rdf_comment;
                                            nombrePersona = persona.Rdf_member.Foaf_name;
                                            <span about="@persona.Rdf_member.GNOSSID" property="@persona.Rdf_member.GetPropertyURI(nameof(persona.Rdf_member.Foaf_name))">@nombrePersona</span>
                                        }
                                    }
                                }
                            }
                            </div>
                        }
                    }
                </div>
            </div>


            <div class="group-wrap">
                <div class="bloque">
                    <div class="label">
                    </div>
                        @{ if (!string.IsNullOrEmpty(pProject.Vivo_description))
                            {
                                <p about="@pProject.GNOSSID" property="@pProject.GetPropertyURI(nameof(pProject.Vivo_description))" class="value">@pProject.Vivo_description</p>
                            }
                        }
                </div>
            </div>
            <div class="group-wrap">
                <div class="bloque">
                    <div class="label">@Html.Translate("ENTIDAD_FINANCIADORA")</div>
                    @{ 
                        if (pProject.Roh_grantedBy != null && pProject.Roh_grantedBy.Count > 0)
                        {
                            foreach (Organization organizacion in pProject.Roh_grantedBy)
                            {
                                if (organizacion != null && !string.IsNullOrEmpty(organizacion.Roh_title))
                                {
                                    <div about="@organizacion.GNOSSID" property="@organizacion.GetPropertyURI(nameof(organizacion.Roh_title))" class="value">@organizacion.Roh_title</div>
                                }
                                else
                                {
                                    <div class="value">---</div> 
                                }
                            }
                        }
                        else
                        {
                            <div class="value">---</div>
                        }
                    }
                </div>
            </div>
            <div class="group-wrap">
                <div class="bloque">
                    <div class="label">@Html.Translate("PROGRAMA_FINANCIACION")</div>
                    @{                         
                        string fundedBy = "";
                        if (pProject.Roh_isSupportedBy != null && pProject.Roh_isSupportedBy.Roh_fundedBy != null && pProject.Roh_isSupportedBy.Roh_fundedBy.Count > 0)
                        {
                            foreach (FundingProgram item in pProject.Roh_isSupportedBy.Roh_fundedBy)
                            {
                                if (!string.IsNullOrEmpty(item.Roh_title))
                                {
                                    fundedBy += item.Roh_title;
                                }
                            }
                            <div about="@pProject.Roh_isSupportedBy.GNOSSID" property="@pProject.Roh_isSupportedBy.GetPropertyURI(nameof(pProject.Roh_isSupportedBy.Roh_fundedBy))" class="value">@fundedBy</div> 
                        }
                        else
                        {
                            <div class="value">---</div> 
                        }
                     }                    
                </div>
            </div>
            <div class="group-wrap">
                <div class="bloque">
                    <div class="label">@Html.Translate("MODALIDAD_PROYECTO")</div>
                    @{ 
                        if (pProject.Roh_scientificExperienceProject != null && !string.IsNullOrEmpty(pProject.Roh_scientificExperienceProject.Dc_title[idiomaUsuario]) && pProject.Roh_isSupportedBy != null)
                        {
                            <div about="@pProject.Roh_scientificExperienceProject.GNOSSID" property="@pProject.Roh_isSupportedBy.GetPropertyURI(nameof(pProject.Roh_scientificExperienceProject.Dc_title))" class="value">@pProject.Roh_scientificExperienceProject.Dc_title[idiomaUsuario]</div> 
                        }
                        else
                        {
                            <div class="value">---</div>
                        }
                    }
                </div>
            </div>
            <!-- <div class="group-wrap">
                <div class="bloque">
                    <div class="label">@Html.Translate("MODALIDAD_PROYECTO")</div>
                    @{ 
                        if (pProject.Roh_modality != null && !string.IsNullOrEmpty(pProject.Roh_modality.Dc_title[idiomaUsuario]) && pProject.Roh_isSupportedBy != null)
                        {
                            <div about="@pProject.Roh_modality.GNOSSID" property="@pProject.Roh_isSupportedBy.GetPropertyURI(nameof(pProject.Roh_modality.Dc_title))" class="value">@pProject.Roh_modality.Dc_title[idiomaUsuario]</div> 
                        }
                        else
                        {
                            <div class="value">---</div>
                        }
                    }
                </div>
            </div> -->
            <div class="group-wrap div3">
                <div class="bloque">
                    <div class="label">@Html.Translate("AMBITO_GEOGRAFICO")</div>
                    @{ if (pProject.Vivo_geographicFocus != null && pProject.Vivo_geographicFocus.Dc_title != null && pProject.Vivo_geographicFocus.Dc_title.Count > 0)
                        {
                            <div about="@pProject.Vivo_geographicFocus.GNOSSID" property="@pProject.Vivo_geographicFocus.GetPropertyURI(nameof(pProject.Vivo_geographicFocus.Dc_title))" class="value">@pProject.Vivo_geographicFocus.Dc_title[idiomaUsuario]</div>
                        }
                        else
                        {
                            <div class="value">---</div>
                        }
                    }
                </div>
                <div class="bloque">
                    <div class="label">@Html.Translate("NUMERO_INVESTIGADORES")</div>
                    @if (pProject.Roh_researchersNumber != null && pProject.Roh_researchersNumber.HasValue)
                    {
                        <div about="@pProject.GNOSSID" property="@pProject.GetPropertyURI(nameof(pProject.Roh_researchersNumber))" class="value" id="researchers-number">@pProject.Roh_researchersNumber</div> }
                    else
                    {
                        <div class="value" id="researchers-number">---</div>
                    }
                </div>
            </div>
            <div class="group-wrap div3">
                <div class="bloque">
                    <div class="label">@Html.Translate("FECHA_INICIO")</div>
                    @if (pProject.Vivo_start != null && pProject.Vivo_start.HasValue)
                    {
                        string anioInicio = pProject.Vivo_start.Value.Year.ToString();
                        string mesInicio = pProject.Vivo_start.Value.Month.ToString();
                        string diaInicio = pProject.Vivo_start.Value.Day.ToString();
                        string fechaInicio = diaInicio + "/" + mesInicio + "/" + anioInicio;

                        <div about="@pProject.GNOSSID" property="@pProject.GetPropertyURI(nameof(pProject.Vivo_start))" class="value">@fechaInicio</div>
                    }
                </div>
                <div class="bloque">
                    <div class="label">@Html.Translate("FECHA_FIN")</div>
                    @if (pProject.Vivo_end != null && pProject.Vivo_end.HasValue)
                    {
                        string anioFin = pProject.Vivo_end.Value.Year.ToString();
                        string mesFin = pProject.Vivo_end.Value.Month.ToString();
                        string diaFin = pProject.Vivo_end.Value.Day.ToString();
                        string fechaFin = diaFin + "/" + mesFin + "/" + anioFin;

                        <div about="@pProject.GNOSSID" property="@pProject.GetPropertyURI(nameof(pProject.Vivo_end))" class="value">@fechaFin</div>
                    }
                </div>
            </div>
            <div class="list-wrap tags">
                <div class="label">@Html.Translate("AREAS_TEMATICAS")</div>
                <ul>
                    @{
                        int contadorCategorias = 0;
                    }
                    @if (pProject.Roh_hasProjectClassification != null && pProject.Roh_hasProjectClassification.Count > 0)
                    {
                        foreach (ProjectClassification clasificacion in pProject.Roh_hasProjectClassification)
                        {
                            if (clasificacion != null && clasificacion.IdsRoh_projectClassificationNode != null && clasificacion.IdsRoh_projectClassificationNode.Count > 0)
                            {
                                foreach (string nodo in clasificacion.IdsRoh_projectClassificationNode)
                                {
                                    if (!string.IsNullOrEmpty(nodo))
                                    {
                                        <li>
                                            <a>
                                                <span about="@clasificacion.GNOSSID" property="@clasificacion.GetPropertyURI(nameof(clasificacion.RdfsLabel))" class="texto">@nodo</span>
                                            </a>
                                        </li>
                                     }
                                    else
                                    {
                                        <li>
                                            <a>
                                                <span class="texto">---</span>
                                            </a>
                                        </li>
                                    }
                                }
                            }
                            else
                            {
                                <li>
                                    <a>
                                        <span class="texto">---</span>
                                    </a>
                                </li>
                            }
                        }
                    }
                </ul>
                @{ if (contadorCategorias > 3)
                    {
                        <p class="moreResults">
                            <a href="javascript: void(0);" class="ver-mas" style="display: flex;">@Html.Translate("VER_MAS")</a>
                            <a href="javascript: void(0);" class="ver-menos" style="display: none;">@Html.Translate("VER_MENOS")</a>
                        </p>
                    }
                }
            </div>
        </div>

        <div class="contenido-ficha contenido-proyecto">
            <div class="tab-paneles-ficha">

                <div class="tabs">
                    <ul class="nav nav-tabs" id="navegacion-recurso" role="tablist">
                        <li class="nav-item" role="presentation">
                            <a class="nav-link active" id="participantes-tab" data-toggle="tab" href="#participantes-panel" role="tab" aria-controls="participantes-panel" aria-selected="true">
                                <div class="bloque">
                                    <div class="label">@Html.Translate("PARTICIPANTES")</div>
                                    <div class="data">@pProject.Roh_researchersNumber</div>
                                </div>
                            </a>
                        </li>
                        <li class="nav-item" role="presentation">
                            <a class="nav-link" id="publicaciones-tab" data-toggle="tab" href="#publicaciones-panel" role="tab" aria-controls="publicaciones-panel" aria-selected="false">
                                <div class="bloque">
                                    <div class="label">@Html.Translate("PUBLICACIONES")</div>
                                    <div class="data"></div>
                                </div>
                            </a>
                        </li>
                        <li class="nav-item" role="presentation">
                            <a class="nav-link" id="temas-investigacion-tab" data-toggle="tab" href="#temas-investigacion-panel" role="tab" aria-controls="temas-investigacion-panel" aria-selected="false">
                                <div class="bloque">
                                    <div class="label">@Html.Translate("AREAS_TEMATICAS")</div>
                                    <div class="data"></div>
                                </div>
                            </a>
                        </li>
                        <li class="nav-item" role="presentation">
                            <a class="nav-link" id="colaboradores-tab" data-toggle="tab" href="#colaboradores-panel" role="tab" aria-controls="colaboradores-panel" aria-selected="false">
                                <div class="bloque">
                                    <div class="label">@Html.Translate("COLABORADORES")</div>
                                    <div class="data">---</div>
                                </div>
                            </a>
                        </li>
                    </ul>
                </div>


                <div class="tab-content" id="paneles-recurso">
                    <div class="tab-pane fade show active" id="participantes-panel" role="tabpanel" aria-labelledby="referencias-tab">
                        <div class="row" id="contenedorBuscadorParticipantes">
                            <div class="col col-12 col-chart">
                                <div class="wrapCol">
                                    <div class="chart-wrap">
                                        <div class="contenido-grafico container">
                                            <div class="row">
                                                <div class="col col-12 col-md-12">
                                                    <div class="grafico-wrap">
                                                        <p>@Html.Translate("MIEMBROS")</p>
                                                        <div class="wrapCol" id="membersgraph" style="width: 1224px; height: 500px;"></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col col-12 col-section-title font-weight-bold searcherTitle">
                                <div class="wrapCol">
                                    <p>@Html.Translate("MIEMBROS")</p>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="tab-pane fade" id="publicaciones-panel" role="tabpanel" aria-labelledby="publicaciones-tab">
                        <div class="row" id="contenedorBuscadorPublicaciones">
                            <div class="col col-12 col-section-title font-weight-bold">
                                <div class="wrapCol">
                                    <p></p>
                                </div>
                            </div>
                            <div class="col col-12 col-chart">
                                <div class="wrapCol">
                                    <div class="chart-wrap">
                                        <div class="contenido-grafico container">
                                            <div class="row">
                                                <div class="col col-12 col-md-12">
                                                    <div class="grafico-wrap">
                                                        <p>@Html.Translate("GRAFICA_PUBLICIONES")</p>
                                                        <div class="chart-wrap chart-publicaciones" id="publicaciongraph">
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col col-12 col-section-title font-weight-bold searcherTitle">
                                <div class="wrapCol">
                                    <p>@Html.Translate("LISTADO_PUBLICACIONES")</p>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="tab-pane fade" id="temas-investigacion-panel" role="tabpanel" aria-labelledby="temas-investigacion-tab">
                        <div class="row" id="contenedorBuscadorTemasInvestigacion">
                            <div class="col col-12 col-chart">
                                <div class="wrapCol">
                                    <div class="chart-wrap">
                                        <div class="acciones-grafico">
                                            <div class="periodo dropdown dropdown-select">
                                                <a href="#" class="dropdown-toggle btn btn-outline-grey" role="button" id="dropdownPeriodo" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    @Html.Translate("PERIODO_TEMPORAL"):
                                                    <span class="texto">@Html.Translate("TODOS")</span>
                                                </a>
                                                <div class="dropdown-menu basic-dropdown dropdown-menu-left" aria-labelledby="dropdownPeriodo">
                                                    <p class="dropdown-title">@Html.Translate("PERSONALIZADO")</p>
                                                    <div class="faceta-date-range">
                                                        <div id="dateRangeAreas" class="ui-slider ui-corner-all ui-slider-horizontal ui-widget ui-widget-content">
                                                            <div class="ui-slider-range ui-corner-all ui-widget-header"></div>
                                                            <span tabindex="0" class="ui-slider-handle ui-corner-all ui-state-default"></span>
                                                            <span tabindex="0" class="ui-slider-handle ui-corner-all ui-state-default"></span>
                                                        </div>
                                                        <div class="d-flex">
                                                            <input title="@Html.Translate("ANIO")" type="number" min="@anioInicioAreas" max="@anioFinAreas" value="@anioInicioAreas" autocomplete="off" class="filtroFacetaFecha hasDatepicker" placeholder="@Html.Translate("ANIO_INICIO")" name="gmd_ci_datef1" id="inicioAreas">
                                                            <input title="@Html.Translate("ANIO")" type="number" min="@anioInicioAreas" max="@anioFinAreas" value="@anioFinAreas" autocomplete="off" class="filtroFacetaFecha hasDatepicker" placeholder="@Html.Translate("ANIO_FIN")" name="gmd_ci_datef2" id="finAreas">
                                                            <a class="searchButton"  id="aplicarAnioAreas">@Html.Translate("APLICAR")</a>
                                                        </div>
                                                        <ul class="no-list-style">
                                                            <li>
                                                                <a href="javascript: void(0);" id="ultimosCincoAniosAreas" class="item-dropdown ">
                                                                    <span class="textoAlternativo">@Html.Translate("PERIODO_TEMPORAL"):</span>
                                                                    <span class="texto">@Html.Translate("ULTIMOS_CINCO_ANIOS")</span>
                                                                </a>
                                                            </li>
                                                            <li>
                                                                <a href="javascript: void(0);" id="ultimoAnioArea" class="item-dropdown ">
                                                                    <span class="textoAlternativo">@Html.Translate("PERIODO_TEMPORAL"):</span>
                                                                    <span class="texto">@Html.Translate("ULTIMO_ANIO")</span>
                                                                </a>
                                                            </li>
                                                            <li>
                                                                <a href="javascript: void(0);" id="todosAniosArea" class="item-dropdown activeView ">
                                                                    <span class="textoAlternativo">@Html.Translate("PERIODO_TEMPORAL"):</span>
                                                                    <span class="texto">@Html.Translate("TODOS")</span>
                                                                </a>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="contenido-grafico container">
                                            <div class="row">
                                                <div class="col col-12 col-md-12">
                                                    <div class="grafico-wrap">
                                                        <p>@Html.Translate("GRAFICA_AREAS_GRUPO_ARANIA")</p>
                                                        <div class="graph-controls">
                                                            <ul class="no-list-style d-flex align-items-center">
                                                                <li class="control remove-control" id="removeNodesAreas">
                                                                    <span class="material-icons">remove</span>
                                                                </li>
                                                                <li class="control text-control">
                                                                    <span id="numNodosArea">10</span>&nbsp;@Html.Translate("NODOS")
                                                                </li>
                                                                <li class="control add-control" id="addNodesAreas">
                                                                    <span class="material-icons">add</span>
                                                                </li>
                                                            </ul>
                                                        </div>
                                                        <input type="hidden" id="numAreas" value="10" />
                                                        <div id="areastematicasgrapharania" style="width: 1224px; height: 500px;">
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col col-12 col-md-12">
                                                    <div class="grafico-wrap">
                                                        <p>@Html.Translate("GRAFICA_AREAS_GRUPO_BARRAS")</p>
                                                        <div id="areastematicasgraph">
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="colaboradores-panel" role="tabpanel" aria-labelledby="referencias-tab">
                        <div class="row" id="contenedorBuscadorColaboradores">
                            <div class="col col-12 col-chart">
                                <div class="wrapCol">
                                    <div class="chart-wrap">
                                        <div class="contenido-grafico container">
                                            <div class="row">
                                                <div class="col col-12 col-md-12">
                                                    <div class="grafico-wrap">
                                                        <p>@Html.Translate("COLABORADORES")</p>
                                                        <div class="graph-controls">
                                                            <ul class="no-list-style d-flex align-items-center">
                                                                <li class="control remove-control" id="removeNodesCollaborators">
                                                                    <span class="material-icons">remove</span>
                                                                </li>
                                                                <li class="control text-control">
                                                                    <span id="numNodosCollaborators">10</span>&nbsp;@Html.Translate("NODOS")
                                                                </li>
                                                                <li class="control add-control" id="addNodesCollaborators">
                                                                    <span class="material-icons">add</span>
                                                                </li>
                                                            </ul>
                                                        </div>
                                                        <input type="hidden" id="numColaboradores" value="10" />
                                                        <div class="wrapCol" id="graficaCytoscapeColab" style="width: 1224px; height: 500px;"></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col col-12 col-section-title font-weight-bold searcherTitle">
                                <div class="wrapCol">
                                    <p>@Html.Translate("COLABORADORES")</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JAVASCRIPT -->
<script type="text/javascript">
    var depuracion = false;

    const localUrlBase = "https://localhost:44321/";
    const edmaUrlBase = "@Html.GetBaseUrlContent()/";

    const urlBase = "@Html.GetBaseUrl()";
    if (urlBase.includes("localhost") || urlBase.includes("depuracion")) {
        depuracion = true;
    }
    

    // Datos cabeceras de las fichas.
    function CargarDatosCabeceras() {
        var url = edmaUrlBase + "servicioexterno/Hercules/DatosFichaProyecto"
        if (depuracion) {
             url = localUrlBase + "Hercules/DatosFichaProyecto"
        }
        var arg = {};
        arg.pIdProyecto = "@pProject.GNOSSID";
        $.get(url, arg, function (data) {
            $("#participantes-tab div div.data").text(data["Participantes"]);
            $("#publicaciones-tab div div.data").text(data["Publicaciones"]);
            $("#temas-investigacion-tab div div.data").text(data["Categorias"]);

            // content
            $("#researchers-number").text(data["Participantes"]);
        });
    }

    // Datos gráfica colaboradores.
    function CargarGraficaColaboradores(idproyecto, parametros, idContenedor, mostrarCargando = false) {
        var url = edmaUrlBase + "servicioexterno/Hercules/DatosGraficaRedColaboradores"
        if (depuracion) {
            url = localUrlBase + "Hercules/DatosGraficaRedColaboradores"
        }

        var arg = {};
        arg.pIdProyecto = idproyecto;
        arg.pParametros = parametros;
        arg.pMax = $('#numColaboradores').val();
        $('#' + idContenedor).empty();
        if (mostrarCargando) {
            MostrarUpdateProgress();
        }
        $.get(url, arg, function (data) {
            PintarGraficaArania(data, idContenedor);
            if (mostrarCargando) {
                OcultarUpdateProgress();
            }
        });
    }


    // Datos gráfica miembros.
    function CargarGraficaMiembros(idproyecto, parametros, idContenedor) {
        var url = edmaUrlBase + "servicioexterno/Hercules/DatosGraficaRedMiembros"
        if (depuracion) {
            url = localUrlBase + "Hercules/DatosGraficaRedMiembros"
        }
        var arg = {};
        arg.pIdProyecto = idproyecto;
        arg.pParametros = parametros;
        $('#' + idContenedor).empty();
        $.get(url, arg, function (data) {
            PintarGraficaArania(data, idContenedor);
        });
    }


    // Datos gráfica publicaciones.
    function CargarGraficaPublicaciones(parametros, idContenedor) {
        var url = "http://serviciosedma.gnoss.com/servicioexterno/Hercules/DatosGraficaPublicaciones"
        if (depuracion) {
            url = localUrlBase + "Hercules/DatosGraficaPublicaciones"
        }
        var arg = {};
        arg.pParametros = parametros;
        $('#' + idContenedor).empty();
        $.get(url, arg, function (data) {
            PintarGraficaPublicaciones(data, idContenedor);
        });
    }

    // Datos gráfica publicaciones horizontal.
    function CargarGraficaPublicacionesHorizontal(idproyecto, parametros) {
        $('#chart-publicaciones-horizontal').remove();
        var url = edmaUrlBase + "servicioexterno/Hercules/DatosGraficaPublicacionesHorizontal"
        if (depuracion) {
             url = localUrlBase + "Hercules/DatosGraficaPublicacionesHorizontal"
        }
        var arg = {};
        arg.pIdProyecto = idproyecto;
        arg.pParametros = parametros;
        $.get(url, arg, function (data) {

            // Porcentajes en parte inferior.
            data.options.scales.x.ticks.callback = function (value) { return value + "%" }
            var altura = data.data.labels.length * 50;

            $('#chart-publicaciones-horizontal').remove();
            $('div.chart-publicaciones-horizontal').removeAttr("style");
            $('div.chart-publicaciones-horizontal').css("height", altura + 50);

            $('div.chart-publicaciones-horizontal').append($('<canvas id="chart-publicaciones-horizontal" class="js-chart" width="600" height="' + altura + '"></canvas>'));
            var ctx = document.getElementById('chart-publicaciones-horizontal');
            var parent = ctx.parentElement;
            var width = parent.offsetWidth;
            ctx.setAttribute('width', width);
            var height = parent.offsetHeight;
            ctx.setAttribute('height', height);
            var myChart = new Chart(ctx, data);
        });
    }

    
    // Datos gráfica áreas temáticas
    function CargarGraficaAreasTematicas(pIdProyecto, idContenedor) {
        var url = "http://serviciosedma.gnoss.com/servicioexterno/Hercules/DatosGraficaAreasTematicas"
        if (depuracion) {
            url = localUrlBase + "Hercules/DatosGraficaAreasTematicas"
        }
        var arg = {};
        arg.pId = pIdProyecto;
        arg.pType = 'project';
        arg.pAnioInicio = $('#inicioAreas').val();
        arg.pAnioFin = $('#finAreas').val();
        $.get(url, arg, function (data) {
            PintarGraficaAreasTematicas(data, idContenedor);
        });
    }

    // Datos gráfica áreas temáticas
    function CargarGraficaAreasTematicasArania(pIdProyecto, idContenedor) {
        var url = "http://serviciosedma.gnoss.com/servicioexterno/Hercules/DatosGraficaAreasTematicasArania"
        if (depuracion) {
            url = localUrlBase + "Hercules/DatosGraficaAreasTematicasArania"
        }
        var arg = {};
        arg.pId = pIdProyecto;
        arg.pType = 'project';
        arg.pAnioInicio = $('#inicioAreas').val();
        arg.pAnioFin = $('#finAreas').val();
        arg.pNumAreas = $('#numAreas').val();
        MostrarUpdateProgress();
        $.get(url, arg, function (data) {
            PintarGraficaArania(data, idContenedor);
            OcultarUpdateProgress();
        });
    }




    // Comportamiento página proyecto
    var comportamientoPaginaProyecto = {
        tabActive: null,
        init: function () {
            CargarDatosCabeceras();
            this.config();
            $('#participantes-tab').click();
            return;
        },
        config: function () {


            var that = this;
            //Métodos areas
            $(function () {
                $("#dateRangeAreas").slider({
                    range: true,
                    min: @anioInicioAreas,
                    max: @anioFinAreas,
                    values: [@anioInicioAreas, @anioFinAreas],
                    slide: function (event, ui) {
                        $("#inicioAreas").val(ui.values[0]);
                        $("#finAreas").val(ui.values[1]);
                    }
                });
            });
            $('#ultimosCincoAniosAreas').unbind().click(function (e) {
                e.preventDefault();
                $("#inicioAreas").val(@(anioFinAreas - 4));
                $("#finAreas").val(@anioFinAreas);
                var parent = $(this).parents('.dropdown-select');
                var toggle = parent.find('.dropdown-toggle');
                toggle.html($(this).html());
                CargarGraficaAreasTematicas("@pProject.GNOSSID.Split('_')[1].ToUpper()", "areastematicasgraph");
                CargarGraficaAreasTematicasArania("@pProject.GNOSSID.Split('_')[1].ToUpper()", "areastematicasgrapharania");
            });

            $('#ultimoAnioArea').unbind().click(function (e) {
                e.preventDefault();
                $("#inicioAreas").val(@anioFinAreas);
                $("#finAreas").val(@anioFinAreas);
                var parent = $(this).parents('.dropdown-select');
                var toggle = parent.find('.dropdown-toggle');
                toggle.html($(this).html());
                CargarGraficaAreasTematicas("@pProject.GNOSSID.Split('_')[1].ToUpper()", "areastematicasgraph");
                CargarGraficaAreasTematicasArania("@pProject.GNOSSID.Split('_')[1].ToUpper()", "areastematicasgrapharania");
            });

            $('#aplicarAnioAreas').unbind().click(function (e) {
                e.preventDefault();
                var parent = $(this).parents('.dropdown-select');
                var toggle = parent.find('.dropdown-toggle');
                toggle.html($("#inicioAreas").val() + '-' + $("#finAreas").val());
                CargarGraficaAreasTematicas("@pProject.GNOSSID.Split('_')[1].ToUpper()", "areastematicasgraph");
                CargarGraficaAreasTematicasArania("@pProject.GNOSSID.Split('_')[1].ToUpper()", "areastematicasgrapharania");
            });

            $('#todosAniosArea').unbind().click(function (e) {
                e.preventDefault();
                $("#inicioAreas").val(@anioInicioAreas);
                $("#finAreas").val(@anioFinAreas);
                var parent = $(this).parents('.dropdown-select');
                var toggle = parent.find('.dropdown-toggle');
                toggle.html($(this).html());
                CargarGraficaAreasTematicas("@pProject.GNOSSID.Split('_')[1].ToUpper()", "areastematicasgraph");
                CargarGraficaAreasTematicasArania("@pProject.GNOSSID.Split('_')[1].ToUpper()", "areastematicasgrapharania");
            });

            $('#removeNodesAreas').unbind().click(function (e) {
                e.preventDefault();
                var numAreas = parseInt($('#numAreas').val());
                if (numAreas > 10) {
                    $('#numAreas').val((numAreas - 10));
                }
                $('#numNodosArea').html($('#numAreas').val());
                CargarGraficaAreasTematicasArania("@pProject.GNOSSID.Split('_')[1].ToUpper()", "areastematicasgrapharania");
            });

            $('#addNodesAreas').unbind().click(function (e) {
                e.preventDefault();
                var numAreas = parseInt($('#numAreas').val());
                $('#numAreas').val((numAreas + 10));
                $('#numNodosArea').html($('#numAreas').val());
                CargarGraficaAreasTematicasArania("@pProject.GNOSSID.Split('_')[1].ToUpper()", "areastematicasgrapharania");
            });
            //Fin métodos áreas

            //Métodos colaboradores
            $('#removeNodesCollaborators').unbind().click(function (e) {
                e.preventDefault();
                var numColaboradores = parseInt($('#numColaboradores').val());
                if (numColaboradores > 10) {
                    $('#numColaboradores').val((numColaboradores - 10));
                }
                $('#numNodosCollaborators').html($('#numColaboradores').val());
                var parametros = ObtenerHash2() + "&" + buscadorPersonalizado.filtro;
                CargarGraficaColaboradores("@pProject.GNOSSID.Split('_')[1].ToUpper()", parametros,'graficaCytoscapeColab',true);
            });

            $('#addNodesCollaborators').unbind().click(function (e) {
                e.preventDefault();
                var numColaboradores = parseInt($('#numColaboradores').val());
                $('#numColaboradores').val((numColaboradores + 10));
                $('#numNodosCollaborators').html($('#numColaboradores').val());
                var parametros = ObtenerHash2() + "&" + buscadorPersonalizado.filtro;
                 CargarGraficaColaboradores("@pProject.GNOSSID.Split('_')[1].ToUpper()", parametros,'graficaCytoscapeColab',true);
            });
            //Fin métodos colaboradores



            $('#participantes-tab').unbind().click(function (e) {
                e.preventDefault();
                that.tabActive = "participantes";
                buscadorPersonalizado.init("@Html.Translate("INVESTIGADORES")", "#contenedorBuscadorParticipantes", "searchPersonasRelacionadasConProyecto=@pProject.GNOSSID.Split('_')[1].ToUpper()", null, "PestanyaActualID=@Html.Translate("ID_BUSQUEDA_PERSONAS")|rdf:type=person", "@Comunidad.Url", "@Comunidad.Key.ToString()");
            });
            $('#publicaciones-tab').unbind().click(function (e) {
                e.preventDefault();
                that.tabActive = "publicaciones";
                buscadorPersonalizado.init("@Html.Translate("PUBLICACIONES")", "#contenedorBuscadorPublicaciones", "searchDocumentosRelacionadosConProyecto=@pProject.GNOSSID.Split('_')[1].ToUpper()", "dct:issued", "PestanyaActualID=@Html.Translate("ID_BUSQUEDA_DOCUMENTOS")|rdf:type=document", "@Comunidad.Url", "@Comunidad.Key.ToString()");
            });
            $('#temas-investigacion-tab').unbind().click(function (e) {
                e.preventDefault();
                that.tabActive = "temas-investigacion";
                CargarGraficaAreasTematicas("@pProject.GNOSSID.Split('_')[1].ToUpper()", "areastematicasgraph");
                CargarGraficaAreasTematicasArania("@pProject.GNOSSID.Split('_')[1].ToUpper()", "areastematicasgrapharania");
                history.pushState('', 'New URL: ', ResetearURL());
            });
            $('#colaboradores-tab').unbind().click(function (e) {
                e.preventDefault();
                that.tabActive = "colaboradores";
                buscadorPersonalizado.init("@Html.Translate("INVESTIGADORES")", "#contenedorBuscadorColaboradores", "searchPersonasColaboradoresConProyecto=@pProject.GNOSSID.Split('_')[1].ToUpper()", null, "PestanyaActualID=@Html.Translate("ID_BUSQUEDA_PERSONAS_COLABORADORES")|rdf:type=person", "@Comunidad.Url", "@Comunidad.Key.ToString()");
            });
            return;
        }
    };

    $(function () {
        comportamientoPaginaProyecto.init();
    });

    // Acciones al llevar a cabo en rl filtrado
    function accionFiltrado() {
        var parametros = ObtenerHash2()+"&" + buscadorPersonalizado.filtro;
        if (comportamientoPaginaProyecto.tabActive == "participantes") {
            CargarGraficaMiembros("@pProject.GNOSSID.Split('_')[1].ToUpper()", parametros, "membersgraph");
        }
        else if (comportamientoPaginaProyecto.tabActive == "publicaciones") {
            CargarGraficaPublicaciones(parametros,'publicaciongraph');
        }
        else if (comportamientoPaginaProyecto.tabActive == "colaboradores") {
            CargarGraficaColaboradores("@pProject.GNOSSID.Split('_')[1].ToUpper()", parametros, "graficaCytoscapeColab");
        }
    }


</script>

@functions{
    public class RDFPropertyAttribute : Attribute
    {
        public RDFPropertyAttribute(string pRDFA)
        {
            mRDFA = pRDFA;
        }
        protected string mRDFA;
        public string RDFProperty
        {
            get { return mRDFA; }
        }
    }

    [AttributeUsage(AttributeTargets.All, AllowMultiple = true)]
    public class LABELAttribute : Attribute
    {
        private GnossOCBase.LanguageEnum IdiomaDefecto = GnossOCBase.LanguageEnum.es;
        private GnossOCBase.LanguageEnum midioma;
        private string mlabel;
        public LABELAttribute(GnossOCBase.LanguageEnum idioma, string label)
        {
            mlabel = label;
            midioma = idioma;
        }
        public string LABEL(GnossOCBase.LanguageEnum pLang)
        {
            if (midioma.Equals(pLang))
            {
                return mlabel;
            }
            return "";
        }
    }

    public class GnossOCBase
    {
        public enum LanguageEnum
        {
            es,
            en,
            pt,
            ca,
            eu,
            gl,
            fr,
            de,
            it,
        }
        internal List<string> prefList = new List<string>();
        internal string mGNOSSID;
        internal string mURL;
        internal Guid resourceID;
        internal Guid articleID;
        private static List<string> NoEnIdiomas = new List<string> { "N�o", "Non", "Ez", "Nein", "No" };
        public List<string> tagList = new List<string>();
        public GnossOCBase()
        {
            prefList.Add("xmlns:foaf=\"http://xmlns.com/foaf/0.1/\"");
            prefList.Add("xmlns:vivo=\"http://vivoweb.org/ontology/core#\"");
            prefList.Add("xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"");
            prefList.Add("xmlns:owl=\"http://www.w3.org/2002/07/owl#\"");
            prefList.Add("xmlns:bibo=\"http://purl.org/ontology/bibo/\"");
            prefList.Add("xmlns:roh=\"http://w3id.org/roh/\"");
            prefList.Add("xmlns:dct=\"http://purl.org/dc/terms/\"");
            prefList.Add("xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"");
            prefList.Add("xmlns:xsd=\"http://www.w3.org/2001/XMLSchema#\"");
            prefList.Add("xmlns:obo=\"http://purl.obolibrary.org/obo/\"");
            prefList.Add("xmlns:vcard=\"https://www.w3.org/2006/vcard/ns#\"");
            prefList.Add("xmlns:dc=\"http://purl.org/dc/elements/1.1/\"");
            prefList.Add("xmlns:gn=\"http://www.geonames.org/ontology#\"");

            this.resourceID = Guid.NewGuid();
            this.articleID = Guid.NewGuid();
        }

        public string GNOSSID
        {
            get { return mGNOSSID; }
            set
            {
                this.mGNOSSID = value;
                var GnossIDSplit = this.mGNOSSID.Split('_');
                Guid nuevoResource = Guid.Parse(GnossIDSplit[GnossIDSplit.Count() - 2]);
                Guid nuevoArticle = Guid.Parse(GnossIDSplit.Last());
                if (!this.ResourceID.Equals(nuevoResource))
                {
                    this.resourceID = nuevoResource;
                }
                if (!this.ArticleID.Equals(nuevoArticle))
                {
                    this.articleID = nuevoArticle;
                }
            }
        }
        public string URL
        {
            get { return mURL; }
        }

        public Guid ResourceID
        {
            get { return resourceID; }
            set
            {
                this.resourceID = value;
                string primeraParte = this.mGNOSSID.Substring(0, this.mGNOSSID.LastIndexOf('/') + 1);
                string antiguoGuid = this.mGNOSSID.Substring(this.mGNOSSID.LastIndexOf('/') + 1, this.mGNOSSID.LastIndexOf('_'));
                string ultimaParte = this.mGNOSSID.Substring(this.mGNOSSID.LastIndexOf('_') + 1);
                if (!antiguoGuid.Equals(this.resourceID.ToString()))
                {
                    this.mGNOSSID = $"{primeraParte}{this.resourceID.ToString()}{ultimaParte}";
                }
            }
        }

        public Guid ArticleID
        {
            get { return articleID; }
            set
            {
                this.articleID = value;
                string primeraParte = this.mGNOSSID.Substring(0, this.mGNOSSID.LastIndexOf('_') + 1);
                string antiguoGuid = this.mGNOSSID.Substring(this.mGNOSSID.LastIndexOf('_') + 1);
                if (!antiguoGuid.Equals(this.articleID.ToString()))
                {
                    this.mGNOSSID = $"{primeraParte}{this.articleID.ToString()}";
                }
            }
        }

        public static string GetPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            if (pProperty != null && pProperty.PropertyValues.Count > 0)
            {
                return pProperty.PropertyValues[0].Value;
            }
            return "";
        }

        public static int? GetNumberIntPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            if (pProperty != null && pProperty.PropertyValues.Count > 0 && !string.IsNullOrEmpty(pProperty.PropertyValues[0].Value))
            {
                return int.Parse(pProperty.PropertyValues[0].Value);
            }
            return 0;
        }

        public static int? GetNumberIntPropertyMultipleValueSemCms(SemanticPropertyModel.PropertyValue pProperty)
        {
            if (pProperty != null && !string.IsNullOrEmpty(pProperty.Value))
            {
                return int.Parse(pProperty.Value);
            }
            return 0;
        }

        public static float? GetNumberFloatPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            if (pProperty != null && pProperty.PropertyValues.Count > 0 && !string.IsNullOrEmpty(pProperty.PropertyValues[0].Value))
            {
                return float.Parse(pProperty.PropertyValues[0].Value.Replace('.', ','));
            }
            return 0;
        }

        public static DateTime? GetDateValuePropertySemCms(SemanticPropertyModel pProperty)
        {
            string stringDate = GetPropertyValueSemCms(pProperty);
            if (!string.IsNullOrEmpty(stringDate))
            {
                int year = 0;
                int month = 0;
                int day = 0;
                if (stringDate.Contains('/'))
                {
                    day = int.Parse(stringDate.Split('/')[0]);
                    month = int.Parse(stringDate.Split('/')[1]);
                    year = int.Parse(stringDate.Split('/')[2].Split(' ')[0]);
                }
                else
                {
                    year = int.Parse(stringDate.Substring(0, 4));
                    month = int.Parse(stringDate.Substring(4, 2));
                    day = int.Parse(stringDate.Substring(6, 2));
                }
                if (stringDate.Length == 14)
                {
                    if (month == 0 || day == 0)
                    {
                        return new DateTime(year);
                    }
                    else
                    {
                        int hour = int.Parse(stringDate.Substring(8, 2));
                        int minute = int.Parse(stringDate.Substring(10, 2));
                        int second = int.Parse(stringDate.Substring(12, 2));
                        return new DateTime(year, month, day, hour, minute, second);
                    }
                }
                else
                {
                    return new DateTime(year, month, day);
                }
            }
            return null;
        }

        public static bool GetBooleanPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            bool resultado = false;
            if (pProperty != null && pProperty.PropertyValues.Count > 0 && !string.IsNullOrEmpty(pProperty.PropertyValues[0].Value))
            {
                if (!bool.TryParse(pProperty.PropertyValues[0].Value, out resultado))
                {
                    resultado = !NoEnIdiomas.Contains(pProperty.PropertyValues[0].Value);
                }
            }
            return resultado;
        }

        internal virtual void GetProperties()
        {
        }

        internal virtual void GetEntities()
        {
        }

        internal string GetExtension(string file)
        {
            return file.Substring(file.LastIndexOf('.'));
        }


        public string GetPropertyURI(string nombrePropiedad)
        {
            Type type = this.GetType();
            PropertyInfo mInfo = type.GetProperty(nombrePropiedad);
            if (mInfo != null)
            {
                Attribute attr = Attribute.GetCustomAttribute(mInfo, typeof(RDFPropertyAttribute));
                if (attr != null)
                {
                    return ((RDFPropertyAttribute)attr).RDFProperty;
                }
            }
            return "";
        }


        public string GetLabel(string nombrePropiedad, LanguageEnum pLang)
        {
            Type type = this.GetType();
            PropertyInfo mInfo = type.GetProperty(nombrePropiedad);

            if (mInfo != null)
            {
                Attribute[] attr = Attribute.GetCustomAttributes(mInfo, typeof(LABELAttribute));
                {
                    foreach (Attribute atributo in attr)
                    {
                        if (atributo != null)
                        {
                            if (!((LABELAttribute)atributo).LABEL(pLang).Equals(""))
                            {
                                return ((LABELAttribute)atributo).LABEL(pLang);
                            }
                        }
                    }
                }
            }

            return "";
        }

        public int GetID() { return 0; }
    }

    public class ProjectType : GnossOCBase
    {

        public ProjectType() : base() { }

        public ProjectType(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/ProjectType"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/ProjectType"; } }
        [LABEL(LanguageEnum.es, "http://purl.org/dc/elements/1.1/title")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }

        [LABEL(LanguageEnum.es, "http://purl.org/dc/elements/1.1/identifier")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }
    }

    public class ProjectModality : GnossOCBase
    {

        public ProjectModality() : base() { }

        public ProjectModality(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/ProjectModality"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/ProjectModality"; } }
        [LABEL(LanguageEnum.es, "Modalidad de proyecto")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }

        [LABEL(LanguageEnum.es, "Identificador de modalidad de proyecto")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }
    }

    public class ScientificExperienceProject : GnossOCBase
    {

        public ScientificExperienceProject() : base() { }

        public ScientificExperienceProject(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Bibo_abstract = new Dictionary<LanguageEnum, string>();
            this.Bibo_abstract.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/ontology/bibo/abstract")));

        }

        public virtual string RdfType { get { return "http://w3id.org/roh/ScientificExperienceProject"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/ScientificExperienceProject"; } }
        [LABEL(LanguageEnum.es, "http://purl.org/dc/elements/1.1/title")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }

        [LABEL(LanguageEnum.es, "http://purl.org/dc/elements/1.1/identifier")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [LABEL(LanguageEnum.es, "http://purl.org/ontology/bibo/abstract")]
        [RDFProperty("http://purl.org/ontology/bibo/abstract")]
        public Dictionary<LanguageEnum, string> Bibo_abstract { get; set; } }

    public class Project : GnossOCBase
    {

        public Project() : base() { } 

        public Project(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            SemanticPropertyModel propRoh_isSupportedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isSupportedBy");
            if(propRoh_isSupportedBy != null && propRoh_isSupportedBy.PropertyValues.Count > 0)
            {
                this.Roh_isSupportedBy = new Funding(propRoh_isSupportedBy.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Roh_publicGroupList = new List<Group>();
            SemanticPropertyModel propRoh_publicGroupList = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/publicGroupList");
            if(propRoh_publicGroupList != null && propRoh_publicGroupList.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_publicGroupList.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        Group roh_publicGroupList = new Group(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_publicGroupList.Add(roh_publicGroupList);
                    }
                }
            }
            this.Roh_grantedBy = new List<Organization>();
            SemanticPropertyModel propRoh_grantedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/grantedBy");
            if(propRoh_grantedBy != null && propRoh_grantedBy.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_grantedBy.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        Organization roh_grantedBy = new Organization(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_grantedBy.Add(roh_grantedBy);
                    }
                }
            }
            this.Roh_hasProjectClassification = new List<ProjectClassification>();
            SemanticPropertyModel propRoh_hasProjectClassification = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasProjectClassification");
            if(propRoh_hasProjectClassification != null && propRoh_hasProjectClassification.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasProjectClassification.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        ProjectClassification roh_hasProjectClassification = new ProjectClassification(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_hasProjectClassification.Add(roh_hasProjectClassification);
                    }
                }
            }
            this.Roh_hasResultsProjectClassification = new List<ProjectClassification>();
            SemanticPropertyModel propRoh_hasResultsProjectClassification = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasResultsProjectClassification");
            if(propRoh_hasResultsProjectClassification != null && propRoh_hasResultsProjectClassification.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasResultsProjectClassification.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        ProjectClassification roh_hasResultsProjectClassification = new ProjectClassification(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_hasResultsProjectClassification.Add(roh_hasResultsProjectClassification);
                    }
                }
            }
            this.Roh_mainResearchers = new List<BFO_0000023>();
            SemanticPropertyModel propRoh_mainResearchers = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/mainResearchers");
            if(propRoh_mainResearchers != null && propRoh_mainResearchers.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_mainResearchers.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        BFO_0000023 roh_mainResearchers = new BFO_0000023(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_mainResearchers.Add(roh_mainResearchers);
                    }
                }
            }
            this.Roh_publicAuthorList = new List<Person>();
            SemanticPropertyModel propRoh_publicAuthorList = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/publicAuthorList");
            if(propRoh_publicAuthorList != null && propRoh_publicAuthorList.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_publicAuthorList.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        Person roh_publicAuthorList = new Person(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_publicAuthorList.Add(roh_publicAuthorList);
                    }
                }
            }
            this.Roh_participates = new List<Organization>();
            SemanticPropertyModel propRoh_participates = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/participates");
            if(propRoh_participates != null && propRoh_participates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_participates.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        Organization roh_participates = new Organization(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_participates.Add(roh_participates);
                    }
                }
            }
            SemanticPropertyModel propRoh_conductedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/conductedBy");
            if(propRoh_conductedBy != null && propRoh_conductedBy.PropertyValues.Count > 0)
            {
                this.Roh_conductedBy = new Organization(propRoh_conductedBy.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            SemanticPropertyModel propVivo_geographicFocus = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#geographicFocus");
            if(propVivo_geographicFocus != null && propVivo_geographicFocus.PropertyValues.Count > 0)
            {
                this.Vivo_geographicFocus = new GeographicRegion(propVivo_geographicFocus.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            SemanticPropertyModel propRoh_projectType = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/projectType");
            if(propRoh_projectType != null && propRoh_projectType.PropertyValues.Count > 0)
            {
                this.Roh_projectType = new ProjectType(propRoh_projectType.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Vivo_relates = new List<BFO_0000023>();
            SemanticPropertyModel propVivo_relates = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#relates");
            if(propVivo_relates != null && propVivo_relates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_relates.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        BFO_0000023 vivo_relates = new BFO_0000023(propValue.RelatedEntity,idiomaUsuario);
                        this.Vivo_relates.Add(vivo_relates);
                    }
                }
            }
            SemanticPropertyModel propRoh_modality = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/modality");
            if(propRoh_modality != null && propRoh_modality.PropertyValues.Count > 0)
            {
                this.Roh_modality = new ProjectModality(propRoh_modality.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Roh_relevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/relevantResults"));
            this.Roh_peopleYearNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/peopleYearNumber"));
            this.Roh_durationMonths = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationMonths"));
            this.Roh_geographicFocusOther = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/geographicFocusOther"));
            this.Roh_researchersNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/researchersNumber"));
            this.Roh_durationDays = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationDays"));
            this.Vivo_start= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#start"));
            this.Roh_durationYears = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationYears"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Vivo_end= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#end"));
            this.Vivo_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#description"));
            this.Roh_monetaryAmount = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/monetaryAmount"));
            this.Vivo_abbreviation = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#abbreviation"));
            SemanticPropertyModel propRoh_scientificExperienceProject = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/scientificExperienceProject");
            if(propRoh_scientificExperienceProject != null && propRoh_scientificExperienceProject.PropertyValues.Count > 0)
            {
                this.Roh_scientificExperienceProject = new ScientificExperienceProject(propRoh_scientificExperienceProject.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Roh_classificationCVN = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/classificationCVN"));
            this.Roh_isSynchronized= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isSynchronized"));
            this.Roh_isPublic= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isPublic"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public Project(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propRoh_isSupportedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isSupportedBy");
            if(propRoh_isSupportedBy != null && propRoh_isSupportedBy.PropertyValues.Count > 0)
            {
                this.Roh_isSupportedBy = new Funding(propRoh_isSupportedBy.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Roh_publicGroupList = new List<Group>();
            SemanticPropertyModel propRoh_publicGroupList = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/publicGroupList");
            if(propRoh_publicGroupList != null && propRoh_publicGroupList.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_publicGroupList.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        Group roh_publicGroupList = new Group(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_publicGroupList.Add(roh_publicGroupList);
                    }
                }
            }
            this.Roh_grantedBy = new List<Organization>();
            SemanticPropertyModel propRoh_grantedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/grantedBy");
            if(propRoh_grantedBy != null && propRoh_grantedBy.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_grantedBy.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        Organization roh_grantedBy = new Organization(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_grantedBy.Add(roh_grantedBy);
                    }
                }
            }
            this.Roh_hasProjectClassification = new List<ProjectClassification>();
            SemanticPropertyModel propRoh_hasProjectClassification = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasProjectClassification");
            if(propRoh_hasProjectClassification != null && propRoh_hasProjectClassification.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasProjectClassification.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        ProjectClassification roh_hasProjectClassification = new ProjectClassification(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_hasProjectClassification.Add(roh_hasProjectClassification);
                    }
                }
            }
            this.Roh_hasResultsProjectClassification = new List<ProjectClassification>();
            SemanticPropertyModel propRoh_hasResultsProjectClassification = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasResultsProjectClassification");
            if(propRoh_hasResultsProjectClassification != null && propRoh_hasResultsProjectClassification.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasResultsProjectClassification.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        ProjectClassification roh_hasResultsProjectClassification = new ProjectClassification(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_hasResultsProjectClassification.Add(roh_hasResultsProjectClassification);
                    }
                }
            }
            this.Roh_mainResearchers = new List<BFO_0000023>();
            SemanticPropertyModel propRoh_mainResearchers = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/mainResearchers");
            if(propRoh_mainResearchers != null && propRoh_mainResearchers.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_mainResearchers.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        BFO_0000023 roh_mainResearchers = new BFO_0000023(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_mainResearchers.Add(roh_mainResearchers);
                    }
                }
            }
            this.Roh_publicAuthorList = new List<Person>();
            SemanticPropertyModel propRoh_publicAuthorList = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/publicAuthorList");
            if(propRoh_publicAuthorList != null && propRoh_publicAuthorList.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_publicAuthorList.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        Person roh_publicAuthorList = new Person(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_publicAuthorList.Add(roh_publicAuthorList);
                    }
                }
            }
            this.Roh_participates = new List<Organization>();
            SemanticPropertyModel propRoh_participates = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/participates");
            if(propRoh_participates != null && propRoh_participates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_participates.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        Organization roh_participates = new Organization(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_participates.Add(roh_participates);
                    }
                }
            }
            SemanticPropertyModel propRoh_conductedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/conductedBy");
            if(propRoh_conductedBy != null && propRoh_conductedBy.PropertyValues.Count > 0)
            {
                this.Roh_conductedBy = new Organization(propRoh_conductedBy.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            SemanticPropertyModel propVivo_geographicFocus = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#geographicFocus");
            if(propVivo_geographicFocus != null && propVivo_geographicFocus.PropertyValues.Count > 0)
            {
                this.Vivo_geographicFocus = new GeographicRegion(propVivo_geographicFocus.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            SemanticPropertyModel propRoh_projectType = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/projectType");
            if(propRoh_projectType != null && propRoh_projectType.PropertyValues.Count > 0)
            {
                this.Roh_projectType = new ProjectType(propRoh_projectType.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Vivo_relates = new List<BFO_0000023>();
            SemanticPropertyModel propVivo_relates = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#relates");
            if(propVivo_relates != null && propVivo_relates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_relates.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        BFO_0000023 vivo_relates = new BFO_0000023(propValue.RelatedEntity,idiomaUsuario);
                        this.Vivo_relates.Add(vivo_relates);
                    }
                }
            }
            SemanticPropertyModel propRoh_modality = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/modality");
            if(propRoh_modality != null && propRoh_modality.PropertyValues.Count > 0)
            {
                this.Roh_modality = new ProjectModality(propRoh_modality.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Roh_relevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/relevantResults"));
            this.Roh_peopleYearNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/peopleYearNumber"));
            this.Roh_durationMonths = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationMonths"));
            this.Roh_geographicFocusOther = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/geographicFocusOther"));
            this.Roh_researchersNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/researchersNumber"));
            this.Roh_durationDays = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationDays"));
            this.Vivo_start= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#start"));
            this.Roh_durationYears = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationYears"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Vivo_end= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#end"));
            this.Vivo_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#description"));
            this.Roh_monetaryAmount = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/monetaryAmount"));
            this.Vivo_abbreviation = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#abbreviation"));
            SemanticPropertyModel propRoh_scientificExperienceProject = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/scientificExperienceProject");
            if(propRoh_scientificExperienceProject != null && propRoh_scientificExperienceProject.PropertyValues.Count > 0)
            {
                this.Roh_scientificExperienceProject = new ScientificExperienceProject(propRoh_scientificExperienceProject.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Roh_classificationCVN = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/classificationCVN"));
            this.Roh_isSynchronized= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isSynchronized"));
            this.Roh_isPublic= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isPublic"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public virtual string RdfType { get { return "http://vivoweb.org/ontology/core#Project"; } }
        public virtual string RdfsLabel { get { return "http://vivoweb.org/ontology/core#Project"; } }
        [LABEL(LanguageEnum.es,"http://w3id.org/roh/isSupportedBy")]
        [RDFProperty("http://w3id.org/roh/isSupportedBy")]
        public  Funding Roh_isSupportedBy { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/publicGroupList")]
        [RDFProperty("http://w3id.org/roh/publicGroupList")]
        public  List<Group> Roh_publicGroupList { get; set;}
        public List<string> IdsRoh_publicGroupList { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/grantedBy")]
        [RDFProperty("http://w3id.org/roh/grantedBy")]
        public  List<Organization> Roh_grantedBy { get; set;}
        public List<string> IdsRoh_grantedBy { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/hasProjectClassification")]
        [RDFProperty("http://w3id.org/roh/hasProjectClassification")]
        public  List<ProjectClassification> Roh_hasProjectClassification { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/hasResultsProjectClassification")]
        [RDFProperty("http://w3id.org/roh/hasResultsProjectClassification")]
        public  List<ProjectClassification> Roh_hasResultsProjectClassification { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/mainResearchers")]
        [RDFProperty("http://w3id.org/roh/mainResearchers")]
        public  List<BFO_0000023> Roh_mainResearchers { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/publicAuthorList")]
        [RDFProperty("http://w3id.org/roh/publicAuthorList")]
        public  List<Person> Roh_publicAuthorList { get; set;}
        public List<string> IdsRoh_publicAuthorList { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/participates")]
        [RDFProperty("http://w3id.org/roh/participates")]
        public  List<Organization> Roh_participates { get; set;}
        public List<string> IdsRoh_participates { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/conductedBy")]
        [RDFProperty("http://w3id.org/roh/conductedBy")]
        public  Organization Roh_conductedBy  { get; set;} 
        public string IdRoh_conductedBy  { get; set;} 

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#geographicFocus")]
        [RDFProperty("http://vivoweb.org/ontology/core#geographicFocus")]
        public  GeographicRegion Vivo_geographicFocus  { get; set;} 
        public string IdVivo_geographicFocus  { get; set;} 

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/projectType")]
        [RDFProperty("http://w3id.org/roh/projectType")]
        public  ProjectType Roh_projectType  { get; set;} 
        public string IdRoh_projectType  { get; set;} 

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#relates")]
        [RDFProperty("http://vivoweb.org/ontology/core#relates")]
        public  List<BFO_0000023> Vivo_relates { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/modality")]
        [RDFProperty("http://w3id.org/roh/modality")]
        public  ProjectModality Roh_modality  { get; set;} 
        public string IdRoh_modality  { get; set;} 

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/relevantResults")]
        [RDFProperty("http://w3id.org/roh/relevantResults")]
        public  string Roh_relevantResults { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/peopleYearNumber")]
        [RDFProperty("http://w3id.org/roh/peopleYearNumber")]
        public  int? Roh_peopleYearNumber { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/durationMonths")]
        [RDFProperty("http://w3id.org/roh/durationMonths")]
        public  string Roh_durationMonths { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/geographicFocusOther")]
        [RDFProperty("http://w3id.org/roh/geographicFocusOther")]
        public  string Roh_geographicFocusOther { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/researchersNumber")]
        [RDFProperty("http://w3id.org/roh/researchersNumber")]
        public  int? Roh_researchersNumber { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/durationDays")]
        [RDFProperty("http://w3id.org/roh/durationDays")]
        public  string Roh_durationDays { get; set;}

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#start")]
        [RDFProperty("http://vivoweb.org/ontology/core#start")]
        public  DateTime? Vivo_start { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/durationYears")]
        [RDFProperty("http://w3id.org/roh/durationYears")]
        public  string Roh_durationYears { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/crisIdentifier")]
        [RDFProperty("http://w3id.org/roh/crisIdentifier")]
        public  string Roh_crisIdentifier { get; set;}

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#end")]
        [RDFProperty("http://vivoweb.org/ontology/core#end")]
        public  DateTime? Vivo_end { get; set;}

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#description")]
        [RDFProperty("http://vivoweb.org/ontology/core#description")]
        public  string Vivo_description { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/monetaryAmount")]
        [RDFProperty("http://w3id.org/roh/monetaryAmount")]
        public  float? Roh_monetaryAmount { get; set;}

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#abbreviation")]
        [RDFProperty("http://vivoweb.org/ontology/core#abbreviation")]
        public  string Vivo_abbreviation { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/scientificExperienceProject")]
        [RDFProperty("http://w3id.org/roh/scientificExperienceProject")]
        public  ScientificExperienceProject Roh_scientificExperienceProject  { get; set;} 
        public string IdRoh_scientificExperienceProject  { get; set;} 

        [LABEL(LanguageEnum.es,"Clasificación CVN")]
        [RDFProperty("http://w3id.org/roh/classificationCVN")]
        public  string Roh_classificationCVN { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/isSynchronized")]
        [RDFProperty("http://w3id.org/roh/isSynchronized")]
        public  bool Roh_isSynchronized { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/isPublic")]
        [RDFProperty("http://w3id.org/roh/isPublic")]
        public  bool Roh_isPublic { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/title")]
        [RDFProperty("http://w3id.org/roh/title")]
        public  string Roh_title { get; set;}
    }

    public class GeographicRegion : GnossOCBase
    {

        public GeographicRegion() : base() { }

        public GeographicRegion(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

        }

        public virtual string RdfType { get { return "http://vivoweb.org/ontology/core#GeographicRegion"; } }
        public virtual string RdfsLabel { get { return "http://vivoweb.org/ontology/core#GeographicRegion"; } }
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [LABEL(LanguageEnum.es, "Ámbito geográfico")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }
    }

    public class Modality : GnossOCBase
    {

        public Modality() : base() { }

        public Modality(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/Modality"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/Modality"; } }
        [LABEL(LanguageEnum.es, "Modalidad")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }

        [LABEL(LanguageEnum.es, "Identificador de modalidad")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }
    }

    public class ParticipationType : GnossOCBase
    {

        public ParticipationType() : base() { }

        public ParticipationType(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/ParticipationType"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/ParticipationType"; } }
        [LABEL(LanguageEnum.es, "Tipo de participación")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }

        [LABEL(LanguageEnum.es, "Identificador tipo de participación")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }
    }

    public class BFO_0000023 : GnossOCBase
    {

        public BFO_0000023() : base() { } 

        public BFO_0000023(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Vivo_start= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#start"));
            this.Vivo_end= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#end"));
            this.Foaf_nick = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/nick"));
            SemanticPropertyModel propRdf_member = pSemCmsModel.GetPropertyByPath("http://www.w3.org/1999/02/22-rdf-syntax-ns#member");
            if(propRdf_member != null && propRdf_member.PropertyValues.Count > 0)
            {
                this.Rdf_member = new Person(propRdf_member.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            this.Rdf_comment = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://www.w3.org/1999/02/22-rdf-syntax-ns#comment")).Value;
        }

        public virtual string RdfType { get { return "http://purl.obolibrary.org/obo/BFO_0000023"; } }
        public virtual string RdfsLabel { get { return "http://purl.obolibrary.org/obo/BFO_0000023"; } }

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#start")]
        [RDFProperty("http://vivoweb.org/ontology/core#start")]
        public  DateTime? Vivo_start { get; set;}

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#end")]
        [RDFProperty("http://vivoweb.org/ontology/core#end")]
        public  DateTime? Vivo_end { get; set;}

        [LABEL(LanguageEnum.es,"http://xmlns.com/foaf/0.1/nick")]
        [RDFProperty("http://xmlns.com/foaf/0.1/nick")]
        public  string Foaf_nick { get; set;}

        [LABEL(LanguageEnum.es,"http://www.w3.org/1999/02/22-rdf-syntax-ns#member")]
        [RDFProperty("http://www.w3.org/1999/02/22-rdf-syntax-ns#member")]
        public  Person Rdf_member  { get; set;} 
        public string IdRdf_member  { get; set;} 

        [LABEL(LanguageEnum.es,"http://www.w3.org/1999/02/22-rdf-syntax-ns#comment")]
        [RDFProperty("http://www.w3.org/1999/02/22-rdf-syntax-ns#comment")]
        public  int Rdf_comment { get; set;}
    }

    public class Person : GnossOCBase
    {

        public Person() : base() { }

        public Person(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            SemanticPropertyModel propRoh_hasRole = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasRole");
            if (propRoh_hasRole != null && propRoh_hasRole.PropertyValues.Count > 0)
            {
                this.Roh_hasRole = new Organization(propRoh_hasRole.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_ORCID = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/ORCID"));
            SemanticPropertyModel propFoaf_nick = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/nick");
            this.Foaf_nick = new List<string>();
            if (propFoaf_nick != null && propFoaf_nick.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_nick.PropertyValues)
                {
                    this.Foaf_nick.Add(propValue.Value);
                }
            }
            this.Foaf_firstName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/firstName"));
            this.Foaf_name = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/name"));
            this.Foaf_lastName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/lastName"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
        }

        public Person(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propRoh_hasRole = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasRole");
            if (propRoh_hasRole != null && propRoh_hasRole.PropertyValues.Count > 0)
            {
                this.Roh_hasRole = new Organization(propRoh_hasRole.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_ORCID = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/ORCID"));
            SemanticPropertyModel propFoaf_nick = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/nick");
            this.Foaf_nick = new List<string>();
            if (propFoaf_nick != null && propFoaf_nick.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_nick.PropertyValues)
                {
                    this.Foaf_nick.Add(propValue.Value);
                }
            }
            this.Foaf_firstName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/firstName"));
            this.Foaf_name = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/name"));
            this.Foaf_lastName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/lastName"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
        }

        public virtual string RdfType { get { return "http://xmlns.com/foaf/0.1/Person"; } }
        public virtual string RdfsLabel { get { return "http://xmlns.com/foaf/0.1/Person"; } }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://w3id.org/roh/crisIdentifier")]
        public string Roh_crisIdentifier { get; set; }

        [LABEL(LanguageEnum.es, "Tiene rol")]
        [RDFProperty("http://w3id.org/roh/hasRole")]
        public Organization Roh_hasRole { get; set; }
        public string IdRoh_hasRole { get; set; }

        [LABEL(LanguageEnum.es, "ORCID")]
        [RDFProperty("http://w3id.org/roh/ORCID")]
        public string Roh_ORCID { get; set; }

        [LABEL(LanguageEnum.es, "Firma")]
        [RDFProperty("http://xmlns.com/foaf/0.1/nick")]
        public List<string> Foaf_nick { get; set; }

        [LABEL(LanguageEnum.es, "Nombre")]
        [RDFProperty("http://xmlns.com/foaf/0.1/firstName")]
        public string Foaf_firstName { get; set; }

        [LABEL(LanguageEnum.es, "Nombre completo")]
        [RDFProperty("http://xmlns.com/foaf/0.1/name")]
        public string Foaf_name { get; set; }

        [LABEL(LanguageEnum.es, "Apellidos")]
        [RDFProperty("http://xmlns.com/foaf/0.1/lastName")]
        public string Foaf_lastName { get; set; }
    }

    public class Concept : GnossOCBase
    {

        public Concept() : base() { }

        public Concept(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Skos_broader = new List<Concept>();
            SemanticPropertyModel propSkos_broader = pSemCmsModel.GetPropertyByPath("http://www.w3.org/2008/05/skos#broader");
            if (propSkos_broader != null && propSkos_broader.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propSkos_broader.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        Concept skos_broader = new Concept(propValue.RelatedEntity, idiomaUsuario);
                        this.Skos_broader.Add(skos_broader);
                    }
                }
            }
            this.Skos_narrower = new List<Concept>();
            SemanticPropertyModel propSkos_narrower = pSemCmsModel.GetPropertyByPath("http://www.w3.org/2008/05/skos#narrower");
            if (propSkos_narrower != null && propSkos_narrower.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propSkos_narrower.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        Concept skos_narrower = new Concept(propValue.RelatedEntity, idiomaUsuario);
                        this.Skos_narrower.Add(skos_narrower);
                    }
                }
            }
            this.Skos_symbol = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://www.w3.org/2008/05/skos#symbol"));
            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Skos_prefLabel = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://www.w3.org/2008/05/skos#prefLabel"));
            this.Dc_source = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/source"));
        }

        public virtual string RdfType { get { return "http://www.w3.org/2008/05/skos#Concept"; } }
        public virtual string RdfsLabel { get { return "http://www.w3.org/2008/05/skos#Concept"; } }

        [LABEL(LanguageEnum.es, "Genérico")]
        [RDFProperty("http://www.w3.org/2008/05/skos#broader")]
        public List<Concept> Skos_broader { get; set; }

        [LABEL(LanguageEnum.es, "Específico")]
        [RDFProperty("http://www.w3.org/2008/05/skos#narrower")]
        public List<Concept> Skos_narrower { get; set; }

        [LABEL(LanguageEnum.es, "Símbolo")]
        [RDFProperty("http://www.w3.org/2008/05/skos#symbol")]
        public string Skos_symbol { get; set; }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [LABEL(LanguageEnum.es, "Etiqueta preferente")]
        [RDFProperty("http://www.w3.org/2008/05/skos#prefLabel")]
        public string Skos_prefLabel { get; set; }

        [LABEL(LanguageEnum.es, "Fuente")]
        [RDFProperty("http://purl.org/dc/elements/1.1/source")]
        public string Dc_source { get; set; }

    }

    public class ProjectClassification : GnossOCBase
    {

        public ProjectClassification() : base() { } 

        public ProjectClassification(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Roh_projectClassificationNode = new List<Concept>();
            SemanticPropertyModel propRoh_projectClassificationNode = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/projectClassificationNode");
            if(propRoh_projectClassificationNode != null && propRoh_projectClassificationNode.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_projectClassificationNode.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        Concept roh_projectClassificationNode = new Concept(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_projectClassificationNode.Add(roh_projectClassificationNode);
                    }
                }
            }
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/ProjectClassification"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/ProjectClassification"; } }

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/projectClassificationNode")]
        [RDFProperty("http://w3id.org/roh/projectClassificationNode")]
        public  List<Concept> Roh_projectClassificationNode { get; set;}
        public List<string> IdsRoh_projectClassificationNode { get; set;}
    }

    public class Funding : GnossOCBase
    {

        public Funding() : base() { } 

        public Funding(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Roh_fundedBy = new List<FundingProgram>();
            SemanticPropertyModel propRoh_fundedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/fundedBy");
            if(propRoh_fundedBy != null && propRoh_fundedBy.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_fundedBy.PropertyValues)
                {
                    if(propValue.RelatedEntity!=null){
                        FundingProgram roh_fundedBy = new FundingProgram(propValue.RelatedEntity,idiomaUsuario);
                        this.Roh_fundedBy.Add(roh_fundedBy);
                    }
                }
            }
            this.Roh_mixedPercentage = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/mixedPercentage"));
            this.Roh_creditPercentage = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/creditPercentage"));
            this.Vivo_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#identifier"));
            this.Roh_grantsPercentage = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/grantsPercentage"));
            this.Roh_monetaryAmount = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/monetaryAmount"));
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/Funding"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/Funding"; } }

        [RDFProperty("http://w3id.org/roh/fundedBy")]
        public  List<FundingProgram> Roh_fundedBy { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/mixedPercentage")]
        [RDFProperty("http://w3id.org/roh/mixedPercentage")]
        public  float? Roh_mixedPercentage { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/creditPercentage")]
        [RDFProperty("http://w3id.org/roh/creditPercentage")]
        public  float? Roh_creditPercentage { get; set;}

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#identifier")]
        [RDFProperty("http://vivoweb.org/ontology/core#identifier")]
        public  string Vivo_identifier { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/grantsPercentage")]
        [RDFProperty("http://w3id.org/roh/grantsPercentage")]
        public  float? Roh_grantsPercentage { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/monetaryAmount")]
        [RDFProperty("http://w3id.org/roh/monetaryAmount")]
        public  float? Roh_monetaryAmount { get; set;}
    }

    public class FundingProgram : GnossOCBase
    {

        public FundingProgram() : base() { } 

        public FundingProgram(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propRoh_promotedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/promotedBy");
            if(propRoh_promotedBy != null && propRoh_promotedBy.PropertyValues.Count > 0)
            {
                this.Roh_promotedBy = new Organization(propRoh_promotedBy.PropertyValues[0].RelatedEntity,idiomaUsuario);
            }
            SemanticPropertyModel propVivo_identifier = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#identifier");
            this.Vivo_identifier = new List<string>();
            if (propVivo_identifier != null && propVivo_identifier.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_identifier.PropertyValues)
                {
                    this.Vivo_identifier.Add(propValue.Value);
                }
            }
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/FundingProgram"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/FundingProgram"; } }

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/promotedBy")]
        [RDFProperty("http://w3id.org/roh/promotedBy")]
        public  Organization Roh_promotedBy  { get; set;} 
        public string IdRoh_promotedBy  { get; set;} 

        [LABEL(LanguageEnum.es,"http://vivoweb.org/ontology/core#identifier")]
        [RDFProperty("http://vivoweb.org/ontology/core#identifier")]
        public  List<string> Vivo_identifier { get; set;}

        [LABEL(LanguageEnum.es,"http://w3id.org/roh/title")]
        [RDFProperty("http://w3id.org/roh/title")]
        public  string Roh_title { get; set;}

    }

    public class Organization : GnossOCBase
    {

        public Organization() : base() { }

        public Organization(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            SemanticPropertyModel propVcard_hasAddress = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasAddress");
            if (propVcard_hasAddress != null && propVcard_hasAddress.PropertyValues.Count > 0)
            {
                this.Vcard_hasAddress = new Address(propVcard_hasAddress.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propDc_type = pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/type");
            if (propDc_type != null && propDc_type.PropertyValues.Count > 0)
            {
                this.Dc_type = new OrganizationType(propDc_type.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Roh_otherTypeMoreInfo = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/otherTypeMoreInfo"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public Organization(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propVcard_hasAddress = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasAddress");
            if (propVcard_hasAddress != null && propVcard_hasAddress.PropertyValues.Count > 0)
            {
                this.Vcard_hasAddress = new Address(propVcard_hasAddress.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propDc_type = pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/type");
            if (propDc_type != null && propDc_type.PropertyValues.Count > 0)
            {
                this.Dc_type = new OrganizationType(propDc_type.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Roh_otherTypeMoreInfo = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/otherTypeMoreInfo"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public virtual string RdfType { get { return "http://xmlns.com/foaf/0.1/Organization"; } }
        public virtual string RdfsLabel { get { return "http://xmlns.com/foaf/0.1/Organization"; } }
        [LABEL(LanguageEnum.es, "Dirección")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#hasAddress")]
        public Address Vcard_hasAddress { get; set; }

        [LABEL(LanguageEnum.es, "Tipo de entidad")]
        [RDFProperty("http://purl.org/dc/elements/1.1/type")]
        public OrganizationType Dc_type { get; set; }
        public string IdDc_type { get; set; }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://w3id.org/roh/crisIdentifier")]
        public string Roh_crisIdentifier { get; set; }

        [LABEL(LanguageEnum.es, "Tipo de entidad, otros")]
        [RDFProperty("http://w3id.org/roh/otherTypeMoreInfo")]
        public string Roh_otherTypeMoreInfo { get; set; }

        [LABEL(LanguageEnum.es, "Nombre")]
        [RDFProperty("http://w3id.org/roh/title")]
        public string Roh_title { get; set; }
    }

    public class Address : GnossOCBase
    {

        public Address() : base() { }

        public Address(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propVcard_hasRegion = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasRegion");
            if (propVcard_hasRegion != null && propVcard_hasRegion.PropertyValues.Count > 0)
            {
                this.Vcard_hasRegion = new Feature(propVcard_hasRegion.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propVcard_hasCountryName = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasCountryName");
            if (propVcard_hasCountryName != null && propVcard_hasCountryName.PropertyValues.Count > 0)
            {
                this.Vcard_hasCountryName = new Feature(propVcard_hasCountryName.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Vcard_locality = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#locality"));
        }

        public virtual string RdfType { get { return "https://www.w3.org/2006/vcard/ns#Address"; } }
        public virtual string RdfsLabel { get { return "https://www.w3.org/2006/vcard/ns#Address"; } }

        [LABEL(LanguageEnum.es, "C. Autón./Reg. entidad")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#hasRegion")]
        public Feature Vcard_hasRegion { get; set; }
        public string IdVcard_hasRegion { get; set; }

        [LABEL(LanguageEnum.es, "País entidad")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#hasCountryName")]
        public Feature Vcard_hasCountryName { get; set; }
        public string IdVcard_hasCountryName { get; set; }

        [LABEL(LanguageEnum.es, "Ciudad entidad")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#locality")]
        public string Vcard_locality { get; set; }
    }

    public class Feature : GnossOCBase
    {

        public Feature() : base() { }

        public Feature(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propGn_parentFeature = pSemCmsModel.GetPropertyByPath("http://www.geonames.org/ontology#parentFeature");
            if (propGn_parentFeature != null && propGn_parentFeature.PropertyValues.Count > 0)
            {
                this.Gn_parentFeature = new Feature(propGn_parentFeature.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Gn_name = new Dictionary<LanguageEnum, string>();
            this.Gn_name.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://www.geonames.org/ontology#name")));

            this.Gn_featureCode = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://www.geonames.org/ontology#featureCode"));
        }

        public virtual string RdfType { get { return "http://www.geonames.org/ontology#Feature"; } }
        public virtual string RdfsLabel { get { return "http://www.geonames.org/ontology#Feature"; } }
        [LABEL(LanguageEnum.es, "Rasgo padre")]
        [RDFProperty("http://www.geonames.org/ontology#parentFeature")]
        public Feature Gn_parentFeature { get; set; }
        public string IdGn_parentFeature { get; set; }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [LABEL(LanguageEnum.es, "Nombre")]
        [RDFProperty("http://www.geonames.org/ontology#name")]
        public Dictionary<LanguageEnum, string> Gn_name { get; set; }

        [LABEL(LanguageEnum.es, "Código de rasgo")]
        [RDFProperty("http://www.geonames.org/ontology#featureCode")]
        public string Gn_featureCode { get; set; }
    }

    public class OrganizationType : GnossOCBase
    {

        public OrganizationType() : base() { }

        public OrganizationType(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

        }

        public virtual string RdfType { get { return "http://w3id.org/roh/OrganizationType"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/OrganizationType"; } }
        [LABEL(LanguageEnum.es, "Identificador del tipo de entidad")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [LABEL(LanguageEnum.es, "Tipo de entidad")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }
    }

    public class Group : GnossOCBase
    {

        public Group() : base() { }

        public Group(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            SemanticPropertyModel propVivo_affiliatedOrganization = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#affiliatedOrganization");
            if (propVivo_affiliatedOrganization != null && propVivo_affiliatedOrganization.PropertyValues.Count > 0)
            {
                this.Vivo_affiliatedOrganization = new Organization(propVivo_affiliatedOrganization.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_mainResearcher = new List<BFO_0000023>();
            SemanticPropertyModel propRoh_mainResearcher = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/mainResearcher");
            if (propRoh_mainResearcher != null && propRoh_mainResearcher.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_mainResearcher.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        BFO_0000023 roh_mainResearcher = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_mainResearcher.Add(roh_mainResearcher);
                    }
                }
            }
            this.Foaf_member = new List<BFO_0000023>();
            SemanticPropertyModel propFoaf_member = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/member");
            if (propFoaf_member != null && propFoaf_member.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_member.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        BFO_0000023 foaf_member = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Foaf_member.Add(foaf_member);
                    }
                }
            }
            SemanticPropertyModel propRoh_colaborationTypeGroup = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/colaborationTypeGroup");

            this.Roh_relevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/relevantResults"));
            SemanticPropertyModel propRoh_lineResearch = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/lineResearch");
            this.Roh_lineResearch = new List<string>();
            if (propRoh_lineResearch != null && propRoh_lineResearch.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_lineResearch.PropertyValues)
                {
                    this.Roh_lineResearch.Add(propValue.Value);
                }
            }
            this.Roh_publicationsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/publicationsNumber"));
            this.Roh_durationDays = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationDays"));
            this.Roh_normalizedCode = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/normalizedCode"));
            this.Vivo_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#description"));
            this.Roh_otherRelevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/otherRelevantResults"));
            this.Roh_durationMonths = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationMonths"));
            this.Roh_directedPostdocsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/directedPostdocsNumber"));
            this.Roh_researchersNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/researchersNumber"));
            this.Roh_durationYears = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationYears"));
            this.Roh_projectsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/projectsNumber"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Roh_foundationDate= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/foundationDate"));
            this.Roh_directedThesisNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/directedThesisNumber"));
            this.Roh_isPublic= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isPublic"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public Group(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propVivo_affiliatedOrganization = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#affiliatedOrganization");
            if (propVivo_affiliatedOrganization != null && propVivo_affiliatedOrganization.PropertyValues.Count > 0)
            {
                this.Vivo_affiliatedOrganization = new Organization(propVivo_affiliatedOrganization.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_mainResearcher = new List<BFO_0000023>();
            SemanticPropertyModel propRoh_mainResearcher = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/mainResearcher");
            if (propRoh_mainResearcher != null && propRoh_mainResearcher.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_mainResearcher.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        BFO_0000023 roh_mainResearcher = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_mainResearcher.Add(roh_mainResearcher);
                    }
                }
            }
            this.Foaf_member = new List<BFO_0000023>();
            SemanticPropertyModel propFoaf_member = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/member");
            if (propFoaf_member != null && propFoaf_member.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_member.PropertyValues)
                {
                    if (propValue.RelatedEntity!=null)
                    {
                        BFO_0000023 foaf_member = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Foaf_member.Add(foaf_member);
                    }
                }
            }
            SemanticPropertyModel propRoh_colaborationTypeGroup = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/colaborationTypeGroup");

            this.Roh_relevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/relevantResults"));
            SemanticPropertyModel propRoh_lineResearch = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/lineResearch");
            this.Roh_lineResearch = new List<string>();
            if (propRoh_lineResearch != null && propRoh_lineResearch.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_lineResearch.PropertyValues)
                {
                    this.Roh_lineResearch.Add(propValue.Value);
                }
            }
            this.Roh_publicationsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/publicationsNumber"));
            this.Roh_durationDays = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationDays"));
            this.Roh_normalizedCode = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/normalizedCode"));
            this.Vivo_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#description"));
            this.Roh_otherRelevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/otherRelevantResults"));
            this.Roh_durationMonths = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationMonths"));
            this.Roh_directedPostdocsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/directedPostdocsNumber"));
            this.Roh_researchersNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/researchersNumber"));
            this.Roh_durationYears = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationYears"));
            this.Roh_projectsNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/projectsNumber"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Roh_foundationDate= GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/foundationDate"));
            this.Roh_directedThesisNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/directedThesisNumber"));
            this.Roh_isPublic= GetBooleanPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isPublic"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public virtual string RdfType { get { return "http://xmlns.com/foaf/0.1/Group"; } }
        public virtual string RdfsLabel { get { return "http://xmlns.com/foaf/0.1/Group"; } }
        [LABEL(LanguageEnum.es, "Entidad de afiliación")]
        [RDFProperty("http://vivoweb.org/ontology/core#affiliatedOrganization")]
        public Organization Vivo_affiliatedOrganization { get; set; }
        public string IdVivo_affiliatedOrganization { get; set; }

        [LABEL(LanguageEnum.es, "Investigador principal")]
        [RDFProperty("http://w3id.org/roh/mainResearcher")]
        public List<BFO_0000023> Roh_mainResearcher { get; set; }

        [LABEL(LanguageEnum.es, "Miembros")]
        [RDFProperty("http://xmlns.com/foaf/0.1/member")]
        public List<BFO_0000023> Foaf_member { get; set; }

        [LABEL(LanguageEnum.es, "Resultados relevantes")]
        [RDFProperty("http://w3id.org/roh/relevantResults")]
        public string Roh_relevantResults { get; set; }

        [RDFProperty("http://w3id.org/roh/lineResearch")]
        public List<string> Roh_lineResearch { get; set; }

        [LABEL(LanguageEnum.es, "Número de publicaciones")]
        [RDFProperty("http://w3id.org/roh/publicationsNumber")]
        public int? Roh_publicationsNumber { get; set; }

        [LABEL(LanguageEnum.es, "Duración (días)")]
        [RDFProperty("http://w3id.org/roh/durationDays")]
        public string Roh_durationDays { get; set; }

        [LABEL(LanguageEnum.es, "Código normalizado")]
        [RDFProperty("http://w3id.org/roh/normalizedCode")]
        public string Roh_normalizedCode { get; set; }

        [LABEL(LanguageEnum.es, "Descripción")]
        [RDFProperty("http://vivoweb.org/ontology/core#description")]
        public string Vivo_description { get; set; }

        [LABEL(LanguageEnum.es, "Resultados relevantes, otros")]
        [RDFProperty("http://w3id.org/roh/otherRelevantResults")]
        public string Roh_otherRelevantResults { get; set; }

        [LABEL(LanguageEnum.es, "Duración (meses)")]
        [RDFProperty("http://w3id.org/roh/durationMonths")]
        public string Roh_durationMonths { get; set; }

        [LABEL(LanguageEnum.es, "Número de postdoctorados dirigidos")]
        [RDFProperty("http://w3id.org/roh/directedPostdocsNumber")]
        public int? Roh_directedPostdocsNumber { get; set; }

        [LABEL(LanguageEnum.es, "Número de investigadores")]
        [RDFProperty("http://w3id.org/roh/researchersNumber")]
        public int? Roh_researchersNumber { get; set; }

        [LABEL(LanguageEnum.es, "Duración (años)")]
        [RDFProperty("http://w3id.org/roh/durationYears")]
        public string Roh_durationYears { get; set; }

        [LABEL(LanguageEnum.es, "Número de proyectos")]
        [RDFProperty("http://w3id.org/roh/projectsNumber")]
        public int? Roh_projectsNumber { get; set; }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://w3id.org/roh/crisIdentifier")]
        public string Roh_crisIdentifier { get; set; }

        [LABEL(LanguageEnum.es, "Fecha de inicio")]
        [RDFProperty("http://w3id.org/roh/foundationDate")]
        public DateTime? Roh_foundationDate { get; set; }

        [LABEL(LanguageEnum.es, "Número de tesis dirigidas")]
        [RDFProperty("http://w3id.org/roh/directedThesisNumber")]
        public int? Roh_directedThesisNumber { get; set; }

        [LABEL(LanguageEnum.es, "http://w3id.org/roh/isPublic")]
        [RDFProperty("http://w3id.org/roh/isPublic")]
        public bool Roh_isPublic { get; set; }

        [LABEL(LanguageEnum.es, "Nombre del grupo")]
        [RDFProperty("http://w3id.org/roh/title")]
        public string Roh_title { get; set; }
    }
}
