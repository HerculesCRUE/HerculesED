@*[security|||project|||hercules]*@
@using System.Reflection;
@model ResourceViewModel
@{
    ResourceModel FichaDocumento = Model.Resource;
    CommunityModel Comunidad = Html.GetComunidad();
    UserIdentityModel IdentidadActual = Html.GetIdentidadActual();
    Html.AddBodyClass(" ProjectModel ");
    if (FichaDocumento.ItemLinkedFotoVersion != 0 && !string.IsNullOrEmpty(FichaDocumento.ItemLinked.ToString()) && FichaDocumento.ItemLinked != Guid.Empty)
    {
        string urlPersonalizacion = $"{Html.GetBaseUrlContent()}/{Es.Riam.Util.UtilArchivos.ContentOntologias}/Archivos/{FichaDocumento.ItemLinked.ToString().Substring(0, 3)}";
        Html.GetListaJS().Add($"{urlPersonalizacion}/{FichaDocumento.ItemLinked.ToString()}.js?v= {FichaDocumento.ItemLinkedFotoVersion}");
        Html.GetListaCSS().Add($"{urlPersonalizacion}/{FichaDocumento.ItemLinked.ToString()}.css?v= {FichaDocumento.ItemLinkedFotoVersion}");
    }
    SemanticResourceModel semCmsModel = Model.SemanticFrom;
    GnossOCBase.LanguageEnum idiomaUsuario = (GnossOCBase.LanguageEnum)Enum.Parse(typeof(GnossOCBase.LanguageEnum), Html.GetUtilIdiomas().LanguageCode.ToLower());
    Project pProject = new Project(semCmsModel, idiomaUsuario);
}

<div class="col col-12 col-breadcrumb">
    <ul>
        <li>
            <a href="./home.php">Home</a>
        </li>
        <li>
            <a href="javascript: void(0);">Proyectos</a>
        </li>
        <li>
            @pProject.Roh_title
        </li>
    </ul>
</div>

<div class="col col-12 col-xl-12 col-contenido">
    <div class="wrapCol">
        <div class="cabecera-ficha cabecera-proyecto">
            <div class="user-miniatura">
                <div class="nombre-usuario-wrap">
                    <p class="nombre">
                        @pProject.Roh_title
                    </p>
                    <p class="nombre-completo">
                        TODO: Facultad de Ciencias Sociales y Humanas, DeustoTech BAJA, Deusto Business School, Facultad de Ingeniería, Facultad de Derecho
                    </p>
                </div>
                <div class="acciones-usuario-wrap">
                    <ul class="no-list-style d-flex">
                        <li>
                            <a class="btn btn-outline-grey d-none d-xl-flex btn-citar">
                                <span class="citar">
                                    <span class="material-icons">format_quote</span>
                                    <span>Citar</span>
                                </span>
                            </a>
                        </li>
                        <li>
                            <a class="btn btn-outline-grey d-none d-xl-flex">
                                <span class="material-icons">folder</span>
                                <span>Guardar en Espacio Personal</span>
                            </a>
                        </li>
                        <li>
                            <div class="acciones-recurso-listado">
                                <div class="dropdown">
                                    <a href="#" class="dropdown-toggle btn btn-outline-grey no-flecha" role="button" id="dropdownMasOpciones" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="material-icons">more_vert</span>
                                    </a>
                                    <div class="dropdown-menu basic-dropdown dropdown-icons dropdown-menu-right" aria-labelledby="dropdownMasOpciones">
                                        <p class="dropdown-title">Acciones</p>
                                        <ul class="no-list-style">
                                            <li>
                                                <a class="item-dropdown">
                                                    <span class="texto">Añadir áreas de conocimiento</span>
                                                </a>
                                            </li>
                                            <li>
                                                <a class="item-dropdown">
                                                    <span class="texto">Añadir etiquetas</span>
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="title-wrap">
                <p>Información general</p>
            </div>
            <div class="group-wrap">
                <div class="bloque">
                    <div class="label">@Html.Translate("ENTIDAD_FINANCIADORA")</div>
                    <div class="value">TODO: Entidad financiadora</div>
                </div>
                <div class="bloque">
                    <div class="label">@Html.Translate("PROGRAMA_FINANCIACION")</div>
                    <div class="value">TODO: Programa de financiación</div>
                </div>
                <div class="bloque">
                    <div class="label">@Html.Translate("CODIGO_PROYECTO")</div>
                    <div class="value">TODO: Código</div>
                </div>
                <div class="bloque">
                    <div class="label">@Html.Translate("PRESUPUESTO")</div>
                    <div class="value">TODO: Presupuesto</div>
                </div>
                <div class="bloque">
                    <div class="label">@Html.Translate("ESTADO")</div>
                    <div class="value">TODO: Concedido</div>
                </div>
                <div class="bloque">
                    <div class="label">@Html.Translate("FECHA_INICIO")</div>
                    <div class="value">
                        @{
                            string anioInicio = pProject.Vivo_start.Value.Year.ToString();
                            string mesInicio = pProject.Vivo_start.Value.Month.ToString();
                            string diaInicio = pProject.Vivo_start.Value.Day.ToString();
                            string fechaInicio = diaInicio + "/" + mesInicio + "/" + anioInicio;
                            @fechaInicio
                        }
                    </div>
                </div>
                <div class="bloque">
                    <div class="label">@Html.Translate("FECHA_FIN")</div>
                    <div class="value">
                        @{
                            string anioFin = pProject.Vivo_end.Value.Year.ToString();
                            string mesFin = pProject.Vivo_end.Value.Month.ToString();
                            string diaFin = pProject.Vivo_end.Value.Day.ToString();
                            string fechaFin = diaFin + "/" + mesFin + "/" + anioFin;
                            @fechaFin
                        }
                    </div>
                </div>
                <div class="bloque">
                </div>
                <div class="bloque">
                    <div class="label">@Html.Translate("INVESTIGADOR_PRINCIPAL")</div>
                    <div class="value">
                        @{
                            string nombres = string.Empty;

                            if (pProject.Vivo_relates != null && pProject.Vivo_relates.Count > 0)
                            {
                                foreach (BFO_0000023 persona in pProject.Vivo_relates)
                                {
                                    nombres += persona.Roh_roleOf.Foaf_name + ", ";
                                }
                            }
                        }
                        @nombres.Substring(0, nombres.Length - 2)
                    </div>
                </div>
                <!--
                <div class="bloque">
                    <div class="label">@Html.Translate("COINVESTIGADOR_PRINCIPAL")</div>
                    <div class="value">TODO: Coinvestigador principal</div>
                </div>
                -->
            </div>
            <div class="descripcion">
                <p>
                    TODO: Descripción del proyecto.
                </p>
            </div>
        </div>
        <div class="contenido-ficha contenido-proyecto">
            <div class="tab-paneles-ficha">
                <ul class="nav nav-tabs" id="navegacion-recurso" role="tablist">
                    <li class="nav-item" role="presentation">
                        <a class="nav-link active" id="participantes-tab" data-toggle="tab" href="#participantes-panel" role="tab" aria-controls="participantes-panel" aria-selected="true">
                            <div class="bloque">
                                <div class="label">Participantes</div>
                                <div class="data"></div>
                            </div>
                        </a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="publicaciones-tab" data-toggle="tab" href="#publicaciones-panel" role="tab" aria-controls="publicaciones-panel" aria-selected="false">
                            <div class="bloque">
                                <div class="label">Publicaciones</div>
                                <div class="data"></div>
                            </div>
                        </a>
                    </li>
                </ul>
                <div class="tab-content" id="paneles-recurso">
                    <div class="tab-pane fade show active" id="participantes-panel" role="tabpanel" aria-labelledby="referencias-tab">
                        <div class="row">
                            <div class="col col-12 col-grafo mb-5">
                                <div class="wrapCol" id="graficaCytoscape" style="width: 1224px; height: 500px;"></div>
                            </div>
                            <div class="col col-12 col-section-title font-weight-bold">
                                <div class="wrapCol">
                                    <p>Personas</p>
                                </div>
                            </div>

                            <div class="col col-12 col-xl-3 col-facetas col-lateral izquierda">
                                <!-- Facetas -->
                                <div class="wrapCol">
                                    <div class="header-facetas">
                                        <p>@Html.Translate("FILTROS")</p>
                                        <a href="javascript: void(0);" class="cerrar">
                                            <span class="material-icons">close</span>
                                        </a>
                                    </div>
                                    <div @*id="panFacetas"*@ class="facetas-wrap pmd-scrollbar mCustomScrollbar panFacetasAux" data-mcs-theme="minimal-dark"></div>
                                </div>
                            </div>

                            <div class="col col-12 col-xl-9 col-contenido derecha">
                                <div class="wrapCol">
                                    <div class="header-contenido">
                                        <!-- Número de resultados -->
                                        <div class="h1-container">
                                            <h1>Personas <span @*id="panNumResultados"*@ class="numResultados panNumResultadosAux"></span></h1>
                                        </div>

                                        <!-- Desplegables derecha -->
                                        <div class="acciones-listado">
                                            <div class="wrap">

                                                <!-- Filtros de ordenación -->
                                                <div class="ordenar dropdown">
                                                    <a class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                                        <span class="material-icons">swap_vert</span>
                                                        <span class="texto">Ordenado por </span>
                                                    </a>
                                                    <div class="dropdown-menu basic-dropdown dropdown-menu-right" style="will-change: transform;">
                                                        <a class="item-dropdown filtro">Fecha</a>
                                                        <a class="item-dropdown filtro">Popularidad</a>
                                                    </div>
                                                </div>

                                                <!-- Modo de visualización -->
                                                <div class="visualizacion dropdown">
                                                    <a class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                                        <span class="material-icons">view_agenda</span>
                                                        <span class="texto">Visualizar</span>
                                                    </a>
                                                    <div class="dropdown-menu basic-dropdown .dropdown-icons dropdown-menu-right" style="will-change: transform;">
                                                        <a class="item-dropdown aCompacView" data-class-resource-list="compacView">
                                                            <span class="material-icons">reorder</span>
                                                            <span class="texto">Compacto</span>
                                                        </a>
                                                        <a class="item-dropdown aListView" data-class-resource-list="listView">
                                                            <span class="material-icons">view_agenda</span>
                                                            <span class="texto">Lista</span>
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Etiquetas de filtros -->
                                        <div class="etiquetas panFiltrosAux" @*id="panFiltros"*@>
                                            <ul class="facetedSearch tags panListadoFiltrosAux" @*id="panListadoFiltros"*@>
                                                <li class="borrarFiltros-wrap">
                                                    <a class="borrarFiltros" href="#" onclick="event.preventDefault();LimpiarFiltros();">Borrar</a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>

                                    <!-- Resultados -->
                                    <div class="resource-list listView resource-list-buscador">
                                        <div @*id="panResultados"*@ class="resource-list-wrap panResultadosAux">
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="tab-pane fade" id="publicaciones-panel" role="tabpanel" aria-labelledby="publicaciones-tab">
                        <div class="row">
                            <div class="col col-12 col-section-title font-weight-bold">
                                <div class="wrapCol">
                                    <p>Evolución temporal publicaciones relacionadas</p>
                                </div>
                            </div>
                            <div class="col col-12 col-chart">
                                <div class="wrapCol">
                                    <div class="chart-wrap chart-publicaciones">
                                    </div>
                                </div>
                            </div>
                            <div class="col col-12 col-section-title font-weight-bold">
                                <div class="wrapCol">
                                    <p>Listado de publicaciones</p>
                                </div>
                            </div>
                            <div class="col col-12 col-xl-3 col-facetas col-lateral izquierda">
                                <!-- Facetas -->
                                <div class="wrapCol">
                                    <div class="header-facetas">
                                        <p>Filtros</p>
                                        <a href="javascript: void(0);" class="cerrar">
                                            <span class="material-icons">close</span>
                                        </a>
                                    </div>
                                    <div @*id="panFacetas"*@ class="facetas-wrap pmd-scrollbar mCustomScrollbar panFacetasAux" data-mcs-theme="minimal-dark"></div>
                                </div>
                            </div>
                            <div class="col col-12 col-xl-9 col-contenido derecha">
                                <div class="wrapCol">
                                    <div class="header-contenido">
                                        <!-- Número de resultados -->
                                        <div class="h1-container">
                                            <h1>@Html.Translate("PUBLICACIONES") <span @*id="panNumResultados"*@ class="numResultados panNumResultadosAux"></span></h1>
                                        </div>

                                        <!-- Desplegables derecha -->
                                        <div class="acciones-listado">
                                            <div class="wrap">

                                                <!-- Filtros de ordenación -->
                                                <div class="ordenar dropdown">
                                                    <a class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                                        <span class="material-icons">swap_vert</span>
                                                        <span class="texto">Ordenado por </span>
                                                    </a>
                                                    <div class="dropdown-menu basic-dropdown dropdown-menu-right" style="will-change: transform;">
                                                        <a class="item-dropdown filtro">Fecha</a>
                                                        <a class="item-dropdown filtro">Popularidad</a>
                                                    </div>
                                                </div>

                                                <!-- Modo de visualización -->
                                                <div class="visualizacion dropdown">
                                                    <a class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                                        <span class="material-icons">view_agenda</span>
                                                        <span class="texto">Visualizar</span>
                                                    </a>
                                                    <div class="dropdown-menu basic-dropdown .dropdown-icons dropdown-menu-right" style="will-change: transform;">
                                                        <a class="item-dropdown aCompacView" data-class-resource-list="compacView">
                                                            <span class="material-icons">reorder</span>
                                                            <span class="texto">Compacto</span>
                                                        </a>
                                                        <a class="item-dropdown aListView" data-class-resource-list="listView">
                                                            <span class="material-icons">view_agenda</span>
                                                            <span class="texto">Lista</span>
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Etiquetas de filtros -->
                                        <div class="etiquetas panFiltrosAux" @*id="panFiltros"*@>
                                            <ul class="facetedSearch tags panListadoFiltrosAux" @*id="panListadoFiltros"*@>
                                                <li class="borrarFiltros-wrap">
                                                    <a class="borrarFiltros" href="#" onclick="event.preventDefault();LimpiarFiltros();">Borrar</a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>

                                    <!-- Resultados -->
                                    <div class="resource-list listView resource-list-buscador">
                                        <div @*id="panResultados"*@ class="resource-list-wrap panResultadosAux">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JAVASCRIPT -->
<script type="text/javascript">
    var depuracion = true; // TODO:

    // Datos cabeceras de las fichas.
    var url = "http://servicioshercules.gnoss.net/servicioexternohercules/Hercules/DatosFichaProyecto"
    if (depuracion) {
        url = "https://localhost:44367/Hercules/DatosFichaProyecto"
    }
    var arg = {};
    arg.pIdProyecto = "@pProject.GNOSSID";
    $.get(url, arg, function (data) {
        $("#participantes-tab div div.data").text(data["Participantes"]);
        $("#publicaciones-tab div div.data").text(data["Publicaciones"]);
    });

    // Datos gráfica colaboradores.
    function CargarGraficaColaboradores(idproyecto, parametros) {
        var url = "http://servicioshercules.gnoss.net/servicioexternohercules/Hercules/DatosGraficaRedColaboradores"
        if (depuracion) {
            url = "https://localhost:44367/Hercules/DatosGraficaRedColaboradores"
        }
        var arg = {};
        arg.pIdProyecto = idproyecto;
        arg.pParametros = parametros;
        $.get(url, arg, function (data) {
            $('#graficaCytoscape').empty();

            var cy = window.cy = cytoscape({
                // Contenedor
                container: document.getElementById('graficaCytoscape'),
                // Layout
                layout: {
                    name: 'cose',
                    idealEdgeLength: 100,
                    nodeOverlap: 20,
                    refresh: 20,
                    fit: true,
                    padding: 30,
                    randomize: false,
                    componentSpacing: 100,
                    nodeRepulsion: 400000,
                    edgeElasticity: 100,
                    nestingFactor: 5,
                    gravity: 80,
                    numIter: 1000,
                    initialTemp: 200,
                    coolingFactor: 0.95,
                    minTemp: 1.0
                },
                // Estilos
                style: [{
                    "selector": "node",
                    "style": {
                        "width": "mapData(score, 0, 25, 30, 70)",
                        "height": "mapData(score, 0, 25, 30, 70)",
                        "content": "data(name)",
                        "font-size": "12px",
                        "text-valign": "center",
                        "text-halign": "center",
                        "background-color": "#c2c2c2",
                        "text-outline-color": "#555",
                        "text-outline-width": "2px",
                        "color": "#fff",
                        "overlay-padding": "6px",
                        "z-index": "10"
                    }
                }, {
                    "selector": "edge",
                    "style": {
                        "curve-style": "haystack",
                        "haystack-radius": "0.5",
                        "opacity": "0.4",
                        "line-color": "#EC0000",
                        "width": "mapData(weight, 0, 1, 1, 8)",
                        "overlay-padding": "3px"
                    }
                }],
                // Datos
                elements: data
            });

            cy.on('mouseover', 'edges', function (event) {
                $('#numRelaciones').text('(' + event.target.id().split("~")[2] + ')');
            });
        });
    }

    // Datos gráfica publicaciones.
    function CargarGraficaPublicaciones(idproyecto, parametros) {
        var url = "http://servicioshercules.gnoss.net/servicioexternohercules/Hercules/DatosGraficaPublicaciones"
        if (depuracion) {
            url = "https://localhost:44367/Hercules/DatosGraficaPublicaciones"
        }
        var arg = {};
        arg.pIdProyecto = idproyecto;
        arg.pParametros = parametros;
        $.get(url, arg, function (data) {
            $('#chart-publicaciones').remove();
            $('div.chart-publicaciones').append($('<canvas id="chart-publicaciones" class="js-chart" width="600" height="400"></canvas>'));
            var ctx = document.getElementById('chart-publicaciones');
            var parent = ctx.parentElement;
            var width = parent.offsetWidth;
            ctx.setAttribute('width', width);
            var myChart = new Chart(ctx, data);
        });
    }

    var comportamientoPaginaInvestigador = {
        filtroOculto: null,
        tabActive: null,
        init: function () {
            this.config();
            $('#participantes-tab').click();
            return;
        },
        config: function () {
            var that = this;
            $('#participantes-tab').unbind().click(function (e) {
                e.preventDefault();
                that.tabActive = "participantes";
                CargarGraficaColaboradores("@pProject.GNOSSID.Split('_')[1].ToUpper()", "");
                that.comportamientoParticipantes();
            });
            $('#publicaciones-tab').unbind().click(function (e) {
                e.preventDefault();
                that.tabActive = "publicaciones";
                CargarGraficaPublicaciones("@pProject.GNOSSID.Split('_')[1].ToUpper()", "");
                that.comportamientoPublicaciones();
            });
            return;
        },
        comportamientoParticipantes: function () {
            // Limpia la URL.
            history.pushState('', 'New URL: ', RefinarURL());
            // TODO: Revisar tema de los filtros.
            $('.facetedSearch').remove();
            $('.panFiltrosAux').removeAttr('id');
            $('.panResultadosAux').removeAttr('id');
            $('.panNumResultadosAux').removeAttr('id');
            $('.panFacetasAux').removeAttr('id');
            $('.panListadoFiltrosAux').removeAttr('id');
            $('#participantes-panel .panFiltrosAux').attr('id', 'panFiltros');
            $('#participantes-panel .panResultadosAux').attr('id', 'panResultados');
            $('#participantes-panel .panNumResultadosAux').attr('id', 'panNumResultados');
            $('#participantes-panel .panFacetasAux').attr('id', 'panFacetas');
            $('#participantes-panel .panListadoFiltrosAux').attr('id', 'panListadoFiltros');
            $('.etiquetas.panFiltrosAux').append('<ul class="facetedSearch tags" id="panListadoFiltros"></ul>');

            urlComunidad = '@Comunidad.Url';
            urlCargarAccionesRecursos = '@Comunidad.Url/load-resource-actions';
            panFacetas = 'panFacetas';
            panResultados = 'panResultados';
            numResultadosBusq = 'panNumResultados';
            panFiltrosPulgarcito = 'panListadoFiltros';
            updResultados = 'panResultados';
            divFiltros = 'panFiltros';
            ubicacionBusqueda = 'Meta';
            grafo = '@Comunidad.Key.ToString().ToLower()';
            adminVePersonas = 'False';
            tipoBusqeda = 0;
            idNavegadorBusqueda = 'panNavegador';
            ordenPorDefecto = 'gnoss:hasfechapublicacion';
            ordenEnSearch = 'gnoss:relevancia';
            filtroContexto = "";
            tiempoEsperaResultados = 0;
            suplementoFiltros = '';
            primeraCargaDeFacetas = false;
            @{
                string idTab = Html.Translate("ID_BUSQUEDA_PERSONAS");
            }

            //parametros_adiccionales = 'PestanyaActualID=@idTab|rdf:type=asiodocument|orden=asc|ordenarPor=vivo:dateTimeValue';
            parametros_adiccionales = 'PestanyaActualID=@idTab|rdf:type=person';
            mostrarFacetas = true;
            mostrarCajaBusqueda = true;
            FiltrarPorFacetas("");
        },
        comportamientoPublicaciones: function () {
            // Limpia la URL.
            history.pushState('', 'New URL: ', RefinarURL());
            // TODO: Revisar tema de los filtros.
            $('.facetedSearch').remove();
            $('.panFiltrosAux').removeAttr('id');
            $('.panResultadosAux').removeAttr('id');
            $('.panNumResultadosAux').removeAttr('id');
            $('.panFacetasAux').removeAttr('id');
            $('.panListadoFiltrosAux').removeAttr('id');
            $('#publicaciones-panel .panFiltrosAux').attr('id', 'panFiltros');
            $('#publicaciones-panel .panResultadosAux').attr('id', 'panResultados');
            $('#publicaciones-panel .panNumResultadosAux').attr('id', 'panNumResultados');
            $('#publicaciones-panel .panFacetasAux').attr('id', 'panFacetas');
            $('#publicaciones-panel .panListadoFiltrosAux').attr('id', 'panListadoFiltros');
            $('.etiquetas.panFiltrosAux').append('<ul class="facetedSearch tags" id="panListadoFiltros"></ul>');

            urlComunidad = '@Comunidad.Url';
            urlCargarAccionesRecursos = '@Comunidad.Url/load-resource-actions';
            panFacetas = 'panFacetas';
            panResultados = 'panResultados';
            numResultadosBusq = 'panNumResultados';
            panFiltrosPulgarcito = 'panListadoFiltros';
            updResultados = 'panResultados';
            divFiltros = 'panFiltros';
            ubicacionBusqueda = 'Meta';
            grafo = '@Comunidad.Key.ToString().ToLower()';
            adminVePersonas = 'False';
            tipoBusqeda = 0;
            idNavegadorBusqueda = 'panNavegador';
            ordenPorDefecto = 'gnoss:hasfechapublicacion';
            ordenEnSearch = 'gnoss:relevancia';
            filtroContexto = "";
            tiempoEsperaResultados = 0;
            suplementoFiltros = '';
            primeraCargaDeFacetas = false;
            @{
                idTab = Html.Translate("ID_BUSQUEDA_DOCUMENTOS");
            }

            //parametros_adiccionales = 'PestanyaActualID=@idTab|rdf:type=asiodocument|orden=asc|ordenarPor=vivo:dateTimeValue';
            parametros_adiccionales = 'PestanyaActualID=@idTab|rdf:type=document';
            mostrarFacetas = true;
            mostrarCajaBusqueda = true;
            FiltrarPorFacetas("");
        }
    };
    comportamientoPaginaInvestigador.init();

    function RefinarURL() {
        var urlActual = window.location.href;
        if (urlActual.includes("?")) {
            urlActual = urlActual.split("?")[0];
        }
        return urlActual;
    }

    function SubirPagina() {
        //window.scroll(0, $('#panFacetas').offset().top - 50);
    }

    function FiltrarPorFacetas(filtro) {
        if (typeof FiltrarBandejaMensajes != "undefined") {
            return FiltrarBandejaMensajes(filtro);
        }
        else if (typeof FiltrarPerfilUsuario != "undefined") {
            return FiltrarPerfilUsuario(filtro);
        }
        else if (typeof ProcesarFiltro != "undefined") {
            return ProcesarFiltro(filtro);
        }

        if (comportamientoPaginaInvestigador.tabActive == "participantes") {
            comportamientoPaginaInvestigador.filtroOculto ="|searchPersonasRelacionadasConProyecto=@pProject.GNOSSID.Split('_')[1].ToUpper()";
            filtro += "|searchPersonasRelacionadasConProyecto=@pProject.GNOSSID.Split('_')[1].ToUpper()";
            var parametros = ObtenerHash2();
            if (parametros.startsWith("URL=")) {
                parametros = parametros.substring(parametros.indexOf('submit=Cargar') + 13);
            }
        }
        else if (comportamientoPaginaInvestigador.tabActive == "publicaciones"){
            comportamientoPaginaInvestigador.filtroOculto ="|searchDocumentosRelacionadosConProyecto=@pProject.GNOSSID.Split('_')[1].ToUpper()";
            filtro += "|searchDocumentosRelacionadosConProyecto=@pProject.GNOSSID.Split('_')[1].ToUpper()";
            var parametros = ObtenerHash2();
            if (parametros.startsWith("URL=")) {
                parametros = parametros.substring(parametros.indexOf('submit=Cargar') + 13);
            }
        }

        //TODO: Filtros.
        //if ($('.etiquetas.panFiltrosAux ul li').hasClass("@pProject.GNOSSID.Split('_')[1].ToUpper()")) {
            //$('.etiquetas.panFiltrosAux ul li."@pProject.GNOSSID.Split('_')[1].ToUpper()"').remove();
        //}

        return FiltrarPorFacetasGenerico(filtro);
    }

    MontarResultadosScroll.peticionScrollResultados= function () {
        var defr = $.Deferred();
        //Realizamos la peticion
        if (this.pagActual == null) {
            this.pagActual = 1;
        }
        this.pagActual++;
        //var servicio = new WS($('input.inpt_UrlServicioResultados').val(), WSDataType.jsonp);
        var filtros = ObtenerHash2().replace(/&/g, '|');
        filtros += comportamientoPaginaInvestigador.filtroOculto;
        if (typeof (filtroDePag) != 'undefined' && filtroDePag != '') {
            if (filtros != '') {
                filtros = filtroDePag + '|' + filtros;
            }
            else {
                filtros = filtroDePag;
            }
        }

        filtros += "|pagina=" + this.pagActual;
        var params = {};

        params['pUsarMasterParaLectura'] = bool_usarMasterParaLectura;
        params['pProyectoID'] = $('input.inpt_proyID').val();
        params['pEsUsuarioInvitado'] = $('input.inpt_bool_esUsuarioInvitado').val() == 'True';
        params['pIdentidadID'] = $('input.inpt_identidadID').val();
        params['pParametros'] = '' + filtros.replace('#', '');
        params['pLanguageCode'] = $('input.inpt_Idioma').val();
        params['pPrimeraCarga'] = false;
        params['pAdministradorVeTodasPersonas'] = false;
        params['pTipoBusqueda'] = tipoBusqeda;
        params['pNumeroParteResultados'] = 1;
        params['pGrafo'] = grafo;
        params['pFiltroContexto'] = filtroContexto;
        params['pParametros_adiccionales'] = parametros_adiccionales;
        params['cont'] = contResultados;


        $.post(obtenerUrl($('input.inpt_UrlServicioResultados').val()) + "/CargarResultados", params, function (response) {
            if (params['cont'] == contResultados) {
                var data = response
                if (response.Value != null) {
                    data = response.Value;
                }
                defr.resolve(data);
            }
        }, "json");
        return defr;
    }


    //function comportamientoCargaFacetasComunidad() {
        //$('#panListadoFiltros li[class="http://gnoss/@pProject.GNOSSID.Split('_')[1].ToUpper()"]').remove();
    //}

    // TODO: Cambiar.
        //function MontarResultados(pFiltros, pPrimeraCarga, pNumeroResultados, pPanelID, pTokenAfinidad) {
        //    contResultados = contResultados + 1;
        //    if (document.getElementById('ctl00_ctl00_CPH1_CPHContenido_txtRecursosSeleccionados') != null) {
        //        document.getElementById('ctl00_ctl00_CPH1_CPHContenido_txtRecursosSeleccionados').value = '';
        //        document.getElementById('ctl00_ctl00_CPH1_CPHContenido_lblErrorMisRecursos').style.display = 'none';
        //    }
        //    var servicio = new WS($('input.inpt_UrlServicioResultados').val(), WSDataType.jsonp);

        //    var paramAdicional = parametros_adiccionales;

        //    /*
        //    if ($('li.mapView').attr('class') == "mapView activeView") {
        //        paramAdicional += 'busquedaTipoMapa=true';
        //    }*/
        //    /*
        //    if ($('.chartView').attr('class') == "chartView activeView") {
        //        paramAdicional = 'busquedaTipoChart=' + chartActivo + '|' + paramAdicional;
        //    }*/

        //    if ($('li.mapView').hasClass('activeView')) {
        //        paramAdicional += 'busquedaTipoMapa=true';
        //    }


        //    if ($('.chartView').hasClass('activeView')) {
        //        paramAdicional = 'busquedaTipoChart=' + chartActivo + '|' + paramAdicional;
        //    }

        //    var metodo = 'CargarResultados';
        //    var params = {};

        //    if (bool_usarMasterParaLectura) {
        //        if (finUsoMaster == null) {
        //            finUsoMaster = new Date();
        //            finUsoMaster.setMinutes(finUsoMaster.getMinutes() + 1);
        //        }
        //        else {
        //            var fechaActual = new Date();
        //            if (fechaActual > finUsoMaster) {
        //                bool_usarMasterParaLectura = false;
        //                finUsoMaster = null;
        //            }
        //        }
        //    }

        //    params['pUsarMasterParaLectura'] = bool_usarMasterParaLectura;
        //    params['pProyectoID'] = $('input.inpt_proyID').val();
        //    params['pEsUsuarioInvitado'] = $('input.inpt_bool_esUsuarioInvitado').val() == 'True';

        //    if (typeof (identOrg) != 'undefined') {

        //        params['pIdentidadID'] = identOrg;
        //    }
        //    else {

        //        params['pIdentidadID'] = $('input.inpt_identidadID').val();
        //    }
        //    params['pParametros'] = '' + pFiltros;
        //    params['pLanguageCode'] = $('input.inpt_Idioma').val();
        //    params['pPrimeraCarga'] = pPrimeraCarga == "True";
        //    params['pAdministradorVeTodasPersonas'] = adminVePersonas == "True";
        //    params['pTipoBusqueda'] = tipoBusqeda;
        //    params['pNumeroParteResultados'] = pNumeroResultados;
        //    params['pGrafo'] = grafo;
        //    params['pFiltroContexto'] = filtroContexto;
        //    params['pParametros_adiccionales'] = paramAdicional;
        //    params['cont'] = contResultados;
        //    params['tokenAfinidad'] = pTokenAfinidad;

        //    $.post(obtenerUrl($('input.inpt_UrlServicioResultados').val()) + "/" + metodo, params, function (response) {
        //        if (params['cont'] == contResultados) {
        //            var data = response
        //            if (response.Value != null) {
        //                data = response.Value;
        //            }

        //            var vistaMapa = (params['pParametros_adiccionales'].indexOf('busquedaTipoMapa=true') != -1);
        //            var vistaChart = (params['pParametros_adiccionales'].indexOf('busquedaTipoChart=') != -1);

        //            var descripcion = data;

        //            var funcionJS = '';
        //            if (descripcion.indexOf('###ejecutarFuncion###') != -1) {
        //                var funcionJS = descripcion.substring(descripcion.indexOf('###ejecutarFuncion###') + '###ejecutarFuncion###'.length);
        //                funcionJS = funcionJS.substring(0, funcionJS.indexOf('###ejecutarFuncion###'));

        //                descripcion = descripcion.replace('###ejecutarFuncion###' + funcionJS + '###ejecutarFuncion###', '');
        //            }

        //            if (tipoBusqeda == 12) {
        //                var panelListado = $(pPanelID).parent();
        //                panelListado.html('<div id="' + pPanelID.replace('#', '') + '"></div><div id="' + panResultados.replace('#', '') + '"></div>')

        //                var panel = $(pPanelID);
        //                panel.css('display', 'none');
        //                panel.html(descripcion);
        //                panelListado.append(panel.find('.resource-list').html())
        //                panel.find('.resource-list').html('');
        //            } else if (!vistaMapa && !vistaChart) {
        //                $(pPanelID).append(descripcion);
        //            }
        //            else {
        //                var arraydatos = descripcion.split('|||');

        //                if ($('#panAuxMapa').length == 0) {
        //                    $(pPanelID).parent().html($(pPanelID).parent().html() + '<div id="panAuxMapa" style="display:none;"></div>');
        //                }

        //                if (vistaMapa) {
        //                    $('#panAuxMapa').html('<div id="numResultadosRemover">' + arraydatos[0] + '</div>');
        //                }

        //                if (vistaChart) {
        //                    datosChartActivo = arraydatos;
        //                    $(pPanelID).html('<div id="divContChart"></div>');
        //                    eval(jsChartActivo);
        //                }
        //                else {
        //                    utilMapas.MontarMapaResultados(pPanelID, arraydatos);
        //                }
        //            }
        //            FinalizarMontarResultados(paramAdicional, funcionJS, pNumeroResultados, pPanelID);
        //        }
        //        if (MontarResultadosScroll.pagActual != null) {
        //            MontarResultadosScroll.pagActual = 1;
        //            MontarResultadosScroll.cargarScroll();
        //        }
        //    }, "json");
        //}

        // TODO: Cambiar.
        //function MontarFacetas(pFiltros, pPrimeraCarga, pNumeroFacetas, pPanelID, pFaceta, pTokenAfinidad) {
        //    pFiltros = pFiltros.replace(/&/g, '|');
        //    if (mostrarFacetas) {
        //        //contFacetas = contFacetas + 1;

        //        var verMas = false;

        //        if (pFaceta != null && pFaceta.indexOf('|vermas') != -1) {
        //            verMas = true;
        //            pFaceta = pFaceta.substring(0, pFaceta.lastIndexOf('|'));
        //        }

        //        var servicio = new WS($('input.inpt_UrlServicioFacetas').val(), WSDataType.jsonp);

        //        var paramAdicional = parametros_adiccionales;

        //        if ($('li.mapView').attr('class') == "mapView activeView") {
        //            paramAdicional += 'busquedaTipoMapa=true';
        //        }

        //        var metodo = 'CargarFacetas';
        //        var params = {};


        //        params['pProyectoID'] = $('input.inpt_proyID').val();
        //        params['pEstaEnProyecto'] = $('input.inpt_bool_estaEnProyecto').val() == 'True';
        //        params['pEsUsuarioInvitado'] = $('input.inpt_bool_esUsuarioInvitado').val() == 'True';
        //        params['pIdentidadID'] = $('input.inpt_identidadID').val();
        //        params['pParametros'] = '' + pFiltros;
        //        params['pLanguageCode'] = $('input.inpt_Idioma').val();
        //        params['pPrimeraCarga'] = pPrimeraCarga.toString().toLowerCase() == "true";
        //        params['pAdministradorVeTodasPersonas'] = adminVePersonas.toString().toLowerCase() == "true";
        //        params['pTipoBusqueda'] = tipoBusqeda;
        //        params['pGrafo'] = grafo;
        //        params['pFiltroContexto'] = filtroContexto;
        //        if (typeof urlBusqueda != "undefined") {
        //            params['pUrlPaginaActual'] = urlBusqueda;
        //        }
        //        params['pParametros_adiccionales'] = paramAdicional;
        //        params['pUbicacionBusqueda'] = ubicacionBusqueda;
        //        params['pNumeroFacetas'] = pNumeroFacetas;
        //        params['pUsarMasterParaLectura'] = bool_usarMasterParaLectura;
        //        params['pFaceta'] = pFaceta;
        //        params['tokenAfinidad'] = pTokenAfinidad;

        //        $.post(obtenerUrl($('input.inpt_UrlServicioFacetas').val()) + "/" + metodo, params, function (data) {
        //            if (decodeURI(pFiltros) == decodeURI(filtrosPeticionActual) || pFiltros == replaceAll(filtrosPeticionActual, '&', '|') || (typeof filtrosDeInicio !== "undefined" && (pFiltros == filtrosDeInicio || pFiltros == replaceAll(filtrosDeInicio, '|', '&'))) /*|| pFiltros.indexOf(filtrosPeticionActual) >= 0 Esto hace que al quitar filtros se amontonen facetas*/) {
        //                if (pFaceta == null && (pNumeroFacetas == 1 || pNumeroFacetas == 2)) {
        //                    MontarFacetas(pFiltros, pPrimeraCarga, pNumeroFacetas + 1, pPanelID, pFaceta, pTokenAfinidad);
        //                }
        //                var descripcion = data;
        //                if (descripcion.indexOf("class=\"box") != -1 && document.getElementById('facetaEncuentra') != null) {
        //                    document.getElementById('facetaEncuentra').style.display = '';
        //                }
        //                $(pPanelID).show();

        //                if (pFaceta != null && data != "" && pNumeroFacetas == -1) {
        //                    var divFacetaID = pFaceta.replace(/\:/g, '_').replace(/\@@/g, '-');
        //                    var divFacetaID_out = '#out_' + divFacetaID;
        //                    if ($(divFacetaID_out).length > 0) {
        //                        $(divFacetaID_out).show();
        //                    }
        //                    else {
        //                        //No existe el panel out_faceta. Inserto en el panel original el contenido del resultante.
        //                        $('#' + divFacetaID).replaceWith(data);
        //                    }
        //                }

        //                if (pFaceta == null || pFaceta == '' || pNumeroFacetas == 1) {
					   //     if( pNumeroFacetas == 1)
					   //     {
						  //      $('#' + panFacetas).html('');
					   //     }
        //                    var panelFacetas = pPanelID;
        //                    if ($('#facetedSearch').length) {
        //                        panelFacetas = '#facetedSearch';
        //                        descripcion = $('<div>' + descripcion + '</div>').find("#facetedSearch").html();
        //                    }

        //                    if (pNumeroFacetas > 1 && $(".listadoAgrupado").length) {
        //                        panelFacetas = "#" + $(".listadoAgrupado").attr("aux");
        //                    }

        //                    if (pNumeroFacetas == 1) {
        //                        if (!descripcion.replace('<div id="facetedSearch" class="facetedSearch">', '').replace('</div>', '').replace('</div>', '').trim().startsWith('<div id="panelFiltros" style="display:none">')) {
        //                            $('#facetedSearch').css('display', 'block');
        //                        } else {
        //                            //Ocultamos el panel de facetas
        //                            if ($('#facetedSearch').length == 0) {
        //                                $('#facetedSearch').css('display', 'none')
        //                            }
        //                            $(panelFacetas).css('display', 'none')
        //                        }
        //                    }
        //                    $(panelFacetas).append(descripcion);

        //                    facetedSearch.init();
        //                }
        //                else {
        //                    //Si viene el par�metro pFaceta, se est� rellenando una faceta, hay que sustituir el contenido anterior por el actual.

        //                    if (verMas) {
        //                        descripcion = $('#' + divFacetaID, $(data.trim())).html();
        //                        var htmlVerMas = $('p.moreResults', $(pPanelID)).html();
        //                        if (typeof (htmlVerMas) != 'undefined') {
        //                            htmlVerMas = htmlVerMas.substring(0, htmlVerMas.indexOf('>') + 1) + form.vermenos + '</a>';
        //                            descripcion += '<p class="moreResults">' + htmlVerMas + '</p>';
        //                        }
        //                        if (descripcion == null) {

        //                            descripcion = data.trim();
        //                        }
        //                    }

        //                    if (descripcion.indexOf('id="' + pPanelID.substr(1) + '"') != -1) {
        //                        //La descripci�n ya contiene el panel, lo sustituyo.
        //                        $(pPanelID).replaceWith(descripcion);
        //                    }
        //                    else {
        //                        $(pPanelID).html(descripcion);
        //                    }
        //                    facetedSearch.init();
        //                }

        //                if (pNumeroFacetas == 1) { MontarPanelFiltros(); }
        //                /* presentacion facetas */
        //                limiteLongitudFacetas.init();
        //                //}

        //                if (pNumeroFacetas == 3) {
        //                    if ($(".filtroFacetaFecha").length > 0) {

        //                        $(".filtroFacetaFecha").datepicker();
        //                    }

        //                    if ($("div.divdatepicker").length > 0) {
        //                        IniciarFacetaCalendario();
        //                    }
        //                } else if (pNumeroFacetas == -1 && $("div.divdatepicker").length > 0) {
        //                    IniciarFacetaCalendario(pFiltros);
        //                }


        //                if (enlazarJavascriptFacetas) {
        //                    enlazarFacetasBusqueda();
        //                }
        //                else {
        //                    enlazarFacetasNoBusqueda();
        //                }

        //                if ((typeof CompletadaCargaFacetas != 'undefined')) {
        //                    /* En los listados de Inevery, hay que ejecutar este script */
        //                    CompletadaCargaFacetas();
        //                }

        //                if (funcionExtraFacetas != "") {
        //                    eval(funcionExtraFacetas);
        //                }
        //            }
        //        });
        //    }
        //    else {
        //        var col1 = document.getElementById('col01');
        //        if (col1 != null) {
        //            $('#col01').css('display', 'none');
        //            $('#col02').css('float', 'left');
        //        }
        //    }
        //    primeraCargaDeFacetas = false;
        //}
</script>

@functions{
    public class RDFPropertyAttribute : Attribute
    {
        public RDFPropertyAttribute(string pRDFA)
        {
            mRDFA = pRDFA;
        }
        protected string mRDFA;
        public string RDFProperty
        {
            get { return mRDFA; }
        }
    }

    [AttributeUsage(AttributeTargets.All, AllowMultiple = true)]
    public class LABELAttribute : Attribute
    {
        private GnossOCBase.LanguageEnum IdiomaDefecto = GnossOCBase.LanguageEnum.es;
        private GnossOCBase.LanguageEnum midioma;
        private string mlabel;
        public LABELAttribute(GnossOCBase.LanguageEnum idioma, string label)
        {
            mlabel = label;
            midioma = idioma;
        }
        public string LABEL(GnossOCBase.LanguageEnum pLang)
        {
            if (midioma.Equals(pLang))
            {
                return mlabel;
            }
            return "";
        }
    }

    public class GnossOCBase
    {
        public enum LanguageEnum
        {
            es,
            en,
            pt,
            ca,
            eu,
            gl,
            fr,
            de,
            it,
        }
        internal List<string> prefList = new List<string>();
        internal string mGNOSSID;
        internal string mURL;
        internal Guid resourceID;
        internal Guid articleID;
        private static List<string> NoEnIdiomas = new List<string> { "N�o", "Non", "Ez", "Nein", "No" };
        public List<string> tagList = new List<string>();
        public GnossOCBase()
        {
            prefList.Add("xmlns:foaf=\"http://xmlns.com/foaf/0.1/\"");
            prefList.Add("xmlns:vivo=\"http://vivoweb.org/ontology/core#\"");
            prefList.Add("xmlns:rdfs=\"http://www.w3.org/2000/01/rdf-schema#\"");
            prefList.Add("xmlns:owl=\"http://www.w3.org/2002/07/owl#\"");
            prefList.Add("xmlns:bibo=\"http://purl.org/ontology/bibo/\"");
            prefList.Add("xmlns:roh=\"http://w3id.org/roh/\"");
            prefList.Add("xmlns:dct=\"http://purl.org/dc/terms/\"");
            prefList.Add("xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"");
            prefList.Add("xmlns:xsd=\"http://www.w3.org/2001/XMLSchema#\"");
            prefList.Add("xmlns:obo=\"http://purl.obolibrary.org/obo/\"");
            prefList.Add("xmlns:vcard=\"https://www.w3.org/2006/vcard/ns#\"");
            prefList.Add("xmlns:dc=\"http://purl.org/dc/elements/1.1/\"");
            prefList.Add("xmlns:gn=\"http://www.geonames.org/ontology#\"");

            this.resourceID = Guid.NewGuid();
            this.articleID = Guid.NewGuid();
        }

        public string GNOSSID
        {
            get { return mGNOSSID; }
            set
            {
                this.mGNOSSID = value;
                var GnossIDSplit = this.mGNOSSID.Split('_');
                Guid nuevoResource = Guid.Parse(GnossIDSplit[GnossIDSplit.Count() - 2]);
                Guid nuevoArticle = Guid.Parse(GnossIDSplit.Last());
                if (!this.ResourceID.Equals(nuevoResource))
                {
                    this.resourceID = nuevoResource;
                }
                if (!this.ArticleID.Equals(nuevoArticle))
                {
                    this.articleID = nuevoArticle;
                }
            }
        }
        public string URL
        {
            get { return mURL; }
        }

        public Guid ResourceID
        {
            get { return resourceID; }
            set
            {
                this.resourceID = value;
                string primeraParte = this.mGNOSSID.Substring(0, this.mGNOSSID.LastIndexOf('/') + 1);
                string antiguoGuid = this.mGNOSSID.Substring(this.mGNOSSID.LastIndexOf('/') + 1, this.mGNOSSID.LastIndexOf('_'));
                string ultimaParte = this.mGNOSSID.Substring(this.mGNOSSID.LastIndexOf('_') + 1);
                if (!antiguoGuid.Equals(this.resourceID.ToString()))
                {
                    this.mGNOSSID = $"{primeraParte}{this.resourceID.ToString()}{ultimaParte}";
                }
            }
        }

        public Guid ArticleID
        {
            get { return articleID; }
            set
            {
                this.articleID = value;
                string primeraParte = this.mGNOSSID.Substring(0, this.mGNOSSID.LastIndexOf('_') + 1);
                string antiguoGuid = this.mGNOSSID.Substring(this.mGNOSSID.LastIndexOf('_') + 1);
                if (!antiguoGuid.Equals(this.articleID.ToString()))
                {
                    this.mGNOSSID = $"{primeraParte}{this.articleID.ToString()}";
                }
            }
        }

        public static string GetPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            if (pProperty != null && pProperty.PropertyValues.Count > 0)
            {
                return pProperty.PropertyValues[0].Value;
            }
            return "";
        }

        public static int? GetNumberIntPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            if (pProperty != null && pProperty.PropertyValues.Count > 0 && !string.IsNullOrEmpty(pProperty.PropertyValues[0].Value))
            {
                return int.Parse(pProperty.PropertyValues[0].Value);
            }
            return 0;
        }

        public static int? GetNumberIntPropertyMultipleValueSemCms(SemanticPropertyModel.PropertyValue pProperty)
        {
            if (pProperty != null && !string.IsNullOrEmpty(pProperty.Value))
            {
                return int.Parse(pProperty.Value);
            }
            return 0;
        }

        public static float? GetNumberFloatPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            if (pProperty != null && pProperty.PropertyValues.Count > 0 && !string.IsNullOrEmpty(pProperty.PropertyValues[0].Value))
            {
                return float.Parse(pProperty.PropertyValues[0].Value.Replace('.', ','));
            }
            return 0;
        }

        public static DateTime? GetDateValuePropertySemCms(SemanticPropertyModel pProperty)
        {
            string stringDate = GetPropertyValueSemCms(pProperty);
            if (!string.IsNullOrEmpty(stringDate))
            {
                int year = 0;
                int month = 0;
                int day = 0;
                if (stringDate.Contains('/'))
                {
                    day = int.Parse(stringDate.Split('/')[0]);
                    month = int.Parse(stringDate.Split('/')[1]);
                    year = int.Parse(stringDate.Split('/')[2].Split(' ')[0]);
                }
                else
                {
                    year = int.Parse(stringDate.Substring(0, 4));
                    month = int.Parse(stringDate.Substring(4, 2));
                    day = int.Parse(stringDate.Substring(6, 2));
                }
                if (stringDate.Length == 14)
                {
                    if (month == 0 || day == 0)
                    {
                        return new DateTime(year);
                    }
                    else
                    {
                        int hour = int.Parse(stringDate.Substring(8, 2));
                        int minute = int.Parse(stringDate.Substring(10, 2));
                        int second = int.Parse(stringDate.Substring(12, 2));
                        return new DateTime(year, month, day, hour, minute, second);
                    }
                }
                else
                {
                    return new DateTime(year, month, day);
                }
            }
            return null;
        }

        public static bool GetBooleanPropertyValueSemCms(SemanticPropertyModel pProperty)
        {
            bool resultado = false;
            if (pProperty != null && pProperty.PropertyValues.Count > 0 && !string.IsNullOrEmpty(pProperty.PropertyValues[0].Value))
            {
                if (!bool.TryParse(pProperty.PropertyValues[0].Value, out resultado))
                {
                    resultado = !NoEnIdiomas.Contains(pProperty.PropertyValues[0].Value);
                }
            }
            return resultado;
        }

        internal virtual void GetProperties()
        {
        }

        internal virtual void GetEntities()
        {
        }

        internal string GetExtension(string file)
        {
            return file.Substring(file.LastIndexOf('.'));
        }


        public string GetPropertyURI(string nombrePropiedad)
        {
            Type type = this.GetType();
            PropertyInfo mInfo = type.GetProperty(nombrePropiedad);
            if (mInfo != null)
            {
                Attribute attr = Attribute.GetCustomAttribute(mInfo, typeof(RDFPropertyAttribute));
                if (attr != null)
                {
                    return ((RDFPropertyAttribute)attr).RDFProperty;
                }
            }
            return "";
        }


        public string GetLabel(string nombrePropiedad, LanguageEnum pLang)
        {
            Type type = this.GetType();
            PropertyInfo mInfo = type.GetProperty(nombrePropiedad);

            if (mInfo != null)
            {
                Attribute[] attr = Attribute.GetCustomAttributes(mInfo, typeof(LABELAttribute));
                {
                    foreach (Attribute atributo in attr)
                    {
                        if (atributo != null)
                        {
                            if (!((LABELAttribute)atributo).LABEL(pLang).Equals(""))
                            {
                                return ((LABELAttribute)atributo).LABEL(pLang);
                            }
                        }
                    }
                }
            }

            return "";
        }

        public int GetID() { return 0; }
    }

    public class Project : GnossOCBase
    {

        public Project() : base() { }

        public Project(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            this.Roh_grantedBy = new List<Organization>();
            SemanticPropertyModel propRoh_grantedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/grantedBy");
            if (propRoh_grantedBy != null && propRoh_grantedBy.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_grantedBy.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        Organization roh_grantedBy = new Organization(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_grantedBy.Add(roh_grantedBy);
                    }
                }
            }
            SemanticPropertyModel propRoh_isSupportedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isSupportedBy");
            if (propRoh_isSupportedBy != null && propRoh_isSupportedBy.PropertyValues.Count > 0)
            {
                this.Roh_isSupportedBy = new Funding(propRoh_isSupportedBy.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propRoh_conductedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/conductedBy");
            if (propRoh_conductedBy != null && propRoh_conductedBy.PropertyValues.Count > 0)
            {
                this.Roh_conductedBy = new Organization(propRoh_conductedBy.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_hasProjectClassification = new List<ProjectClassification>();
            SemanticPropertyModel propRoh_hasProjectClassification = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasProjectClassification");
            if (propRoh_hasProjectClassification != null && propRoh_hasProjectClassification.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasProjectClassification.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        ProjectClassification roh_hasProjectClassification = new ProjectClassification(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_hasProjectClassification.Add(roh_hasProjectClassification);
                    }
                }
            }
            SemanticPropertyModel propVivo_geographicFocus = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#geographicFocus");
            if (propVivo_geographicFocus != null && propVivo_geographicFocus.PropertyValues.Count > 0)
            {
                this.Vivo_geographicFocus = new GeographicRegion(propVivo_geographicFocus.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propRoh_modality = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/modality");
            if (propRoh_modality != null && propRoh_modality.PropertyValues.Count > 0)
            {
                this.Roh_modality = new Modality(propRoh_modality.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Vivo_relates = new List<BFO_0000023>();
            SemanticPropertyModel propVivo_relates = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#relates");
            if (propVivo_relates != null && propVivo_relates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_relates.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        BFO_0000023 vivo_relates = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Vivo_relates.Add(vivo_relates);
                    }
                }
            }
            this.Roh_hasResultsProjectClassification = new List<ProjectClassification>();
            SemanticPropertyModel propRoh_hasResultsProjectClassification = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasResultsProjectClassification");
            if (propRoh_hasResultsProjectClassification != null && propRoh_hasResultsProjectClassification.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasResultsProjectClassification.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        ProjectClassification roh_hasResultsProjectClassification = new ProjectClassification(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_hasResultsProjectClassification.Add(roh_hasResultsProjectClassification);
                    }
                }
            }
            this.Roh_participates = new List<Organization>();
            SemanticPropertyModel propRoh_participates = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/participates");
            if (propRoh_participates != null && propRoh_participates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_participates.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        Organization roh_participates = new Organization(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_participates.Add(roh_participates);
                    }
                }
            }
            this.Roh_geographicFocusOther = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/geographicFocusOther"));
            this.Roh_durationDays = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationDays"));
            this.Vivo_start = GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#start"));
            this.Roh_relevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/relevantResults"));
            this.Roh_durationMonths = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationMonths"));
            this.Vivo_end = GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#end"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Roh_monetaryAmount = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/monetaryAmount"));
            this.Roh_durationYears = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationYears"));
            this.Roh_researchersNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/researchersNumber"));
            this.Roh_peopleYearNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/peopleYearNumber"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public Project(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Roh_grantedBy = new List<Organization>();
            SemanticPropertyModel propRoh_grantedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/grantedBy");
            if (propRoh_grantedBy != null && propRoh_grantedBy.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_grantedBy.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        Organization roh_grantedBy = new Organization(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_grantedBy.Add(roh_grantedBy);
                    }
                }
            }
            SemanticPropertyModel propRoh_isSupportedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/isSupportedBy");
            if (propRoh_isSupportedBy != null && propRoh_isSupportedBy.PropertyValues.Count > 0)
            {
                this.Roh_isSupportedBy = new Funding(propRoh_isSupportedBy.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propRoh_conductedBy = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/conductedBy");
            if (propRoh_conductedBy != null && propRoh_conductedBy.PropertyValues.Count > 0)
            {
                this.Roh_conductedBy = new Organization(propRoh_conductedBy.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_hasProjectClassification = new List<ProjectClassification>();
            SemanticPropertyModel propRoh_hasProjectClassification = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasProjectClassification");
            if (propRoh_hasProjectClassification != null && propRoh_hasProjectClassification.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasProjectClassification.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        ProjectClassification roh_hasProjectClassification = new ProjectClassification(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_hasProjectClassification.Add(roh_hasProjectClassification);
                    }
                }
            }
            SemanticPropertyModel propVivo_geographicFocus = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#geographicFocus");
            if (propVivo_geographicFocus != null && propVivo_geographicFocus.PropertyValues.Count > 0)
            {
                this.Vivo_geographicFocus = new GeographicRegion(propVivo_geographicFocus.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propRoh_modality = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/modality");
            if (propRoh_modality != null && propRoh_modality.PropertyValues.Count > 0)
            {
                this.Roh_modality = new Modality(propRoh_modality.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Vivo_relates = new List<BFO_0000023>();
            SemanticPropertyModel propVivo_relates = pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#relates");
            if (propVivo_relates != null && propVivo_relates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propVivo_relates.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        BFO_0000023 vivo_relates = new BFO_0000023(propValue.RelatedEntity, idiomaUsuario);
                        this.Vivo_relates.Add(vivo_relates);
                    }
                }
            }
            this.Roh_hasResultsProjectClassification = new List<ProjectClassification>();
            SemanticPropertyModel propRoh_hasResultsProjectClassification = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasResultsProjectClassification");
            if (propRoh_hasResultsProjectClassification != null && propRoh_hasResultsProjectClassification.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_hasResultsProjectClassification.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        ProjectClassification roh_hasResultsProjectClassification = new ProjectClassification(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_hasResultsProjectClassification.Add(roh_hasResultsProjectClassification);
                    }
                }
            }
            this.Roh_participates = new List<Organization>();
            SemanticPropertyModel propRoh_participates = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/participates");
            if (propRoh_participates != null && propRoh_participates.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_participates.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        Organization roh_participates = new Organization(propValue.RelatedEntity, idiomaUsuario);
                        this.Roh_participates.Add(roh_participates);
                    }
                }
            }
            this.Roh_geographicFocusOther = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/geographicFocusOther"));
            this.Roh_durationDays = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationDays"));
            this.Vivo_start = GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#start"));
            this.Roh_relevantResults = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/relevantResults"));
            this.Roh_durationMonths = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationMonths"));
            this.Vivo_end = GetDateValuePropertySemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#end"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Roh_monetaryAmount = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/monetaryAmount"));
            this.Roh_durationYears = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/durationYears"));
            this.Roh_researchersNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/researchersNumber"));
            this.Roh_peopleYearNumber = GetNumberIntPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/peopleYearNumber"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public virtual string RdfType { get { return "http://vivoweb.org/ontology/core#Project"; } }
        public virtual string RdfsLabel { get { return "http://vivoweb.org/ontology/core#Project"; } }
        [LABEL(LanguageEnum.es, "Entidad/es financiadora/s")]
        [RDFProperty("http://w3id.org/roh/grantedBy")]
        public List<Organization> Roh_grantedBy { get; set; }
        public List<string> IdsRoh_grantedBy { get; set; }

        [LABEL(LanguageEnum.es, "Financiación")]
        [RDFProperty("http://w3id.org/roh/isSupportedBy")]
        public Funding Roh_isSupportedBy { get; set; }

        [LABEL(LanguageEnum.es, "Entidad de realización")]
        [RDFProperty("http://w3id.org/roh/conductedBy")]
        public Organization Roh_conductedBy { get; set; }
        public string IdRoh_conductedBy { get; set; }

        [LABEL(LanguageEnum.es, "Clasificación del proyecto")]
        [RDFProperty("http://w3id.org/roh/hasProjectClassification")]
        public List<ProjectClassification> Roh_hasProjectClassification { get; set; }

        [LABEL(LanguageEnum.es, "Ámbito geográfico")]
        [RDFProperty("http://vivoweb.org/ontology/core#geographicFocus")]
        public GeographicRegion Vivo_geographicFocus { get; set; }
        public string IdVivo_geographicFocus { get; set; }

        [LABEL(LanguageEnum.es, "Modalidad de proyecto")]
        [RDFProperty("http://w3id.org/roh/modality")]
        public Modality Roh_modality { get; set; }
        public string IdRoh_modality { get; set; }

        [LABEL(LanguageEnum.es, "Relacionado con")]
        [RDFProperty("http://vivoweb.org/ontology/core#relates")]
        public List<BFO_0000023> Vivo_relates { get; set; }

        [LABEL(LanguageEnum.es, "Resultados de la clasificación del proyecto")]
        [RDFProperty("http://w3id.org/roh/hasResultsProjectClassification")]
        public List<ProjectClassification> Roh_hasResultsProjectClassification { get; set; }

        [LABEL(LanguageEnum.es, "Entidad/es participante/s")]
        [RDFProperty("http://w3id.org/roh/participates")]
        public List<Organization> Roh_participates { get; set; }
        public List<string> IdsRoh_participates { get; set; }

        [LABEL(LanguageEnum.es, "Ámbito geográfico, otros")]
        [RDFProperty("http://w3id.org/roh/geographicFocusOther")]
        public string Roh_geographicFocusOther { get; set; }

        [LABEL(LanguageEnum.es, "Duración (días)")]
        [RDFProperty("http://w3id.org/roh/durationDays")]
        public string Roh_durationDays { get; set; }

        [LABEL(LanguageEnum.es, "Fecha de inicio")]
        [RDFProperty("http://vivoweb.org/ontology/core#start")]
        public DateTime? Vivo_start { get; set; }

        [LABEL(LanguageEnum.es, "Resultados relevantes")]
        [RDFProperty("http://w3id.org/roh/relevantResults")]
        public string Roh_relevantResults { get; set; }

        [LABEL(LanguageEnum.es, "Duración (meses)")]
        [RDFProperty("http://w3id.org/roh/durationMonths")]
        public string Roh_durationMonths { get; set; }

        [LABEL(LanguageEnum.es, "Fecha de finalización")]
        [RDFProperty("http://vivoweb.org/ontology/core#end")]
        public DateTime? Vivo_end { get; set; }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://w3id.org/roh/crisIdentifier")]
        public string Roh_crisIdentifier { get; set; }

        [LABEL(LanguageEnum.es, "Cuantía total")]
        [RDFProperty("http://w3id.org/roh/monetaryAmount")]
        public float? Roh_monetaryAmount { get; set; }

        [LABEL(LanguageEnum.es, "Duración (años)")]
        [RDFProperty("http://w3id.org/roh/durationYears")]
        public string Roh_durationYears { get; set; }

        [LABEL(LanguageEnum.es, "Nº de investigadores/as")]
        [RDFProperty("http://w3id.org/roh/researchersNumber")]
        public int? Roh_researchersNumber { get; set; }

        [LABEL(LanguageEnum.es, "Nº de personas/año")]
        [RDFProperty("http://w3id.org/roh/peopleYearNumber")]
        public int? Roh_peopleYearNumber { get; set; }

        [LABEL(LanguageEnum.es, "Nombre del proyecto")]
        [RDFProperty("http://w3id.org/roh/title")]
        public string Roh_title { get; set; }
    }

    public class GeographicRegion : GnossOCBase
    {

        public GeographicRegion() : base() { }

        public GeographicRegion(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

        }

        public virtual string RdfType { get { return "http://vivoweb.org/ontology/core#GeographicRegion"; } }
        public virtual string RdfsLabel { get { return "http://vivoweb.org/ontology/core#GeographicRegion"; } }
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [LABEL(LanguageEnum.es, "Ámbito geográfico")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }
    }

    public class Modality : GnossOCBase
    {

        public Modality() : base() { }

        public Modality(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/Modality"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/Modality"; } }
        [LABEL(LanguageEnum.es, "Modalidad")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }

        [LABEL(LanguageEnum.es, "Identificador de modalidad")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }
    }

    public class ParticipationType : GnossOCBase
    {

        public ParticipationType() : base() { }

        public ParticipationType(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/ParticipationType"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/ParticipationType"; } }
        [LABEL(LanguageEnum.es, "Tipo de participación")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }

        [LABEL(LanguageEnum.es, "Identificador tipo de participación")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }
    }

    public class BFO_0000023 : GnossOCBase
    {

        public BFO_0000023() : base() { }

        public BFO_0000023(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propRoh_dedicationRegime = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/dedicationRegime");
            if (propRoh_dedicationRegime != null && propRoh_dedicationRegime.PropertyValues.Count > 0)
            {
                //this.Roh_dedicationRegime = new DedicationRegime(propRoh_dedicationRegime.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propRoh_participationType = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/participationType");
            if (propRoh_participationType != null && propRoh_participationType.PropertyValues.Count > 0)
            {
                this.Roh_participationType = new ParticipationType(propRoh_participationType.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_participationTypeOther = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/participationTypeOther"));
            this.Roh_contributionGradeOther = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/contributionGradeOther"));
            this.Roh_applicantContribution = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/applicantContribution"));
            SemanticPropertyModel propRoh_roleOf = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/roleOf");
            if (propRoh_roleOf != null && propRoh_roleOf.PropertyValues.Count > 0)
            {
                this.Roh_roleOf = new Person(propRoh_roleOf.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_order = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/order"));
        }

        public virtual string RdfType { get { return "http://purl.obolibrary.org/obo/BFO_0000023"; } }
        public virtual string RdfsLabel { get { return "http://purl.obolibrary.org/obo/BFO_0000023"; } }

        [LABEL(LanguageEnum.es, "Grado de contribución")]
        [RDFProperty("http://w3id.org/roh/contributionGrade")]
        public object Roh_contributionGrade { get; set; }
        public string IdRoh_contributionGrade { get; set; }

        [LABEL(LanguageEnum.es, "Régimen de dedicación")]
        [RDFProperty("http://w3id.org/roh/dedicationRegime")]
        //public DedicationRegime Roh_dedicationRegime { get; set; }
        public string IdRoh_dedicationRegime { get; set; }

        [LABEL(LanguageEnum.es, "Tipo de participación")]
        [RDFProperty("http://w3id.org/roh/participationType")]
        public ParticipationType Roh_participationType { get; set; }
        public string IdRoh_participationType { get; set; }

        [LABEL(LanguageEnum.es, "Tipo de participación, otros")]
        [RDFProperty("http://w3id.org/roh/participationTypeOther")]
        public string Roh_participationTypeOther { get; set; }

        [LABEL(LanguageEnum.es, "Grado de contribución, otros")]
        [RDFProperty("http://w3id.org/roh/contributionGradeOther")]
        public string Roh_contributionGradeOther { get; set; }

        [LABEL(LanguageEnum.es, "Aportación del solicitante")]
        [RDFProperty("http://w3id.org/roh/applicantContribution")]
        public string Roh_applicantContribution { get; set; }

        [LABEL(LanguageEnum.es, "Rol de")]
        [RDFProperty("http://w3id.org/roh/roleOf")]
        public Person Roh_roleOf { get; set; }
        public string IdRoh_roleOf { get; set; }

        [LABEL(LanguageEnum.es, "Posición")]
        [RDFProperty("http://w3id.org/roh/order")]
        public string Roh_order { get; set; }
    }

    public class Person : GnossOCBase
    {

        public Person() : base() { }

        public Person(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            SemanticPropertyModel propRoh_hasRole = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasRole");
            if (propRoh_hasRole != null && propRoh_hasRole.PropertyValues.Count > 0)
            {
                this.Roh_hasRole = new Organization(propRoh_hasRole.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_ORCID = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/ORCID"));
            SemanticPropertyModel propFoaf_nick = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/nick");
            this.Foaf_nick = new List<string>();
            if (propFoaf_nick != null && propFoaf_nick.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_nick.PropertyValues)
                {
                    this.Foaf_nick.Add(propValue.Value);
                }
            }
            this.Foaf_firstName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/firstName"));
            this.Foaf_name = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/name"));
            this.Foaf_lastName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/lastName"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
        }

        public Person(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propRoh_hasRole = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/hasRole");
            if (propRoh_hasRole != null && propRoh_hasRole.PropertyValues.Count > 0)
            {
                this.Roh_hasRole = new Organization(propRoh_hasRole.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_ORCID = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/ORCID"));
            SemanticPropertyModel propFoaf_nick = pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/nick");
            this.Foaf_nick = new List<string>();
            if (propFoaf_nick != null && propFoaf_nick.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propFoaf_nick.PropertyValues)
                {
                    this.Foaf_nick.Add(propValue.Value);
                }
            }
            this.Foaf_firstName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/firstName"));
            this.Foaf_name = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/name"));
            this.Foaf_lastName = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://xmlns.com/foaf/0.1/lastName"));
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
        }

        public virtual string RdfType { get { return "http://xmlns.com/foaf/0.1/Person"; } }
        public virtual string RdfsLabel { get { return "http://xmlns.com/foaf/0.1/Person"; } }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://w3id.org/roh/crisIdentifier")]
        public string Roh_crisIdentifier { get; set; }

        [LABEL(LanguageEnum.es, "Tiene rol")]
        [RDFProperty("http://w3id.org/roh/hasRole")]
        public Organization Roh_hasRole { get; set; }
        public string IdRoh_hasRole { get; set; }

        [LABEL(LanguageEnum.es, "ORCID")]
        [RDFProperty("http://w3id.org/roh/ORCID")]
        public string Roh_ORCID { get; set; }

        [LABEL(LanguageEnum.es, "Firma")]
        [RDFProperty("http://xmlns.com/foaf/0.1/nick")]
        public List<string> Foaf_nick { get; set; }

        [LABEL(LanguageEnum.es, "Nombre")]
        [RDFProperty("http://xmlns.com/foaf/0.1/firstName")]
        public string Foaf_firstName { get; set; }

        [LABEL(LanguageEnum.es, "Nombre completo")]
        [RDFProperty("http://xmlns.com/foaf/0.1/name")]
        public string Foaf_name { get; set; }

        [LABEL(LanguageEnum.es, "Apellidos")]
        [RDFProperty("http://xmlns.com/foaf/0.1/lastName")]
        public string Foaf_lastName { get; set; }
    }

    public class ProjectClassification : GnossOCBase
    {

        public ProjectClassification() : base() { }

        public ProjectClassification(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            //this.Roh_projectClassificationNode = new List<Concept>();
            SemanticPropertyModel propRoh_projectClassificationNode = pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/projectClassificationNode");
            if (propRoh_projectClassificationNode != null && propRoh_projectClassificationNode.PropertyValues.Count > 0)
            {
                foreach (SemanticPropertyModel.PropertyValue propValue in propRoh_projectClassificationNode.PropertyValues)
                {
                    if (propValue.RelatedEntity != null)
                    {
                        //Concept roh_projectClassificationNode = new Concept(propValue.RelatedEntity, idiomaUsuario);
                        //this.Roh_projectClassificationNode.Add(roh_projectClassificationNode);
                    }
                }
            }
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/ProjectClassification"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/ProjectClassification"; } }

        [LABEL(LanguageEnum.es, "Nodo de clasificación del proyecto")]
        [RDFProperty("http://w3id.org/roh/projectClassificationNode")]
        //public List<Concept> Roh_projectClassificationNode { get; set; }
        public List<string> IdsRoh_projectClassificationNode { get; set; }
    }

    public class Funding : GnossOCBase
    {

        public Funding() : base() { }

        public Funding(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Roh_grantsPercentage = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/grantsPercentage"));
            this.Vivo_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#identifier"));
            this.Roh_mixedPercentage = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/mixedPercentage"));
            this.Roh_creditPercentage = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/creditPercentage"));
            this.Vivo_description = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://vivoweb.org/ontology/core#description"));
            this.Roh_monetaryAmount = GetNumberFloatPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/monetaryAmount"));
        }

        public virtual string RdfType { get { return "http://w3id.org/roh/Funding"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/Funding"; } }

        [LABEL(LanguageEnum.es, "Porcentaje en subvención")]
        [RDFProperty("http://w3id.org/roh/grantsPercentage")]
        public float? Roh_grantsPercentage { get; set; }

        [LABEL(LanguageEnum.es, "Cód. según financiadora")]
        [RDFProperty("http://vivoweb.org/ontology/core#identifier")]
        public string Vivo_identifier { get; set; }

        [LABEL(LanguageEnum.es, "Porcentaje mixto")]
        [RDFProperty("http://w3id.org/roh/mixedPercentage")]
        public float? Roh_mixedPercentage { get; set; }

        [LABEL(LanguageEnum.es, "Porcentaje en crédito")]
        [RDFProperty("http://w3id.org/roh/creditPercentage")]
        public float? Roh_creditPercentage { get; set; }

        [LABEL(LanguageEnum.es, "Descripción del programa")]
        [RDFProperty("http://vivoweb.org/ontology/core#description")]
        public string Vivo_description { get; set; }

        [LABEL(LanguageEnum.es, "Cuantía del programa")]
        [RDFProperty("http://w3id.org/roh/monetaryAmount")]
        public float? Roh_monetaryAmount { get; set; }
    }

    public class Organization : GnossOCBase
    {

        public Organization() : base() { }

        public Organization(SemanticResourceModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.RootEntities[0].Entity.Uri;
            SemanticPropertyModel propVcard_hasAddress = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasAddress");
            if (propVcard_hasAddress != null && propVcard_hasAddress.PropertyValues.Count > 0)
            {
                this.Vcard_hasAddress = new Address(propVcard_hasAddress.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propDc_type = pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/type");
            if (propDc_type != null && propDc_type.PropertyValues.Count > 0)
            {
                this.Dc_type = new OrganizationType(propDc_type.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Roh_otherTypeMoreInfo = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/otherTypeMoreInfo"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public Organization(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propVcard_hasAddress = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasAddress");
            if (propVcard_hasAddress != null && propVcard_hasAddress.PropertyValues.Count > 0)
            {
                this.Vcard_hasAddress = new Address(propVcard_hasAddress.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propDc_type = pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/type");
            if (propDc_type != null && propDc_type.PropertyValues.Count > 0)
            {
                this.Dc_type = new OrganizationType(propDc_type.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Roh_crisIdentifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/crisIdentifier"));
            this.Roh_otherTypeMoreInfo = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/otherTypeMoreInfo"));
            this.Roh_title = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://w3id.org/roh/title"));
        }

        public virtual string RdfType { get { return "http://xmlns.com/foaf/0.1/Organization"; } }
        public virtual string RdfsLabel { get { return "http://xmlns.com/foaf/0.1/Organization"; } }
        [LABEL(LanguageEnum.es, "Dirección")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#hasAddress")]
        public Address Vcard_hasAddress { get; set; }

        [LABEL(LanguageEnum.es, "Tipo de entidad")]
        [RDFProperty("http://purl.org/dc/elements/1.1/type")]
        public OrganizationType Dc_type { get; set; }
        public string IdDc_type { get; set; }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://w3id.org/roh/crisIdentifier")]
        public string Roh_crisIdentifier { get; set; }

        [LABEL(LanguageEnum.es, "Tipo de entidad, otros")]
        [RDFProperty("http://w3id.org/roh/otherTypeMoreInfo")]
        public string Roh_otherTypeMoreInfo { get; set; }

        [LABEL(LanguageEnum.es, "Nombre")]
        [RDFProperty("http://w3id.org/roh/title")]
        public string Roh_title { get; set; }
    }

    public class Address : GnossOCBase
    {

        public Address() : base() { }

        public Address(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propVcard_hasRegion = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasRegion");
            if (propVcard_hasRegion != null && propVcard_hasRegion.PropertyValues.Count > 0)
            {
                this.Vcard_hasRegion = new Feature(propVcard_hasRegion.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            SemanticPropertyModel propVcard_hasCountryName = pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#hasCountryName");
            if (propVcard_hasCountryName != null && propVcard_hasCountryName.PropertyValues.Count > 0)
            {
                this.Vcard_hasCountryName = new Feature(propVcard_hasCountryName.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Vcard_locality = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("https://www.w3.org/2006/vcard/ns#locality"));
        }

        public virtual string RdfType { get { return "https://www.w3.org/2006/vcard/ns#Address"; } }
        public virtual string RdfsLabel { get { return "https://www.w3.org/2006/vcard/ns#Address"; } }

        [LABEL(LanguageEnum.es, "C. Autón./Reg. entidad")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#hasRegion")]
        public Feature Vcard_hasRegion { get; set; }
        public string IdVcard_hasRegion { get; set; }

        [LABEL(LanguageEnum.es, "País entidad")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#hasCountryName")]
        public Feature Vcard_hasCountryName { get; set; }
        public string IdVcard_hasCountryName { get; set; }

        [LABEL(LanguageEnum.es, "Ciudad entidad")]
        [RDFProperty("https://www.w3.org/2006/vcard/ns#locality")]
        public string Vcard_locality { get; set; }
    }

    public class Feature : GnossOCBase
    {

        public Feature() : base() { }

        public Feature(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            SemanticPropertyModel propGn_parentFeature = pSemCmsModel.GetPropertyByPath("http://www.geonames.org/ontology#parentFeature");
            if (propGn_parentFeature != null && propGn_parentFeature.PropertyValues.Count > 0)
            {
                this.Gn_parentFeature = new Feature(propGn_parentFeature.PropertyValues[0].RelatedEntity, idiomaUsuario);
            }
            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Gn_name = new Dictionary<LanguageEnum, string>();
            this.Gn_name.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://www.geonames.org/ontology#name")));

            this.Gn_featureCode = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://www.geonames.org/ontology#featureCode"));
        }

        public virtual string RdfType { get { return "http://www.geonames.org/ontology#Feature"; } }
        public virtual string RdfsLabel { get { return "http://www.geonames.org/ontology#Feature"; } }
        [LABEL(LanguageEnum.es, "Rasgo padre")]
        [RDFProperty("http://www.geonames.org/ontology#parentFeature")]
        public Feature Gn_parentFeature { get; set; }
        public string IdGn_parentFeature { get; set; }

        [LABEL(LanguageEnum.es, "Identificador")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [LABEL(LanguageEnum.es, "Nombre")]
        [RDFProperty("http://www.geonames.org/ontology#name")]
        public Dictionary<LanguageEnum, string> Gn_name { get; set; }

        [LABEL(LanguageEnum.es, "Código de rasgo")]
        [RDFProperty("http://www.geonames.org/ontology#featureCode")]
        public string Gn_featureCode { get; set; }
    }

    public class OrganizationType : GnossOCBase
    {

        public OrganizationType() : base() { }

        public OrganizationType(SemanticEntityModel pSemCmsModel, LanguageEnum idiomaUsuario) : base()
        {
            this.mGNOSSID = pSemCmsModel.Entity.Uri;
            this.mURL = pSemCmsModel.Properties.FirstOrDefault(p => p.PropertyValues.Any(prop => prop.DownloadUrl != null))?.FirstPropertyValue.DownloadUrl;
            this.Dc_identifier = GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/identifier"));
            this.Dc_title = new Dictionary<LanguageEnum, string>();
            this.Dc_title.Add(idiomaUsuario, GetPropertyValueSemCms(pSemCmsModel.GetPropertyByPath("http://purl.org/dc/elements/1.1/title")));

        }

        public virtual string RdfType { get { return "http://w3id.org/roh/OrganizationType"; } }
        public virtual string RdfsLabel { get { return "http://w3id.org/roh/OrganizationType"; } }
        [LABEL(LanguageEnum.es, "Identificador del tipo de entidad")]
        [RDFProperty("http://purl.org/dc/elements/1.1/identifier")]
        public string Dc_identifier { get; set; }

        [LABEL(LanguageEnum.es, "Tipo de entidad")]
        [RDFProperty("http://purl.org/dc/elements/1.1/title")]
        public Dictionary<LanguageEnum, string> Dc_title { get; set; }
    }
}
