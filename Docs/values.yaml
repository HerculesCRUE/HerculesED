init:
  name: "edma-01"
  ##############################
  # storageClassName DE UNIVERISDAD DE MURCIA
  #storageClassName: "nfs-client"
  ##############################
  # DIFERENTES NAMESPACES
  #namespace: "edma-hercules"
  namespace: "test-rabbitmq"
  ##############################
  # DIFERENTES POLITICAS DE PULL
  pullpolicy: Always
  #pullpolicy: IfNotPresent
  ##############################
  secret: "regcred"
  volNameState: "voledma"
  replicaCount: 1
  idiomas: "es|Español,en|English"
  mulIdiomas: "es|Español,en|English,ca|Català,eu|Euskara,gl|Galego,fr|Français"
  volumeClaimStorage01: "30Gi"
  volumeClaimStorage02: "5Gi"
  urlBase: "http://serviciosedma.gnoss.com"
  conecctionType: "2"
  serviceaccount: test-edma-hercules

servicios:
  nombreClusterIp: "servicios-gnoss"

ingress:
  services: 80
  web: 80
  hostService: "serviciosedma.gnoss.com"
  hostWeb: "edma.gnoss.com"

serviciosWin:
  intervalo: "100"
  restartPolicy: Always

###########################
#                         #
#    VALUES PARA NGINX    #
#                         #
###########################

nginx:
  image: "gnoss/nginx"
  tag: "latest" 
  port1: 80
  port2: 8080
  nombreServicio: "serviciosedma"
  tipoServicio: "ClusterIP"
  protocolo: TCP

######################################
#                                    #
#     VALUES PARA BASES DE DATOS     #
#                                    #
######################################

postgres:
  image: "postgres"
  tag: "11.15"
  password: "ApHSTCRBwX"
  portSql: 5432
  targetPortSql: 5432
  cadenaConexionAcid: "Host=servicios-gnoss;Port=5432;Database=postgres;Username=postgres;Password=ApHSTCRBwX;Persist Security Info = true"
  cadenaConexionBase: "Host=servicios-gnoss;Port=5432;Database=postgres;Username=postgres;Password=ApHSTCRBwX;Persist Security Info = true"
  cadenaConexionOauth: "Host=servicios-gnoss;Port=5432;Database=postgres;Username=postgres;Password=ApHSTCRBwX;Persist Security Info = true"

virtuoso:
  image: "openlink/virtuoso-opensource-7"
  tag: "latest"
  password: "mysecret"
  portSparql: 8890
  targetPortSparql: 8890
  portIsql: 1111
  targetPortIsql: 1111
  cadenaConexion: "HOST=servicios-gnoss:1111;UID=dba;PWD=mysecret;Pooling=true;Max Pool Size=10;Connection Lifetime=15000"
  maxClientConnecction: "50"
  serverIdString: "virtuoso"
  xAnyNormalization: "3"
  dirsAllowed: ./dumps
  maxClientConnectionsVirt: "100"
  maxDirtyBuffers: "60000"
  numberOfBuffers: "100000"

redis:
  image: "redis"
  tag: "3.2-alpine"
  port: 6379
  targetPort: 6379
  redisBd: "2"
  redisTimeout: "60"
  recursosBd: "3"
  recursosTimeout: "60"
  liveusuariosBd: "2"
  liveusuariosTimeout: "60"

rabbitmq:
  #cadenaConexion: "amqp://gnoss:gnoss1234@rabbitmq:5672/"
  cadenaConexion: "amqp://gnoss:gnoss1234@rabbitmq-headless:5672/"
#  replicaCount: 1
#  volNameState: volrabbitmq
#  volumeClaimStorage: "5Gi"

######################################
#                                    #
#     VALUES PARA SERVICIOS WEB      #
#                                    #
######################################

facetas:
  replicas: 1
  image: "gnoss/facets"
  tag: "latest"
  port: 80
  restartPolicy: Always

web:
  replicas: 1
  image: "gnoss/web"
  tag: "latest"
  port: 80
  puertoSocketsOffline: "8245"
  urlLogin: "http://serviciosedma.gnoss.com/login"
  urlFacetas: "http://facetas/CargadorFacetas"
  urlResultados: "http://resultados/CargadorResultados"
  urlFacetasExterno: "http://serviciosedma.gnoss.com/facetas/CargadorFacetas"
  urlResultadosExterno: "http://serviciosedma.gnoss.com/resultadosCargadorResultados"
  autoCompletar: "http://serviciosedma.gnoss.com/autocompletar/autocompletar"
  urlInterno: "http://interno"
  urlArchivos: "http://archivo/"
  urlDocuments: "http://documents/GestorDocumental"
  urlContent: "http://serviciosedma.gnoss.com/content"
  dominio: "edma.gnoss.com"
  connectionType: "2"
  https: "false"
  desplegadoDocker: "true"
  restartPolicy: Always


login:
  replicas: 1
  image: "gnoss/login"
  tag: "latest"
  port: 80
  urlServiceInDomain: "login/"
  restartPolicy: Always

resultados:
  replicas: 1
  image: "gnoss/results"
  tag: "latest"
  port: 80
  urlServiceInDomain: "login/"
  restartPolicy: Always

interno:
  replicas: 1
  image: "gnoss/intern"
  tag: "latest"
  port1: 80
  port2: 81
  restartPolicy: Always

archivo:
  replicas: 1
  image: "gnoss/ontologies"
  tag: "latest"
  port: 80
  rutaOntologias: "Ontologias/Archivos"
  restartPolicy: Always

documents:
  replicas: 1
  image: "gnoss/documents"
  tag: "latest"
  port: 80
  restartPolicy: Always

autocompletar:
  replicas: 1
  image: "gnoss/autocomplete"
  tag: "latest"
  port: 80
  restartPolicy: Always

despliegues:
  replicas: 1
  image: "gnoss/despliegues"
  tag: "latest"
  port: 80
  puertoSocketsOffline: "1745"
  urlFacetas: "http://facetas/CargadorFacetas"
  urlResultados: "http://resultados/CargadorResultados"
  urlFacetasExterno: "http://serviciosedma.gnoss.com/facetas/CargadorFacetas"
  urlResultadosExterno: "http://serviciosedma.gnoss.com/resultadosCargadorResultados"
  dominio: "edma.gnoss.com"
  connectionType: "2"  
  restartPolicy: Always

api:
  replicas: 1
  image: "gnoss/api"
  tag: "latest"
  port: 80
  puertoSocketsOffline: "1745"
  urlLogin: "http://serviciosedma.gnoss.com/login"
  urlFacetas: "http://facetas/CargadorFacetas"
  urlResultados: "http://resultados/CargadorResultados"
  urlFacetasExterno: "http://serviciosedma.gnoss.com/facetas/CargadorFacetas"
  urlResultadosExterno: "http://serviciosedma.gnoss.com/resultadosCargadorResultados"
  autoCompletar: "http://serviciosedma.gnoss.com/autocompletar/autocompletar"
  urlInterno: "http://interno"
  urlArchivos: "http://archivo/"
  urlDocuments: "http://documents/GestorDocumental"
  urlContent: "http://serviciosedma.gnoss.com/content"
  urlOauth: "http://oauth/"
  connectionType: "2"
  hilosAplicacion: "200"
  restartPolicy: Always

oauth:
  replicas: 1
  image: "gnoss/oauth"
  tag: "latest"
  port: 80
  puertoSocketsOffline: "1745"
  urlLogin: "http://serviciosedma.gnoss.com/login"
  urlFacetas: "http://facetas/CargadorFacetas"
  urlResultados: "http://resultados/CargadorResultados"  
  urlFacetasExterno: "http://serviciosedma.gnoss.com/facetas/CargadorFacetas"
  urlResultadosExterno: "http://serviciosedma.gnoss.com/resultadosCargadorResultados"
  autoCompletar: "http://serviciosedma.gnoss.com/autocompletar/autocompletar"
  urlInterno: "http://interno"
  urlArchivos: "http://archivo/"
  urlDocuments: "http://documents/GestorDocumental"
  urlContent: "http://serviciosedma.gnoss.com/content"
  urlOauth: "http://oauth/"
  connectionType: "2"
  hilosAplicacion: "200"
  restartPolicy: Always
  
editorcv:
  replicas: 1
  image: "gnoss/edma-editorcv"
  tag: "latest"
  port: 80
  restartPolicy: Always
  urlEnriquecimiento: "http://herculesapi.elhuyar.eus"
  urlImportadorExportador: "http://importadorcv"
  urlSgi: "https://sgi.demo.treelogic.com"
  denormalizerQueueRabbit: "denormalizerEdmaQueue"
  logPath: "/app/logs"
  usernameEsbCsp: "gestor-csp"
  passwordEsbCsp: "gestor-csp-2021"
  usernameEsbPrc: "gestor-prc"
  passwordEsbPrc: "gestor-prc-2021"
  maxMonthsValidationDocument: "36"
  maxMonthsValidationProjectsDocument: "36"

servicioexterno:
  replicas: 1
  image: "gnoss/edma-servicioexterno"
  tag: "latest"
  port: 80
  restartPolicy: Always
  logPath: "/app/logs"
  queueRabbit: "fuentesExternasQueue"
  urlSimilarity: "http://herculesapi.elhuyar.eus/similarity/query_similar"
  
wosapi:
  replicas: 1
  image: "gnoss/edma-wosapi"
  tag: "latest"
  port: 80
  restartPolicy: Always
  logPath: "/app/logs"
  
crossrefapi:
  replicas: 1
  image: "gnoss/edma-crossrefapi"
  tag: "latest"
  port: 80
  restartPolicy: Always
  logPath: "/app/logs"

opencitationsapi:
  replicas: 1
  image: "gnoss/edma-opencitationsapi"
  tag: "latest"
  port: 80
  restartPolicy: Always
  logPath: "/app/logs"

scopusapi:
  replicas: 1
  image: "gnoss/edma-scopusapi"
  tag: "latest"
  port: 80
  restartPolicy: Always
  logPath: "/app/logs"

semanticscholarapi:
  replicas: 1
  image: "gnoss/edma-semanticscholarapi"
  tag: "latest"
  port: 80
  restartPolicy: Always
  logPath: "/app/logs"

zenodoapi:
  replicas: 1
  image: "gnoss/edma-zenodoapi"
  tag: "latest"
  port: 80
  restartPolicy: Always
  logPath: "/app/logs"
  urlZenodo: "https://zenodo.org/api/records/"
  urlBaseEnriquecimiento: "http://herculesapi.elhuyar.eus"

publicationapi:
  replicas: 1
  image: "gnoss/edma-publicationapi"
  tag: "latest"
  port: 80
  restartPolicy: Always
  logPath: "/app/logs"
  urlPublicacion: "http://publicationapi/"
  urlZenodo: "http://zenodoapi/"
  urlSemanticScholar: "http://semanticscholarapi/"
  urlScopus: "http://scopusapi/"
  urlOpenCitations: "http://opencitationsapi/"
  urlCrossRef: "http://crossrefapi/"
  urlWos: "http://wosapi/"
  urlOpenAire: "http://openaireapi/"
  urlEnriquecimiento: "http://herculesapi.elhuyar.eus"

figshareapi:
  replicas: 1
  image: "gnoss/edma-figshareapi"
  tag: "latest"
  port: 80
  restartPolicy: Always
  logPath: "/app/logs"
  urlBase: "https://api.figshare.com/v2"
  urlBaseEnriquecimiento: "http://herculesapi.elhuyar.eus"
  token: ""

githubapi:
  replicas: 1
  image: "gnoss/edma-githubapi"
  tag: "latest"
  port: 80
  restartPolicy: Always
  logPath: "/app/logs"
  urlBase: "https://api.github.com"
  urlBaseEnriquecimiento: "http://herculesapi.elhuyar.eus"

openaireapi:
  replicas: 1
  image: "gnoss/edma-openaireapi"
  tag: "latest"
  port: 80
  restartPolicy: Always
  logPath: "/app/logs"
  urlOpenAire: "https://api.openaire.eu"

importadorcv:
  replicas: 1
  image: "gnoss/edma-importadorcv"
  tag: "latest"
  port: 80
  restartPolicy: Always
  logPath: "/app/logs"
  usuario_PDF: "um01"
  PSS_PDF: "dcgp017SU8rq"
  denormalizerQueueRabbit: "denormalizerEdmaQueue"

graphicengine:
  replicas: 1
  image: "gnoss/edma-graphicengine"
  tag: "latest"
  port: 80
  restartPolicy: Always
  logPath: "/app/logs"

#######################################
#                                     #
#    VALUES PARA SERVICIOS WINDOWS    #
#                                     #
#######################################

# OLD_mail #
mail:
  image: gnoss/gnoss.backgroundtask.mail.opencore
  tag: 0.0.1_beta
  
# OLD_REFRESCO_CACHE #
cacherefresh:
  image: gnoss/gnoss.backgroundtask.cacherefresh.opencore
  tag: 0.0.1_beta
  urlFacetas: "https://serviciosedma.gnoss.com/facetas/CargadorFacetas"
  urlResultados: "https://serviciosedma.gnoss.com/resultados/CargadorResultados"
  conecctionType: "2"


# OLD_DEPLOYMENT_LIVE_USUARIOS #
communitywall:
  image: gnoss/gnoss.backgroundtask.communitywall.opencore
  tag: 0.0.1_beta

# OLD_REPARTO_COLAS #
distributor:
  image: gnoss/gnoss.backgroundtask.distributor.opencore
  tag: 0.0.1_beta

# OLD_BASE #
searchgraphgeneration:
  image: gnoss/gnoss.backgroundtask.searchgraphgeneration.opencore
  tag: 0.0.1_beta

# OLD_BASE_USUARIOS #
socialsearchgraphgeneration:
  image: gnoss/gnoss.backgroundtask.socialsearchgraphgeneration.opencore
  tag: 0.0.1_beta

# OLD_REFRESCO_CACHE_BANDEJA_MENSAJES #
socialcacherefresh:
  image: gnoss/gnoss.backgroundtask.socialcacherefresh.opencore
  tag: 0.0.1_beta
  urlFacetas: "https://serviciosedma.gnoss.com/facetas/CargadorFacetas"
  urlResultados: "https://serviciosedma.gnoss.com/resultados/CargadorResultados"

# OLD_LIVE_USUARIOS_ESPECIFICOS #
userwall:
  image: gnoss/gnoss.backgroundtask.userwall.opencore
  tag: 0.0.1_beta

# OLD_LIVE_EXTRA #
visitcluster:
  image: gnoss/gnoss.backgroundtask.visitcluster.opencore
  tag: 0.0.1_beta

# OLD_SOCKETS_OFFLINE #
visitregistry:
  image: gnoss/gnoss.backgroundtask.visitregistry.opencore
  tag: 0.0.1_beta
  port: 1745
  protocol: TCP

rabbitconsume:
  replicas: 1
  image: "gnoss/edma-rabbitconsume"
  tag: "latest"
  port: 80
  restartPolicy: Always
  LogPath: "/app/logs"
  QueueRabbit: "fuentesExternasQueue"
  UrlPublicacion: "http://publicationapi/"
  UrlZenodo: "http://zenodoapi/"
  UrlFigShare: "http://figshareapi/"
  UrlGitHub: "http://githubapi/"
  DirectorioEscritura: "/app/logs/FileDatosOut/"
  
desnormalizador:
  replicas: 1
  image: "gnoss/edma-desnormalizador"
  tag: "latest"
  port: 80
  restartPolicy: Always
  LogPath: "/app/logs"
  DenormalizerQueueRabbit: "denormalizerEdmaQueue"
  DirectorioEscritura: "/app/desnormalizador/"
  DenormalizerCronExpression: "0 0 2 ? * *"

cargafuentesexternas:
  replicas: 1
  image: "gnoss/edma-cargafuentesexternas"
  tag: "latest"
  port: 80
  restartPolicy: Always
  LogPath: "/app/logs"
  DenormalizerQueueRabbit: "denormalizerEdmaQueue"
  DirectorioEscritura: "/app/logs/write/"
  DirectorioLectura: "/app/logs/read/"
